{"version":3,"sources":["./node_modules/chartist/dist/chartist.js","./src/app/layouts/admin-layout/admin-layout.module.ts","./node_modules/@angular/cdk/esm5/coercion.es5.js","./node_modules/rxjs/_esm5/operators/take.js","./node_modules/@angular/cdk/esm5/platform.es5.js","./node_modules/rxjs/_esm5/scheduler/AsyncAction.js","./node_modules/rxjs/_esm5/scheduler/Action.js","./node_modules/rxjs/_esm5/scheduler/async.js","./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js","./node_modules/rxjs/_esm5/Scheduler.js","./node_modules/@angular/cdk/esm5/a11y.es5.js","./node_modules/rxjs/_esm5/observable/FromEventObservable.js","./node_modules/rxjs/_esm5/observable/fromEvent.js","./node_modules/rxjs/_esm5/operators/audit.js","./node_modules/rxjs/_esm5/observable/timer.js","./node_modules/rxjs/_esm5/observable/TimerObservable.js","./node_modules/rxjs/_esm5/util/isNumeric.js","./node_modules/rxjs/_esm5/util/isDate.js","./node_modules/rxjs/_esm5/operators/auditTime.js","./node_modules/@angular/cdk/esm5/scrolling.es5.js","./node_modules/@angular/cdk/esm5/bidi.es5.js","./node_modules/@angular/cdk/esm5/portal.es5.js","./node_modules/@angular/cdk/esm5/overlay.es5.js","./node_modules/@angular/material/esm5/core.es5.js","./node_modules/rxjs/_esm5/operators/startWith.js","./node_modules/rxjs/_esm5/observable/concat.js","./node_modules/rxjs/_esm5/operators/takeUntil.js","./node_modules/rxjs/_esm5/operators/combineLatest.js","./node_modules/rxjs/_esm5/observable/fromEventPattern.js","./node_modules/rxjs/_esm5/observable/FromEventPatternObservable.js","./node_modules/@angular/cdk/esm5/layout.es5.js","./node_modules/rxjs/_esm5/observable/combineLatest.js","./node_modules/@angular/material/esm5/tooltip.es5.js","./node_modules/@angular/cdk/esm5/keycodes.es5.js","./node_modules/@angular/material/tooltip/typings/index.ngfactory.js.pre-build-optimizer.js","./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","./node_modules/@angular/material/esm5/button.es5.js","./node_modules/@angular/material/button/typings/index.ngfactory.js.pre-build-optimizer.js","./node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","./node_modules/@angular/material/button/typings/index.d.ts.MatAnchor.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.ngfactory.js.pre-build-optimizer.js","./src/app/dashboard/dashboard.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/dashboard/dashboard.component.html","./node_modules/@angular/material/esm5/form-field.es5.js","./node_modules/@angular/material/form-field/typings/index.ngfactory.js.pre-build-optimizer.js","./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","./node_modules/@angular/material/esm5/input.es5.js","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.ngfactory.js.pre-build-optimizer.js","./src/app/user-profile/user-profile.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/user-profile/user-profile.component.html","./src/app/table-list/table-list.component.ts","./src/app/table-list/table-list.component.ngfactory.js.pre-build-optimizer.js","./src/app/table-list/table-list.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/table-list/table-list.component.html","./src/app/typography/typography.component.ts","./src/app/typography/typography.component.ngfactory.js.pre-build-optimizer.js","./src/app/typography/typography.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/typography/typography.component.html","./src/app/icons/icons.component.ts","./src/app/icons/icons.component.ngfactory.js.pre-build-optimizer.js","./src/app/icons/icons.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/icons/icons.component.html","./src/app/maps/maps.component.ts","./src/app/maps/maps.component.ngfactory.js.pre-build-optimizer.js","./src/app/maps/maps.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/maps/maps.component.html","./src/app/notifications/notifications.component.ts","./src/app/notifications/notifications.component.ngfactory.js.pre-build-optimizer.js","./src/app/notifications/notifications.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/notifications/notifications.component.html","./src/app/upgrade/upgrade.component.ts","./src/app/upgrade/upgrade.component.ngfactory.js.pre-build-optimizer.js","./src/app/upgrade/upgrade.component.css.shim.ngstyle.js.pre-build-optimizer.js","./src/app/upgrade/upgrade.component.html","./src/app/layouts/admin-layout/admin-layout.module.ngfactory.js.pre-build-optimizer.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","root","factory","this","Chartist","version","window","document","namespaces","svg","xmlns","xhtml","xlink","ct","noop","n","alphaNumerate","String","fromCharCode","extend","target","i","source","sourceProp","arguments","length","prop","Array","replaceAll","str","subStr","newSubStr","replace","RegExp","ensureUnit","value","unit","quantity","input","match","exec","undefined","querySelector","query","Node","times","apply","sum","previous","current","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","cb","result","Math","max","map","e","forEach","index","args","roundWithPrecision","digits","precision","pow","round","escapingMap","&","<",">","\"","'","serialize","data","JSON","stringify","Object","keys","reduce","key","deserialize","parse","createSvg","container","width","height","className","prototype","slice","call","querySelectorAll","filter","getAttributeNS","removeChild","Svg","attr","addClass","_node","style","appendChild","normalizeData","reverse","multi","labelCount","output","raw","normalized","series","getDataArray","every","labels","push","reverseData","safeHasProperty","object","property","hasOwnProperty","isDataHoleValue","isNaN","recursiveConvert","multiValue","getNumberOrUndefined","y","x","normalizePadding","padding","fallback","top","right","bottom","left","getMetaData","meta","orderOfMagnitude","floor","log","abs","LN10","projectLength","axisLength","bounds","range","getAvailableHeight","options","chartPadding","axisX","offset","getHighLow","dimension","highLow","high","toUpperCase","Number","MAX_VALUE","low","findHigh","findLow","recursiveHighLow","referenceValue","min","isNumeric","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","p","q","f","divisor","x1","x2","getBounds","scaleMinSpace","onlyInteger","newMin","newMax","optimizationCounter","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","Error","EPSILON","safeIncrement","increment","values","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","chartRect","y1","y2","position","createGrid","axis","group","classes","eventEmitter","positionalData","units","pos","counterUnits","gridElement","elem","join","emit","type","element","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","len","content","createElement","setAttribute","innerText","foreignObject","text","getSeriesOption","name","seriesOptions","optionsProvider","responsiveOptions","currentOptions","baseOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","matchMedia","matches","mql","addListener","removeMediaQueryListeners","removeListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","increasingX","fillHoles","segments","hole","Interpolation","none","path","Path","currX","currY","currData","move","line","simple","d","prevX","prevY","prevData","curve","cardinal","tension","t","c","paths","segment","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","event","handler","removeEventHandler","splice","indexOf","starHandler","Class","properties","superProtoOverride","superProto","proto","create","cloneDefinitions","constr","instance","fn","constructor","super","list","listToArray","getOwnPropertyNames","propName","defineProperty","getOwnPropertyDescriptor","Base","defaultOptions","supportsForeignObject","isSupported","supportsAnimations","resizeListener","update","bind","__chartist__","detach","initializeTimeoutId","setTimeout","addEventListener","plugins","plugin","createChart","override","clearTimeout","removeEventListener","on","off","attributes","parent","insertFirst","Element","createElementNS","xmlns:ct","firstChild","insertBefore","ns","getAttribute","namespacedAttribute","split","setAttributeNS","parentNode","SVGElement","node","nodeName","selector","foundNode","foundNodes","List","getNode","innerHTML","fnObj","createTextNode","empty","remove","newElement","replaceChild","append","trim","names","concat","self","removeClass","removedClasses","removeAllClasses","getBoundingClientRect","animate","animations","guided","attribute","createAnimate","animationDefinition","timeout","easing","attributeProperties","Easing","begin","dur","calcMode","keySplines","keyTimes","fill","from","attributeName","beginElement","err","to","params","feature","implementation","hasFeature","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","nodeList","svgElements","prototypeProperty","elementDescriptions","m","l","a","accuracy","command","pathElements","relative","pathElement","toLowerCase","forEachParam","pathElementIndex","paramName","paramIndex","close","count","arc","rx","ry","xAr","lAf","sf","scale","translate","transform","transformFnc","transformed","chunks","pop","elements","chunk","shift","description","spliceArgs","accuracyMultiplier","clone","splitByCommand","joinedPath","j","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelLength","showGrid","classNames","grid","showLabel","label","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","b","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","chart","point","area","vertical","horizontal","start","end","Line","seriesGroup","seriesIndex","seriesElement","ct:series-name","ct:meta","pathData","valueIndex","ct:value","seriesMeta","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","Bar","serialSums","prev","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","periodHalfLength","biPol","projected","previousStack","labelAxisValueIndex","positions","metaData","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","Pie","labelsGroup","labelRadius","totalDataSum","seriesGroups","previousValue","currentValue","hasSingleValInSeries","val","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","text-anchor","exports","module","AdminLayoutModule","coerceBooleanProperty","coerceArray","isArray","take","EmptyObservable","lift","take_TakeOperator","supportsPassiveEvents","supportedInputTypes","TakeOperator","ArgumentOutOfRangeError","subscriber","subscribe","take_TakeSubscriber","_super","TakeSubscriber","destination","tslib_es6","_next","next","complete","unsubscribe","Subscriber","hasV8BreakIterator","Intl","v8BreakIterator","Platform","isBrowser","EDGE","test","navigator","userAgent","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","MSStream","FIREFOX","ANDROID","SAFARI","supportsPassiveEventListeners","get","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","PlatformModule","AsyncAction_AsyncAction","AsyncAction","scheduler","work","pending","schedule","state","delay","closed","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","error","_execute","errored","errorValue","_unsubscribe","actions","Action","Subscription","async_async","AsyncScheduler","active","scheduled","action","Scheduler","SchedulerAction","now","Date","InteractivityChecker","_platform","isDisabled","hasAttribute","isVisible","offsetWidth","offsetHeight","getClientRects","hasGeometry","getComputedStyle","visibility","isTabbable","frameElement","getFrameElement","ownerDocument","defaultView","frameType","getTabIndexValue","tabIndexValue","inputType","isPotentiallyTabbableIOS","tabIndex","isFocusable","isInputElement","isHiddenInput","isNativeFormElement","isAnchorElement","isAnchorWithHref","hasValidTabIndex","isPotentiallyFocusable","parseInt","a11y_es5_FocusTrap","FocusTrap","_element","_checker","_ngZone","_document","deferAnchors","_enabled","attachAnchors","set","_startAnchor","_endAnchor","enumerable","configurable","destroy","_this","_createAnchor","runOutsideAngular","focusLastTabbableElement","focusFirstTabbableElement","nextSibling","focusInitialElementWhenReady","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","focus","children","childNodes","tabbableChild","nodeType","ELEMENT_NODE","anchor","classList","add","isStable","onStable","asObservable","pipe","FocusTrapFactory","deferCaptureElements","getAriaReferenceIds","el","nextId","messageRegistry","Map","messagesContainer","AriaDescriber","describe","hostElement","message","_canBeDescribed","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_removeMessageReference","registeredMessage","referenceCount","_deleteMessageElement","_deleteMessagesContainer","ngOnDestroy","describedElements","_removeCdkDescribedByReferenceIds","removeAttribute","clear","messageElement","CDK_DESCRIBEDBY_ID_PREFIX","_createMessagesContainer","delete","display","body","originalReferenceIds","ids","some","existingId","filteredIds","referenceIds","messageId","ARIA_DESCRIBER_PROVIDER_FACTORY","parentDispatcher","LIVE_ANNOUNCER_ELEMENT_TOKEN","core","LiveAnnouncer","elementToken","_liveElement","_createLiveElement","announce","politeness","textContent","liveEl","LIVE_ANNOUNCER_PROVIDER_FACTORY","liveElement","a11y_es5_FocusMonitor","FocusMonitor","_origin","_windowFocused","_elementInfo","_unregisterGlobalListeners","_monitoredElementCount","monitor","renderer","checkChildren","of","cachedInfo","subject","info","unlisten","Subject","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","stopMonitoring","elementInfo","_setClasses","_decrementMonitoredElementCount","focusVia","origin","_setOriginForCurrentEventQueue","_info","_registerGlobalListeners","documentKeydownListener","_lastTouchTarget","documentMousedownListener","documentTouchstartListener","_touchTimeoutId","windowFocusListener","_windowFocusTimeoutId","passive","capture","_originTimeoutId","_toggleClass","shouldSet","_wasCausedByTouch","focusTarget","contains","_lastFocusOrigin","relatedTarget","FOCUS_MONITOR_PROVIDER_FACTORY","ngZone","platform","A11yModule","FromEventObservable_toString","toString","fromEvent","FromEventObservable","sourceObj","eventName","isFunction","setupSubscription","isNodeList","isHTMLCollection","isEventTarget","source_1","isJQueryStyleEventEmitter","source_2","isNodeStyleEventEmitter","TypeError","source_3","_subscribe","_i","tryCatch","errorObject","Observable","AuditOperator","durationSelector","audit_AuditSubscriber","AuditSubscriber","hasValue","throttled","duration","innerSubscription","subscribeToResult","clearThrottle","notifyNext","outerValue","innerValue","outerIndex","innerIndex","notifyComplete","OuterSubscriber","timer","TimerObservable","dueTime","period","parseFloat","isScheduler","initialDelay","dispatch","auditTime","scrolling_es5_ScrollDispatcher","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","register","scrollable","scrollSubscription","elementScrolled","deregister","scrollableReference","scrolled","auditTimeInMs","observer","_addGlobalListener","subscription","_removeGlobalListener","_","ancestorScrolled","elementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","nativeElement","scrollableElement","getElementRef","parentElement","SCROLL_DISPATCHER_PROVIDER_FACTORY","scrolling_es5_ViewportRuler","ViewportRuler","_change","merge","_invalidateCache","change","_updateViewportSize","getViewportSize","_viewportSize","getViewportRect","scrollPosition","getViewportScrollPosition","_a","documentRect","documentElement","scrollTop","scrollY","scrollLeft","scrollX","throttleTime","innerWidth","innerHeight","VIEWPORT_RULER_PROVIDER_FACTORY","parentRuler","ScrollDispatchModule","DIR_DOCUMENT","bidi_es5_Directionality","BidiModule","throwPortalAlreadyAttachedError","Portal","attach","host","throwNullPortalOutletError","hasAttached","_attachedHost","throwNoPortalAttachedError","setAttachedHost","portal_es5_ComponentPortal","ComponentPortal","component","viewContainerRef","injector","portal_es5_TemplatePortal","TemplatePortal","template","context","templateRef","portal_es5_DomPortalOutlet","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","attachComponentPortal","portal","componentRef","componentFactory","resolveComponentFactory","createComponent","parentInjector","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","attachTemplatePortal","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","dispose","BasePortalOutlet","_isDisposed","_attachedPortal","throwNullPortalError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","_invokeDisposeFn","_disposeFn","PortalModule","NoopScrollStrategy","enable","disable","OverlayConfig","config","scrollStrategy","panelClass","hasBackdrop","backdropClass","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_viewportRuler","_config","_scrollSubscription","_detach","_overlayRef","run","overlayRef","stream","threshold","_initialScrollPosition","updatePosition","BlockScrollStrategy","_previousHTMLStyles","_isEnabled","_canBeEnabled","_previousScrollPosition","html","previousHtmlScrollBehavior","previousBodyScrollBehavior","scroll","viewport","scrollHeight","scrollWidth","isElementScrolledOutsideView","containerBounds","isElementClippedByScrolling","scrollContainerRect","RepositionScrollStrategy","scrollThrottle","autoClose","overlayRect","overlayElement","ScrollStrategyOptions","block","reposition","overlay_es5_OverlayRef","OverlayRef","_portalOutlet","_pane","_keyboardDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_keydownEvents","attachResult","positionStrategy","_updateStackingOrder","_updateElementSize","_updateElementDirection","_togglePointerEvents","_attachBackdrop","cls","detachBackdrop","detachmentResult","isAttached","backdropClick","attachments","detachments","keydownEvents","getConfig","updateSize","sizeConfig","setDirection","formatCssUnit","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","requestAnimationFrame","backdropToDetach","finishDetach_1","overlay_es5_ConnectedPositionStrategy","ConnectedPositionStrategy","originPos","overlayPos","_connectedTo","_dir","_offsetX","_offsetY","scrollables","_resizeSubscription","EMPTY","_preferredPositions","_applied","_positionLocked","_onPositionChange","withFallbackPosition","_lastConnectedPosition","recalculateLastPosition","fallbackPoint","fallbackPosition","originRect","viewportSize","originPoint","_getOriginConnectionPoint","overlayPoint","_getOverlayPoint","fitsInViewport","_setElementPosition","visibleArea","lastPosition","withScrollableContainers","offsetX","offsetY","overlay","originX","originY","overlayX","overlayY","withDirection","withOffsetX","withOffsetY","withLockedPosition","isLocked","withPositions","setOrigin","_getStartX","rect","_isRtl","_getEndX","originStartX","originEndX","topOverflow","bottomOverflow","_subtractOverflows","_getScrollVisibility","originBounds","overlayBounds","scrollContainerBounds","s","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","horizontalStyleProperty","verticalStyleProperty","clientHeight","clientWidth","positionChange","connectionPair","scrollableViewProperties","overflows","currentOverflow","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","_wrapper","centerHorizontally","centerVertically","styles","parentStyles","marginLeft","marginTop","marginBottom","marginRight","justifyContent","alignItems","OverlayPositionBuilder","global","connectedTo","overlay_es5_OverlayKeyboardDispatcher","OverlayKeyboardDispatcher","_attachedOverlays","_unsubscribeFromKeydownEvents","_keydownEventSubscription","_subscribeToKeydownEvents","bodyKeydownEvents","_selectOverlayFromEvent","find","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OverlayContainer","_containerElement","getContainerElement","_createContainer","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","nextUniqueId","overlay_es5_Overlay","Overlay","scrollStrategies","_overlayContainer","_positionBuilder","_injector","pane","_createPaneElement","portalOutlet","_createPortalOutlet","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","OverlayModule","MATERIAL_SANITY_CHECKS","core_es5_MatCommonModule","MatCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_hasCheckedHammer","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","_checkHammerIsAvailable","mixinColor","base","defaultColor","class_1","color","_color","colorPalette","_elementRef","ErrorStateMatcher","isErrorState","control","form","invalid","touched","submitted","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","core_es5_RippleRenderer","RippleRenderer","_target","_isPointerDown","_triggerEvents","_activeRipples","_eventOptions","onMousedown","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","onPointerUp","ripple","persistent","terminateOnPointerUp","containerRect","animationConfig","animation","centered","distX","distY","sqrt","distanceToFurthestCorner","speedFactor","backgroundColor","transitionDuration","getPropertyValue","rippleRef","runTimeoutOutsideZone","rippleEl","opacity","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","MAT_RIPPLE_GLOBAL_OPTIONS","core_es5_MatRipple","MatRipple","globalOptions","_disabled","_isInitialized","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","baseSpeedFactor","disabled","launch","configOrX","MatRippleModule","MAT_LABEL_GLOBAL_OPTIONS","startWith","array","observables","concatAll","ScalarObservable","ArrayObservable","TakeUntilOperator","notifier","takeUntil_TakeUntilSubscriber","TakeUntilSubscriber","innerSub","CombineLatestOperator","project","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","observable","_complete","toRespond","unused","_tryProject","fromEventPattern","FromEventPatternObservable","addHandler","removeHandler","_callSelector","retValue","_callAddHandler","errorSubscriber","styleElementForWebkitCompatibility","MediaMatcher","_matchMedia","noopMatchMedia","sheet","getElementsByTagName","createEmptyStyleRule","media","layout_es5_BreakpointObserver","BreakpointObserver","mediaMatcher","zone","_queries","_destroySubject","isMatched","mediaQuery","_registerQuery","observe","combineLatest_combineLatest","listener","nextMql","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","LayoutModule","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","tooltip_es5_MatTooltip","MatTooltip","_overlay","_viewContainerRef","_ariaDescriber","_focusMonitor","_scrollStrategy","_defaultOptions","_position","showDelay","hideDelay","_message","_manualListeners","webkitUserSelect","userSelect","show","hide","_tooltipInstance","_disposeTooltip","_isTooltipVisible","_updateTooltipMessage","_tooltipClass","_setTooltipClass","_createTooltip","toggle","_handleKeydown","keyCode","stopPropagation","_handleTouchend","touchendHideDelay","_createOverlay","tooltip_es5_TooltipComponent","afterHidden","_getOrigin","_getOverlayPosition","strategy","main","scrollableAncestors","onPositionChange","_setTransformOrigin","isDirectionLtr","_invertPosition","isLtr","_markForCheck","onMicrotaskEmpty","tooltipClass","TooltipComponent","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_transformOrigin","_onHide","_isHandset","_hideTimeoutId","_showTimeoutId","overlayPosition","_animationStart","_animationDone","toState","_handleBodyInteraction","markForCheck","MatTooltipModule","RenderType_TooltipComponent","encapsulation","definitions","expr","timings","View_TooltipComponent_0","_l","_v","en","$event","ad","_co","common","klass","ngClass","_ck","TooltipComponentNgFactory","DEFAULT_ROUND_BUTTON_COLOR","DEFAULT_FLAT_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","button_es5_MatButton","MatButton","_isRoundButton","_hasHostAttributes","_isIconButton","BUTTON_HOST_ATTRIBUTES_1","_getHostElement","_isRippleDisabled","disableRipple","mixinDisabled","_disableRipple","mixinDisableRipple","button_es5_MatAnchor","MatAnchor","focusMonitor","_haltDisabledEvents","preventDefault","stopImmediatePropagation","MatButtonModule","RenderType_MatButton","View_MatButton_0","unbounded","RenderType_MatAnchor","View_MatAnchor_0","dashboard_component_DashboardComponent","DashboardComponent","startAnimationForLineChart","seq","chartist","startAnimationForBarChart","seq2","optionsDailySalesChart","dailySalesChart","optionsCompletedTasksChart","completedTasksChart","websiteViewsChart","RenderType_DashboardComponent","View_DashboardComponent_0","DashboardComponentNgFactory","MatFormFieldControl","getMatFormFieldDuplicatedHintError","align","nextUniqueId$1","form_field_es5_MatFormField","MatFormField","labelOptions","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelOptions","floatLabel","float","_hideRequiredMarker","_floatLabel","_processHints","ngAfterContentInit","_validateControlChild","_control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","_hintChildren","changes","_errorChildren","ngAfterContentChecked","ngAfterViewInit","_shouldForward","_hasPlaceholder","placeholder","_placeholderChild","_hasLabel","_labelChild","_shouldLabelFloat","_canLabelFloat","shouldLabelFloat","shouldPlaceholderFloat","_shouldAlwaysFloat","_hideControlPlaceholder","_hasFloatingLabel","_getDisplayedMessages","errorState","_animateAndLockLabel","_label","_validateHints","startHint_1","endHint_1","hint","hintLabel","startHint","endHint","setDescribedByIds","MatFormFieldModule","RenderType_MatFormField","View_MatFormField_1","View_MatFormField_3","View_MatFormField_4","View_MatFormField_5","View_MatFormField_2","ngSwitch","ngSwitchCase","ngIf","hideRequiredMarker","required","View_MatFormField_6","View_MatFormField_7","View_MatFormField_9","View_MatFormField_8","View_MatFormField_0","underlineRef","_connectionContainerRef","_inputContainerRef","onContainerClick","_prefixChildren","_suffixChildren","MAT_INPUT_INVALID_TYPES","input_es5_nextUniqueId","input_es5_MatInput","MatInput","_parentForm","_parentFormGroup","_defaultErrorStateMatcher","inputValueAccessor","_uid","_isServer","focused","_required","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","selectionStart","selectionEnd","setSelectionRange","_id","_validateType","_isTextarea","ngOnChanges","ngDoCheck","updateErrorState","_dirtyCheckNativeValue","_focusChanged","isFocused","readonly","_onInput","newValue","_isNeverEmpty","_isBadInput","validity","badInput","_ariaDescribedby","oldState","newState","errorStateMatcher","mixinErrorState","MatInputModule","UserProfileComponent","RenderType_UserProfileComponent","View_UserProfileComponent_0","onSubmit","onReset","esm5_forms","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","UserProfileComponentNgFactory","TableListComponent","RenderType_TableListComponent","View_TableListComponent_0","TableListComponentNgFactory","TypographyComponent","RenderType_TypographyComponent","View_TypographyComponent_0","TypographyComponentNgFactory","IconsComponent","RenderType_IconsComponent","View_IconsComponent_0","IconsComponentNgFactory","MapsComponent","myLatlng","google","maps","LatLng","mapOptions","zoom","scrollwheel","featureType","stylers","saturation","lightness","hue","elementType","getElementById","Marker","title","setMap","RenderType_MapsComponent","View_MapsComponent_0","MapsComponentNgFactory","NotificationsComponent","showNotification","random","$","notify","icon","placement","RenderType_NotificationsComponent","View_NotificationsComponent_0","NotificationsComponentNgFactory","UpgradeComponent","RenderType_UpgradeComponent","View_UpgradeComponent_0","UpgradeComponentNgFactory","__webpack_require__","__webpack_exports__","AdminLayoutModuleNgFactory","router"],"mappings":"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","file":"0.b3d743c72d286800e039.chunk.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.0\n * Copyright © 2017 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.0'\n};\n\n(function (window, document, Chartist) {\n  'use strict';\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(window, document, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(window, document, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(window, document, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(window, document, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(window, document, Chartist));\n;/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(window, document, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(window, document, Chartist));\n\nreturn Chartist;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartist/dist/chartist.js\n// module id = 715g\n// module chunks = 0","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { TableListComponent } from '../../table-list/table-list.component';\nimport { TypographyComponent } from '../../typography/typography.component';\nimport { IconsComponent } from '../../icons/icons.component';\nimport { MapsComponent } from '../../maps/maps.component';\nimport { NotificationsComponent } from '../../notifications/notifications.component';\nimport { UpgradeComponent } from '../../upgrade/upgrade.component';\n\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatRippleModule,\n  MatTooltipModule,\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatInputModule,\n    MatTooltipModule,\n  ],\n  declarations: [\n    DashboardComponent,\n    UserProfileComponent,\n    TableListComponent,\n    TypographyComponent,\n    IconsComponent,\n    MapsComponent,\n    NotificationsComponent,\n    UpgradeComponent,\n  ]\n})\n\nexport class AdminLayoutModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layouts/admin-layout/admin-layout.module.ts","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) {\n        fallbackValue = 0;\n    }\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(/** @type {?} */ (value))) && !isNaN(Number(value));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray };\n//# sourceMappingURL=coercion.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/coercion.es5.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/take.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core PURE_IMPORTS_END */\nimport { Injectable, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nvar hasV8BreakIterator = (typeof Intl !== 'undefined' && ((Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nvar Platform = /*@__PURE__*/ (function () {\n    function Platform() {\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((window)).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !((window)).MSStream;\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    return Platform;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n */\nvar supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\n                get: function () { return supportsPassiveEvents = true; }\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Cached result Set of input types support by the current browser.\n */\nvar supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n */\nvar candidateInputTypes = [\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    var /** @type {?} */ featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PlatformModule = /*@__PURE__*/ (function () {\n    function PlatformModule() {\n    }\n    return PlatformModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Platform, supportsPassiveEventListeners, getSupportedInputTypes, PlatformModule };\n//# sourceMappingURL=platform.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/platform.es5.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { root } from '../util/root';\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var AsyncAction = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\n//# sourceMappingURL=AsyncAction.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/AsyncAction.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport var Action = /*@__PURE__*/ (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\n//# sourceMappingURL=Action.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/Action.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START ._AsyncAction,._AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/async.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nexport var AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/scheduler/AsyncScheduler.js\n// module id = null\n// module chunks = ","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\n//# sourceMappingURL=Scheduler.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/Scheduler.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_cdk_coercion,rxjs_operators_take,_angular_cdk_platform,_angular_common,tslib,tslib,rxjs_Subject,rxjs_Subscription,_angular_cdk_keycodes,rxjs_operators_debounceTime,rxjs_operators_filter,rxjs_operators_map,rxjs_operators_tap,rxjs_observable_of PURE_IMPORTS_END */\nimport { Directive, ElementRef, EventEmitter, Inject, Injectable, InjectionToken, Input, NgModule, NgZone, Optional, Output, Renderer2, SkipSelf } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { take } from 'rxjs/operators/take';\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { __extends } from 'tslib';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { A, DOWN_ARROW, LEFT_ARROW, NINE, RIGHT_ARROW, TAB, UP_ARROW, Z, ZERO } from '@angular/cdk/keycodes';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\nimport { tap } from 'rxjs/operators/tap';\nimport { of } from 'rxjs/observable/of';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nvar InteractivityChecker = /*@__PURE__*/ (function () {\n    function InteractivityChecker(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    InteractivityChecker.prototype.isDisabled = /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n        function (element) {\n            // This does not capture some cases, such as a non-form control with a disabled attribute or\n            // a form control inside of a disabled form, but should capture the most common cases.\n            return element.hasAttribute('disabled');\n        };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    InteractivityChecker.prototype.isVisible = /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n        function (element) {\n            return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n        };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    InteractivityChecker.prototype.isTabbable = /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n        function (element) {\n            // Nothing is tabbable on the the server 😎\n            if (!this._platform.isBrowser) {\n                return false;\n            }\n            var /** @type {?} */ frameElement = getFrameElement(getWindow(element));\n            if (frameElement) {\n                var /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();\n                // Frame elements inherit their tabindex onto all child elements.\n                if (getTabIndexValue(frameElement) === -1) {\n                    return false;\n                }\n                // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n                if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                    return false;\n                }\n                // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n                if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                    return false;\n                }\n            }\n            var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n            var /** @type {?} */ tabIndexValue = getTabIndexValue(element);\n            if (element.hasAttribute('contenteditable')) {\n                return tabIndexValue !== -1;\n            }\n            if (nodeName === 'iframe') {\n                // The frames may be tabbable depending on content, but it's not possibly to reliably\n                // investigate the content of the frames.\n                return false;\n            }\n            if (nodeName === 'audio') {\n                if (!element.hasAttribute('controls')) {\n                    // By default an <audio> element without the controls enabled is not tabbable.\n                    return false;\n                }\n                else if (this._platform.BLINK) {\n                    // In Blink <audio controls> elements are always tabbable.\n                    return true;\n                }\n            }\n            if (nodeName === 'video') {\n                if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                    // In Trident a <video> element without the controls enabled is not tabbable.\n                    return false;\n                }\n                else if (this._platform.BLINK || this._platform.FIREFOX) {\n                    // In Chrome and Firefox <video controls> elements are always tabbable.\n                    return true;\n                }\n            }\n            if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n                // In all Blink and WebKit based browsers <object> elements are never tabbable.\n                return false;\n            }\n            // In iOS the browser only considers some specific elements as tabbable.\n            if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n                return false;\n            }\n            return element.tabIndex >= 0;\n        };\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is focusable.\n     */\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    InteractivityChecker.prototype.isFocusable = /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n        function (element) {\n            // Perform checks in order of left to most expensive.\n            // Again, naive approach that does not capture many edge cases and browser quirks.\n            return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n        };\n    return InteractivityChecker;\n}());\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return /** @type {?} */ (window.frameElement);\n    }\n    catch (e) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    var /** @type {?} */ tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    var /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    var /** @type {?} */ inputType = nodeName === 'input' && ((element)).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    return node.ownerDocument.defaultView || window;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nvar FocusTrap = /*@__PURE__*/ (function () {\n    function FocusTrap(_element, _checker, _ngZone, _document, deferAnchors) {\n        if (deferAnchors === void 0) {\n            deferAnchors = false;\n        }\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    Object.defineProperty(FocusTrap.prototype, \"enabled\", {\n        /** Whether the focus trap is active. */\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */ function () { return this._enabled; },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */ function (val) {\n            this._enabled = val;\n            if (this._startAnchor && this._endAnchor) {\n                this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Destroys the focus trap by cleaning up the anchors. */\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    FocusTrap.prototype.destroy = /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n        function () {\n            if (this._startAnchor && this._startAnchor.parentNode) {\n                this._startAnchor.parentNode.removeChild(this._startAnchor);\n            }\n            if (this._endAnchor && this._endAnchor.parentNode) {\n                this._endAnchor.parentNode.removeChild(this._endAnchor);\n            }\n            this._startAnchor = this._endAnchor = null;\n        };\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     */\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?}\n     */\n    FocusTrap.prototype.attachAnchors = /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n            }\n            this._ngZone.runOutsideAngular(function () {\n                /** @type {?} */ ((_this._startAnchor)).addEventListener('focus', function () {\n                    _this.focusLastTabbableElement();\n                }); /** @type {?} */\n                ((_this._endAnchor)).addEventListener('focus', function () {\n                    _this.focusFirstTabbableElement();\n                });\n                if (_this._element.parentNode) {\n                    _this._element.parentNode.insertBefore(/** @type {?} */ ((_this._startAnchor)), _this._element);\n                    _this._element.parentNode.insertBefore(/** @type {?} */ ((_this._endAnchor)), _this._element.nextSibling);\n                }\n            });\n        };\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElementWhenReady = /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n        function () {\n            var _this = this;\n            return new Promise(function (resolve) {\n                _this._executeOnStable(function () { return resolve(_this.focusInitialElement()); });\n            });\n        };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n        function () {\n            var _this = this;\n            return new Promise(function (resolve) {\n                _this._executeOnStable(function () { return resolve(_this.focusFirstTabbableElement()); });\n            });\n        };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n        function () {\n            var _this = this;\n            return new Promise(function (resolve) {\n                _this._executeOnStable(function () { return resolve(_this.focusLastTabbableElement()); });\n            });\n        };\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    FocusTrap.prototype._getRegionBoundary = /**\n     * Get the specified boundary element of the trapped region.\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n        function (bound) {\n            // Contains the deprecated version of selector, for temporary backwards comparability.\n            var /** @type {?} */ markers = (this._element.querySelectorAll(\"[cdk-focus-region-\" + bound + \"], \" +\n                (\"[cdkFocusRegion\" + bound + \"], \") +\n                (\"[cdk-focus-\" + bound + \"]\")));\n            for (var /** @type {?} */ i = 0; i < markers.length; i++) {\n                if (markers[i].hasAttribute(\"cdk-focus-\" + bound)) {\n                    console.warn(\"Found use of deprecated attribute 'cdk-focus-\" + bound + \"',\" +\n                        (\" use 'cdkFocusRegion\" + bound + \"' instead.\"), markers[i]);\n                }\n                else if (markers[i].hasAttribute(\"cdk-focus-region-\" + bound)) {\n                    console.warn(\"Found use of deprecated attribute 'cdk-focus-region-\" + bound + \"',\" +\n                        (\" use 'cdkFocusRegion\" + bound + \"' instead.\"), markers[i]);\n                }\n            }\n            if (bound == 'start') {\n                return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n            }\n            return markers.length ?\n                markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n        };\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElement = /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n        function () {\n            // Contains the deprecated version of selector, for temporary backwards comparability.\n            var /** @type {?} */ redirectToElement = (this._element.querySelector(\"[cdk-focus-initial], \" +\n                \"[cdkFocusInitial]\"));\n            if (this._element.hasAttribute(\"cdk-focus-initial\")) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-initial',\" +\n                    \" use 'cdkFocusInitial' instead.\", this._element);\n            }\n            if (redirectToElement) {\n                redirectToElement.focus();\n                return true;\n            }\n            return this.focusFirstTabbableElement();\n        };\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElement = /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n        function () {\n            var /** @type {?} */ redirectToElement = this._getRegionBoundary('start');\n            if (redirectToElement) {\n                redirectToElement.focus();\n            }\n            return !!redirectToElement;\n        };\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElement = /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n        function () {\n            var /** @type {?} */ redirectToElement = this._getRegionBoundary('end');\n            if (redirectToElement) {\n                redirectToElement.focus();\n            }\n            return !!redirectToElement;\n        };\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getFirstTabbableElement = /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n        function (root) {\n            if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n                return root;\n            }\n            // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n            // back to `childNodes` which includes text nodes, comments etc.\n            var /** @type {?} */ children = root.children || root.childNodes;\n            for (var /** @type {?} */ i = 0; i < children.length; i++) {\n                var /** @type {?} */ tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                    this._getFirstTabbableElement(/** @type {?} */ (children[i])) :\n                    null;\n                if (tabbableChild) {\n                    return tabbableChild;\n                }\n            }\n            return null;\n        };\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getLastTabbableElement = /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n        function (root) {\n            if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n                return root;\n            }\n            // Iterate in reverse DOM order.\n            var /** @type {?} */ children = root.children || root.childNodes;\n            for (var /** @type {?} */ i = children.length - 1; i >= 0; i--) {\n                var /** @type {?} */ tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                    this._getLastTabbableElement(/** @type {?} */ (children[i])) :\n                    null;\n                if (tabbableChild) {\n                    return tabbableChild;\n                }\n            }\n            return null;\n        };\n    /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    FocusTrap.prototype._createAnchor = /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ anchor = this._document.createElement('div');\n            anchor.tabIndex = this._enabled ? 0 : -1;\n            anchor.classList.add('cdk-visually-hidden');\n            anchor.classList.add('cdk-focus-trap-anchor');\n            return anchor;\n        };\n    /**\n     * Executes a function when the zone is stable.\n     * @param {?} fn\n     * @return {?}\n     */\n    FocusTrap.prototype._executeOnStable = /**\n     * Executes a function when the zone is stable.\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            if (this._ngZone.isStable) {\n                fn();\n            }\n            else {\n                this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n            }\n        };\n    return FocusTrap;\n}());\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nvar FocusTrapFactory = /*@__PURE__*/ (function () {\n    function FocusTrapFactory(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    FocusTrapFactory.prototype.create = /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n        function (element, deferCaptureElements) {\n            if (deferCaptureElements === void 0) {\n                deferCaptureElements = false;\n            }\n            return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n        };\n    return FocusTrapFactory;\n}());\n/**\n * Directive for trapping focus within a region.\n * \\@docs-private\n * @deprecated\n * \\@deletion-target 6.0.0\n */\nvar FocusTrapDeprecatedDirective = /*@__PURE__*/ (function () {\n    function FocusTrapDeprecatedDirective(_elementRef, _focusTrapFactory) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(FocusTrapDeprecatedDirective.prototype, \"disabled\", {\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */ function () { return !this.focusTrap.enabled; },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */ function (val) {\n            this.focusTrap.enabled = !coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FocusTrapDeprecatedDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.focusTrap.destroy();\n        };\n    /**\n     * @return {?}\n     */\n    FocusTrapDeprecatedDirective.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            this.focusTrap.attachAnchors();\n        };\n    return FocusTrapDeprecatedDirective;\n}());\n/**\n * Directive for trapping focus within a region.\n */\nvar CdkTrapFocus = /*@__PURE__*/ (function () {\n    function CdkTrapFocus(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(CdkTrapFocus.prototype, \"enabled\", {\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */ function () { return this.focusTrap.enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTrapFocus.prototype, \"autoCapture\", {\n        get: /**\n         * Whether the directive should automatially move focus into the trapped region upon\n         * initialization and return focus to the previous activeElement upon destruction.\n         * @return {?}\n         */ function () { return this._autoCapture; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._autoCapture = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.focusTrap.destroy();\n            // If we stored a previously focused element when using autoCapture, return focus to that\n            // element now that the trapped region is being destroyed.\n            if (this._previouslyFocusedElement) {\n                this._previouslyFocusedElement.focus();\n                this._previouslyFocusedElement = null;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            this.focusTrap.attachAnchors();\n            if (this.autoCapture) {\n                this._previouslyFocusedElement = /** @type {?} */ (this._document.activeElement);\n                this.focusTrap.focusInitialElementWhenReady();\n            }\n        };\n    return CdkTrapFocus;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * IDs are deliminated by an empty space, as per the spec.\n */\nvar ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    var /** @type {?} */ ids = getAriaReferenceIds(el, attr);\n    if (ids.some(function (existingId) { return existingId.trim() == id.trim(); })) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    var /** @type {?} */ ids = getAriaReferenceIds(el, attr);\n    var /** @type {?} */ filteredIds = ids.filter(function (val) { return val != id.trim(); });\n    el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n * @record\n */\n/**\n * ID used for the body container where all messages are appended.\n */\nvar MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n */\nvar CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n */\nvar CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n */\nvar nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n */\nvar messageRegistry = /*@__PURE__*/ new Map();\n/**\n * Container for all registered messages.\n */\nvar messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n * \\@docs-private\n */\nvar AriaDescriber = /*@__PURE__*/ (function () {\n    function AriaDescriber(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     */\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.describe = /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n        function (hostElement, message) {\n            if (!this._canBeDescribed(hostElement, message)) {\n                return;\n            }\n            if (!messageRegistry.has(message)) {\n                this._createMessageElement(message);\n            }\n            if (!this._isElementDescribedByMessage(hostElement, message)) {\n                this._addMessageReference(hostElement, message);\n            }\n        };\n    /** Removes the host element's aria-describedby reference to the message element. */\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.removeDescription = /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n        function (hostElement, message) {\n            if (!this._canBeDescribed(hostElement, message)) {\n                return;\n            }\n            if (this._isElementDescribedByMessage(hostElement, message)) {\n                this._removeMessageReference(hostElement, message);\n            }\n            var /** @type {?} */ registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n            if (messagesContainer && messagesContainer.childNodes.length === 0) {\n                this._deleteMessagesContainer();\n            }\n        };\n    /** Unregisters all created message elements and removes the message container. */\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    AriaDescriber.prototype.ngOnDestroy = /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ describedElements = this._document.querySelectorAll(\"[\" + CDK_DESCRIBEDBY_HOST_ATTRIBUTE + \"]\");\n            for (var /** @type {?} */ i = 0; i < describedElements.length; i++) {\n                this._removeCdkDescribedByReferenceIds(describedElements[i]);\n                describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n            }\n            if (messagesContainer) {\n                this._deleteMessagesContainer();\n            }\n            messageRegistry.clear();\n        };\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessageElement = /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @param {?} message\n     * @return {?}\n     */\n        function (message) {\n            var /** @type {?} */ messageElement = this._document.createElement('div');\n            messageElement.setAttribute('id', CDK_DESCRIBEDBY_ID_PREFIX + \"-\" + nextId++);\n            messageElement.appendChild(/** @type {?} */ ((this._document.createTextNode(message))));\n            if (!messagesContainer) {\n                this._createMessagesContainer();\n            } /** @type {?} */\n            ((messagesContainer)).appendChild(messageElement);\n            messageRegistry.set(message, { messageElement: messageElement, referenceCount: 0 });\n        };\n    /**\n     * Deletes the message element from the global messages container.\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessageElement = /**\n     * Deletes the message element from the global messages container.\n     * @param {?} message\n     * @return {?}\n     */\n        function (message) {\n            var /** @type {?} */ registeredMessage = messageRegistry.get(message);\n            var /** @type {?} */ messageElement = registeredMessage && registeredMessage.messageElement;\n            if (messagesContainer && messageElement) {\n                messagesContainer.removeChild(messageElement);\n            }\n            messageRegistry.delete(message);\n        };\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessagesContainer = /**\n     * Creates the global container for all aria-describedby messages.\n     * @return {?}\n     */\n        function () {\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.setAttribute('id', MESSAGES_CONTAINER_ID);\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        };\n    /**\n     * Deletes the global messages container.\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessagesContainer = /**\n     * Deletes the global messages container.\n     * @return {?}\n     */\n        function () {\n            if (messagesContainer && messagesContainer.parentNode) {\n                messagesContainer.parentNode.removeChild(messagesContainer);\n                messagesContainer = null;\n            }\n        };\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @param {?} element\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeCdkDescribedByReferenceIds = /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n            var /** @type {?} */ originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n                .filter(function (id) { return id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0; });\n            element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n        };\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._addMessageReference = /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n        function (element, message) {\n            var /** @type {?} */ registeredMessage = ((messageRegistry.get(message)));\n            // Add the aria-describedby reference and set the\n            // describedby_host attribute to mark the element.\n            addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n            element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n            registeredMessage.referenceCount++;\n        };\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeMessageReference = /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n        function (element, message) {\n            var /** @type {?} */ registeredMessage = ((messageRegistry.get(message)));\n            registeredMessage.referenceCount--;\n            removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n            element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        };\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._isElementDescribedByMessage = /**\n     * Returns true if the element has been described by the provided message ID.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n        function (element, message) {\n            var /** @type {?} */ referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n            var /** @type {?} */ registeredMessage = messageRegistry.get(message);\n            var /** @type {?} */ messageId = registeredMessage && registeredMessage.messageElement.id;\n            return !!messageId && referenceIds.indexOf(messageId) != -1;\n        };\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._canBeDescribed = /**\n     * Determines whether a message can be described on a particular element.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n        function (element, message) {\n            return element.nodeType === this._document.ELEMENT_NODE && message != null &&\n                !!(\"\" + message).trim();\n        };\n    return AriaDescriber;\n}());\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private\n */\nvar ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), AriaDescriber],\n        /** @type {?} */ (DOCUMENT)\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * This interface is for items that can be passed to a ListKeyManager.\n * @record\n */\n// unsupported: template constraints.\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nvar ListKeyManager = /*@__PURE__*/ (function () {\n    function ListKeyManager(_items) {\n        var _this = this;\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = function (item) { return item.disabled; };\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        _items.changes.subscribe(function (newItems) {\n            if (_this._activeItem) {\n                var /** @type {?} */ itemArray = newItems.toArray();\n                var /** @type {?} */ newIndex = itemArray.indexOf(_this._activeItem);\n                if (newIndex > -1 && newIndex !== _this._activeItemIndex) {\n                    _this._activeItemIndex = newIndex;\n                }\n            }\n        });\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {?}\n     */\n    ListKeyManager.prototype.skipPredicate = /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {?}\n     */\n        function (predicate) {\n            this._skipPredicateFn = predicate;\n            return this;\n        };\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     */\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withWrap = /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @return {?}\n     */\n        function () {\n            this._wrap = true;\n            return this;\n        };\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withVerticalOrientation = /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {?}\n     */\n        function (enabled) {\n            if (enabled === void 0) {\n                enabled = true;\n            }\n            this._vertical = enabled;\n            return this;\n        };\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withHorizontalOrientation = /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {?}\n     */\n        function (direction) {\n            this._horizontal = direction;\n            return this;\n        };\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withTypeAhead = /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {?}\n     */\n        function (debounceInterval) {\n            var _this = this;\n            if (debounceInterval === void 0) {\n                debounceInterval = 200;\n            }\n            if (this._items.length && this._items.some(function (item) { return typeof item.getLabel !== 'function'; })) {\n                throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n            }\n            this._typeaheadSubscription.unsubscribe();\n            // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n            // and convert those letters back into a string. Afterwards find the first item that starts\n            // with that string and select it.\n            this._typeaheadSubscription = this._letterKeyStream.pipe(tap(function (keyCode) { return _this._pressedLetters.push(keyCode); }), debounceTime(debounceInterval), filter(function () { return _this._pressedLetters.length > 0; }), map(function () { return _this._pressedLetters.join(''); })).subscribe(function (inputString) {\n                var /** @type {?} */ items = _this._items.toArray();\n                // Start at 1 because we want to start searching at the item immediately\n                // following the current active item.\n                for (var /** @type {?} */ i = 1; i < items.length + 1; i++) {\n                    var /** @type {?} */ index = (_this._activeItemIndex + i) % items.length;\n                    var /** @type {?} */ item = items[index];\n                    if (!_this._skipPredicateFn(item) && /** @type {?} */ ((item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                        _this.setActiveItem(index);\n                        break;\n                    }\n                }\n                _this._pressedLetters = [];\n            });\n            return this;\n        };\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param index The index of the item to be set as active.\n     */\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param {?} index The index of the item to be set as active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setActiveItem = /**\n     * Sets the active item to the item at the index specified.\n     * @param {?} index The index of the item to be set as active.\n     * @return {?}\n     */\n        function (index) {\n            var /** @type {?} */ previousIndex = this._activeItemIndex;\n            this._activeItemIndex = index;\n            this._activeItem = this._items.toArray()[index];\n            if (this._activeItemIndex !== previousIndex) {\n                this.change.next(index);\n            }\n        };\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.onKeydown = /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n        function (event) {\n            var /** @type {?} */ keyCode = event.keyCode;\n            switch (keyCode) {\n                case TAB:\n                    this.tabOut.next();\n                    return;\n                case DOWN_ARROW:\n                    if (this._vertical) {\n                        this.setNextItemActive();\n                        break;\n                    }\n                    else {\n                        return;\n                    }\n                case UP_ARROW:\n                    if (this._vertical) {\n                        this.setPreviousItemActive();\n                        break;\n                    }\n                    else {\n                        return;\n                    }\n                case RIGHT_ARROW:\n                    if (this._horizontal === 'ltr') {\n                        this.setNextItemActive();\n                        break;\n                    }\n                    else if (this._horizontal === 'rtl') {\n                        this.setPreviousItemActive();\n                        break;\n                    }\n                    else {\n                        return;\n                    }\n                case LEFT_ARROW:\n                    if (this._horizontal === 'ltr') {\n                        this.setPreviousItemActive();\n                        break;\n                    }\n                    else if (this._horizontal === 'rtl') {\n                        this.setNextItemActive();\n                        break;\n                    }\n                    else {\n                        return;\n                    }\n                default:\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                    // Note that we return here, in order to avoid preventing\n                    // the default action of non-navigational keys.\n                    return;\n            }\n            this._pressedLetters = [];\n            event.preventDefault();\n        };\n    Object.defineProperty(ListKeyManager.prototype, \"activeItemIndex\", {\n        /** Index of the currently active item. */\n        get: /**\n         * Index of the currently active item.\n         * @return {?}\n         */ function () {\n            return this._activeItemIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"activeItem\", {\n        /** The active item. */\n        get: /**\n         * The active item.\n         * @return {?}\n         */ function () {\n            return this._activeItem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the active item to the first enabled item in the list. */\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setFirstItemActive = /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n        function () {\n            this._setActiveItemByIndex(0, 1);\n        };\n    /** Sets the active item to the last enabled item in the list. */\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setLastItemActive = /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n        function () {\n            this._setActiveItemByIndex(this._items.length - 1, -1);\n        };\n    /** Sets the active item to the next enabled item in the list. */\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setNextItemActive = /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n        function () {\n            this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n        };\n    /** Sets the active item to a previous enabled item in the list. */\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setPreviousItemActive = /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n        function () {\n            this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n                : this._setActiveItemByDelta(-1);\n        };\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param index The new activeItemIndex.\n     */\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItemIndex = /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n        function (index) {\n            this._activeItemIndex = index;\n        };\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @param {?=} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByDelta = /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @param {?=} items\n     * @return {?}\n     */\n        function (delta, items) {\n            if (items === void 0) {\n                items = this._items.toArray();\n            }\n            this._wrap ? this._setActiveInWrapMode(delta, items)\n                : this._setActiveInDefaultMode(delta, items);\n        };\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInWrapMode = /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n        function (delta, items) {\n            for (var /** @type {?} */ i = 1; i <= items.length; i++) {\n                var /** @type {?} */ index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n                var /** @type {?} */ item = items[index];\n                if (!this._skipPredicateFn(item)) {\n                    this.setActiveItem(index);\n                    return;\n                }\n            }\n        };\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInDefaultMode = /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n        function (delta, items) {\n            this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n        };\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @param {?=} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByIndex = /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @param {?=} items\n     * @return {?}\n     */\n        function (index, fallbackDelta, items) {\n            if (items === void 0) {\n                items = this._items.toArray();\n            }\n            if (!items[index]) {\n                return;\n            }\n            while (this._skipPredicateFn(items[index])) {\n                index += fallbackDelta;\n                if (!items[index]) {\n                    return;\n                }\n            }\n            this.setActiveItem(index);\n        };\n    return ListKeyManager;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n * @record\n */\n/**\n * @template T\n */\nvar ActiveDescendantKeyManager = /*@__PURE__*/ (function (_super) {\n    __extends(ActiveDescendantKeyManager, _super);\n    function ActiveDescendantKeyManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     */\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     * @param {?} index\n     * @return {?}\n     */\n    ActiveDescendantKeyManager.prototype.setActiveItem = /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     * @param {?} index\n     * @return {?}\n     */\n        function (index) {\n            if (this.activeItem) {\n                this.activeItem.setInactiveStyles();\n            }\n            _super.prototype.setActiveItem.call(this, index);\n            if (this.activeItem) {\n                this.activeItem.setActiveStyles();\n            }\n        };\n    return ActiveDescendantKeyManager;\n}(ListKeyManager));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply it's label.\n * @record\n */\n/**\n * @template T\n */\nvar FocusKeyManager = /*@__PURE__*/ (function (_super) {\n    __extends(FocusKeyManager, _super);\n    function FocusKeyManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._origin = 'program';\n        return _this;\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setFocusOrigin = /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {?}\n     */\n        function (origin) {\n            this._origin = origin;\n            return this;\n        };\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds focuses the newly active item.\n     */\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds focuses the newly active item.\n     * @param {?} index\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setActiveItem = /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds focuses the newly active item.\n     * @param {?} index\n     * @return {?}\n     */\n        function (index) {\n            _super.prototype.setActiveItem.call(this, index);\n            if (this.activeItem) {\n                this.activeItem.focus(this._origin);\n            }\n        };\n    return FocusKeyManager;\n}(ListKeyManager));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LIVE_ANNOUNCER_ELEMENT_TOKEN = /*@__PURE__*/ new InjectionToken('liveAnnouncerElement');\nvar LiveAnnouncer = /*@__PURE__*/ (function () {\n    function LiveAnnouncer(elementToken, _document) {\n        this._document = _document;\n        // We inject the live element as `any` because the constructor signature cannot reference\n        // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n        // causes TypeScript to preserve the constructor signature types.\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * Announces a message to screenreaders.\n     * @param message Message to be announced to the screenreader\n     * @param politeness The politeness of the announcer element\n     * @returns Promise that will be resolved when the message is added to the DOM.\n     */\n    /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?} Promise that will be resolved when the message is added to the DOM.\n     */\n    LiveAnnouncer.prototype.announce = /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?} Promise that will be resolved when the message is added to the DOM.\n     */\n        function (message, politeness) {\n            var _this = this;\n            if (politeness === void 0) {\n                politeness = 'polite';\n            }\n            this._liveElement.textContent = '';\n            // TODO: ensure changing the politeness works on all environments we support.\n            this._liveElement.setAttribute('aria-live', politeness);\n            // This 100ms timeout is necessary for some browser + screen-reader combinations:\n            // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n            // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n            //   second time without clearing and then using a non-zero delay.\n            // (using JAWS 17 at time of this writing).\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    _this._liveElement.textContent = message;\n                    resolve();\n                }, 100);\n            });\n        };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._liveElement && this._liveElement.parentNode) {\n                this._liveElement.parentNode.removeChild(this._liveElement);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._createLiveElement = /**\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ liveEl = this._document.createElement('div');\n            liveEl.classList.add('cdk-visually-hidden');\n            liveEl.setAttribute('aria-atomic', 'true');\n            liveEl.setAttribute('aria-live', 'polite');\n            this._document.body.appendChild(liveEl);\n            return liveEl;\n        };\n    return LiveAnnouncer;\n}());\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @param {?} _document\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher, liveElement, _document) {\n    return parentDispatcher || new LiveAnnouncer(liveElement, _document);\n}\n/**\n * \\@docs-private\n */\nvar LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), LiveAnnouncer],\n        [/*@__PURE__*/ new Optional(), /*@__PURE__*/ new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nvar TOUCH_BUFFER_MS = 650;\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nvar FocusMonitor = /*@__PURE__*/ (function () {\n    function FocusMonitor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * A map of global objects to lists of current listeners.\n         */\n        this._unregisterGlobalListeners = function () { };\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} renderer\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    FocusMonitor.prototype.monitor = /**\n     * @param {?} element\n     * @param {?=} renderer\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n        function (element, renderer, checkChildren) {\n            var _this = this;\n            // TODO(mmalerba): clean up after deprecated signature is removed.\n            if (!(renderer instanceof Renderer2)) {\n                checkChildren = renderer;\n            }\n            checkChildren = !!checkChildren;\n            // Do nothing if we're not on the browser platform.\n            if (!this._platform.isBrowser) {\n                return of(null);\n            }\n            // Check if we're already monitoring this element.\n            if (this._elementInfo.has(element)) {\n                var /** @type {?} */ cachedInfo = this._elementInfo.get(element); /** @type {?} */\n                ((cachedInfo)).checkChildren = checkChildren;\n                return /** @type {?} */ ((cachedInfo)).subject.asObservable();\n            }\n            // Create monitored element info.\n            var /** @type {?} */ info = {\n                unlisten: function () { },\n                checkChildren: checkChildren,\n                subject: new Subject()\n            };\n            this._elementInfo.set(element, info);\n            this._incrementMonitoredElementCount();\n            // Start listening. We need to listen in capture phase since focus events don't bubble.\n            var /** @type {?} */ focusListener = function (event) { return _this._onFocus(event, element); };\n            var /** @type {?} */ blurListener = function (event) { return _this._onBlur(event, element); };\n            this._ngZone.runOutsideAngular(function () {\n                element.addEventListener('focus', focusListener, true);\n                element.addEventListener('blur', blurListener, true);\n            });\n            // Create an unlisten function for later.\n            info.unlisten = function () {\n                element.removeEventListener('focus', focusListener, true);\n                element.removeEventListener('blur', blurListener, true);\n            };\n            return info.subject.asObservable();\n        };\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param element The element to stop monitoring.\n     */\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    FocusMonitor.prototype.stopMonitoring = /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n        function (element) {\n            var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n            if (elementInfo) {\n                elementInfo.unlisten();\n                elementInfo.subject.complete();\n                this._setClasses(element);\n                this._elementInfo.delete(element);\n                this._decrementMonitoredElementCount();\n            }\n        };\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param element The element to focus.\n     * @param origin The focus origin.\n     */\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param {?} element The element to focus.\n     * @param {?} origin The focus origin.\n     * @return {?}\n     */\n    FocusMonitor.prototype.focusVia = /**\n     * Focuses the element via the specified focus origin.\n     * @param {?} element The element to focus.\n     * @param {?} origin The focus origin.\n     * @return {?}\n     */\n        function (element, origin) {\n            this._setOriginForCurrentEventQueue(origin);\n            element.focus();\n        };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._elementInfo.forEach(function (_info, element) { return _this.stopMonitoring(element); });\n        };\n    /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    FocusMonitor.prototype._registerGlobalListeners = /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            // Do nothing if we're not on the browser platform.\n            if (!this._platform.isBrowser) {\n                return;\n            }\n            // On keydown record the origin and clear any touch event that may be in progress.\n            var /** @type {?} */ documentKeydownListener = function () {\n                _this._lastTouchTarget = null;\n                _this._setOriginForCurrentEventQueue('keyboard');\n            };\n            // On mousedown record the origin only if there is not touch target, since a mousedown can\n            // happen as a result of a touch event.\n            var /** @type {?} */ documentMousedownListener = function () {\n                if (!_this._lastTouchTarget) {\n                    _this._setOriginForCurrentEventQueue('mouse');\n                }\n            };\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n            // see if a focus happens.\n            var /** @type {?} */ documentTouchstartListener = function (event) {\n                if (_this._touchTimeoutId != null) {\n                    clearTimeout(_this._touchTimeoutId);\n                }\n                _this._lastTouchTarget = event.target;\n                _this._touchTimeoutId = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);\n            };\n            // Make a note of when the window regains focus, so we can restore the origin info for the\n            // focused element.\n            var /** @type {?} */ windowFocusListener = function () {\n                _this._windowFocused = true;\n                _this._windowFocusTimeoutId = setTimeout(function () { return _this._windowFocused = false; }, 0);\n            };\n            // Note: we listen to events in the capture phase so we can detect them even if the user stops\n            // propagation.\n            this._ngZone.runOutsideAngular(function () {\n                document.addEventListener('keydown', documentKeydownListener, true);\n                document.addEventListener('mousedown', documentMousedownListener, true);\n                document.addEventListener('touchstart', documentTouchstartListener, supportsPassiveEventListeners() ? (({ passive: true, capture: true })) : true);\n                window.addEventListener('focus', windowFocusListener);\n            });\n            this._unregisterGlobalListeners = function () {\n                document.removeEventListener('keydown', documentKeydownListener, true);\n                document.removeEventListener('mousedown', documentMousedownListener, true);\n                document.removeEventListener('touchstart', documentTouchstartListener, supportsPassiveEventListeners() ? (({ passive: true, capture: true })) : true);\n                window.removeEventListener('focus', windowFocusListener);\n                // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n                clearTimeout(_this._windowFocusTimeoutId);\n                clearTimeout(_this._touchTimeoutId);\n                clearTimeout(_this._originTimeoutId);\n            };\n        };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    FocusMonitor.prototype._toggleClass = /**\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n        function (element, className, shouldSet) {\n            if (shouldSet) {\n                element.classList.add(className);\n            }\n            else {\n                element.classList.remove(className);\n            }\n        };\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setClasses = /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n        function (element, origin) {\n            var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n            if (elementInfo) {\n                this._toggleClass(element, 'cdk-focused', !!origin);\n                this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n                this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n                this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n                this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n            }\n        };\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setOriginForCurrentEventQueue = /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n        function (origin) {\n            var _this = this;\n            this._origin = origin;\n            this._originTimeoutId = setTimeout(function () { return _this._origin = null; }, 0);\n        };\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    FocusMonitor.prototype._wasCausedByTouch = /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n        function (event) {\n            // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n            // Consider the following dom structure:\n            //\n            // <div #parent tabindex=\"0\" cdkFocusClasses>\n            //   <div #child (click)=\"#parent.focus()\"></div>\n            // </div>\n            //\n            // If the user touches the #child element and the #parent is programmatically focused as a\n            // result, this code will still consider it to have been caused by the touch event and will\n            // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n            // relatively small edge-case that can be worked around by using\n            // focusVia(parentEl, 'program') to focus the parent element.\n            //\n            // If we decide that we absolutely must handle this case correctly, we can do so by listening\n            // for the first focus event after the touchstart, and then the first blur event after that\n            // focus event. When that blur event fires we know that whatever follows is not a result of the\n            // touchstart.\n            var /** @type {?} */ focusTarget = event.target;\n            return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n                (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n        };\n    /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onFocus = /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n        function (event, element) {\n            // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n            // focus event affecting the monitored element. If we want to use the origin of the first event\n            // instead we should check for the cdk-focused class here and return if the element already has\n            // it. (This only matters for elements that have includesChildren = true).\n            // If we are not counting child-element-focus as focused, make sure that the event target is the\n            // monitored element itself.\n            var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n            if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n                return;\n            }\n            // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n            // 1) The window has just regained focus, in which case we want to restore the focused state of\n            //    the element from before the window blurred.\n            // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n            // 3) The element was programmatically focused, in which case we should mark the origin as\n            //    'program'.\n            if (!this._origin) {\n                if (this._windowFocused && this._lastFocusOrigin) {\n                    this._origin = this._lastFocusOrigin;\n                }\n                else if (this._wasCausedByTouch(event)) {\n                    this._origin = 'touch';\n                }\n                else {\n                    this._origin = 'program';\n                }\n            }\n            this._setClasses(element, this._origin);\n            elementInfo.subject.next(this._origin);\n            this._lastFocusOrigin = this._origin;\n            this._origin = null;\n        };\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onBlur = /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n        function (event, element) {\n            // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n            // order to focus another child of the monitored element.\n            var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n            if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n                return;\n            }\n            this._setClasses(element);\n            elementInfo.subject.next(null);\n        };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype._incrementMonitoredElementCount = /**\n     * @return {?}\n     */\n        function () {\n            // Register global listeners when first element is monitored.\n            if (++this._monitoredElementCount == 1) {\n                this._registerGlobalListeners();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype._decrementMonitoredElementCount = /**\n     * @return {?}\n     */\n        function () {\n            // Unregister global listeners when last element is unmonitored.\n            if (!--this._monitoredElementCount) {\n                this._unregisterGlobalListeners();\n                this._unregisterGlobalListeners = function () { };\n            }\n        };\n    return FocusMonitor;\n}());\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nvar CdkMonitorFocus = /*@__PURE__*/ (function () {\n    function CdkMonitorFocus(_elementRef, _focusMonitor) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef.nativeElement, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });\n    }\n    /**\n     * @return {?}\n     */\n    CdkMonitorFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n            this._monitorSubscription.unsubscribe();\n        };\n    return CdkMonitorFocus;\n}());\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private\n */\nvar FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar A11yModule = /*@__PURE__*/ (function () {\n    function A11yModule() {\n    }\n    return A11yModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { CdkTrapFocus as FocusTrapDirective, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER_FACTORY, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, FocusTrapDeprecatedDirective, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_ELEMENT_TOKEN, LiveAnnouncer, LIVE_ANNOUNCER_PROVIDER_FACTORY, LIVE_ANNOUNCER_PROVIDER, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER_FACTORY, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n//# sourceMappingURL=a11y.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/a11y.es5.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventObservable = /*@__PURE__*/ (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable));\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/FromEventObservable.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\nimport { FromEventObservable } from './FromEventObservable';\nexport var fromEvent = FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/fromEvent.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/audit.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START ._TimerObservable PURE_IMPORTS_END */\nimport { TimerObservable } from './TimerObservable';\nexport var timer = TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/timer.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { isNumeric } from '../util/isNumeric';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var TimerObservable = /*@__PURE__*/ (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) {\n            dueTime = 0;\n        }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler(scheduler)) {\n            scheduler = async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) {\n            initialDelay = 0;\n        }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    /** @deprecated internal use only */ TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable));\n//# sourceMappingURL=TimerObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/TimerObservable.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START .._util_isArray PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/util/isNumeric.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/util/isDate.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START .._scheduler_async,._audit,.._observable_timer PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/auditTime.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_cdk_platform,rxjs_Subject,rxjs_Observable,rxjs_observable_of,rxjs_observable_fromEvent,rxjs_operators_auditTime,rxjs_operators_filter,rxjs_observable_merge PURE_IMPORTS_END */\nimport { Directive, ElementRef, Injectable, NgModule, NgZone, Optional, SkipSelf } from '@angular/core';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { auditTime } from 'rxjs/operators/auditTime';\nimport { filter } from 'rxjs/operators/filter';\nimport { merge } from 'rxjs/observable/merge';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n */\nvar DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = /*@__PURE__*/ (function () {\n    function ScrollDispatcher(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.register = /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n        function (scrollable) {\n            var _this = this;\n            var /** @type {?} */ scrollSubscription = scrollable.elementScrolled()\n                .subscribe(function () { return _this._scrolled.next(scrollable); });\n            this.scrollContainers.set(scrollable, scrollSubscription);\n        };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.deregister = /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n        function (scrollable) {\n            var /** @type {?} */ scrollableReference = this.scrollContainers.get(scrollable);\n            if (scrollableReference) {\n                scrollableReference.unsubscribe();\n                this.scrollContainers.delete(scrollable);\n            }\n        };\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrolled = /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n        function (auditTimeInMs) {\n            var _this = this;\n            if (auditTimeInMs === void 0) {\n                auditTimeInMs = DEFAULT_SCROLL_TIME;\n            }\n            return this._platform.isBrowser ? Observable.create(function (observer) {\n                if (!_this._globalSubscription) {\n                    _this._addGlobalListener();\n                }\n                // In the case of a 0ms delay, use an observable without auditTime\n                // since it does add a perceptible delay in processing overhead.\n                var /** @type {?} */ subscription = auditTimeInMs > 0 ?\n                    _this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                    _this._scrolled.subscribe(observer);\n                _this._scrolledCount++;\n                return function () {\n                    subscription.unsubscribe();\n                    _this._scrolledCount--;\n                    if (!_this._scrolledCount) {\n                        _this._removeGlobalListener();\n                    }\n                };\n            }) : of();\n        };\n    /**\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._removeGlobalListener();\n            this.scrollContainers.forEach(function (_, container) { return _this.deregister(container); });\n        };\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ancestorScrolled = /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n        function (elementRef, auditTimeInMs) {\n            var /** @type {?} */ ancestors = this.getAncestorScrollContainers(elementRef);\n            return this.scrolled(auditTimeInMs).pipe(filter(function (target) {\n                return !target || ancestors.indexOf(target) > -1;\n            }));\n        };\n    /** Returns all registered Scrollables that contain the provided element. */\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.getAncestorScrollContainers = /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n        function (elementRef) {\n            var _this = this;\n            var /** @type {?} */ scrollingContainers = [];\n            this.scrollContainers.forEach(function (_subscription, scrollable) {\n                if (_this._scrollableContainsElement(scrollable, elementRef)) {\n                    scrollingContainers.push(scrollable);\n                }\n            });\n            return scrollingContainers;\n        };\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._scrollableContainsElement = /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n        function (scrollable, elementRef) {\n            var /** @type {?} */ element = elementRef.nativeElement;\n            var /** @type {?} */ scrollableElement = scrollable.getElementRef().nativeElement;\n            // Traverse through the element parents until we reach null, checking if any of the elements\n            // are the scrollable's element.\n            do {\n                if (element == scrollableElement) {\n                    return true;\n                }\n            } while (element = element.parentElement);\n            return false;\n        };\n    /**\n     * Sets up the global scroll listeners.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._addGlobalListener = /**\n     * Sets up the global scroll listeners.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._globalSubscription = this._ngZone.runOutsideAngular(function () {\n                return fromEvent(window.document, 'scroll').subscribe(function () { return _this._scrolled.next(); });\n            });\n        };\n    /**\n     * Cleans up the global scroll listener.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._removeGlobalListener = /**\n     * Cleans up the global scroll listener.\n     * @return {?}\n     */\n        function () {\n            if (this._globalSubscription) {\n                this._globalSubscription.unsubscribe();\n                this._globalSubscription = null;\n            }\n        };\n    return ScrollDispatcher;\n}());\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private\n */\nvar SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar CdkScrollable = /*@__PURE__*/ (function () {\n    function CdkScrollable(_elementRef, _scroll, _ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._scroll = _scroll;\n        this._ngZone = _ngZone;\n        this._elementScrolled = new Subject();\n        this._scrollListener = function (event) { return _this._elementScrolled.next(event); };\n    }\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._ngZone.runOutsideAngular(function () {\n                _this.getElementRef().nativeElement.addEventListener('scroll', _this._scrollListener);\n            });\n            this._scroll.register(this);\n        };\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._scroll.deregister(this);\n            if (this._scrollListener) {\n                this.getElementRef().nativeElement.removeEventListener('scroll', this._scrollListener);\n            }\n        };\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     */\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    CdkScrollable.prototype.elementScrolled = /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n        function () {\n            return this._elementScrolled.asObservable();\n        };\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.getElementRef = /**\n     * @return {?}\n     */\n        function () {\n            return this._elementRef;\n        };\n    return CdkScrollable;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n */\nvar DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nvar ViewportRuler = /*@__PURE__*/ (function () {\n    function ViewportRuler(_platform, ngZone) {\n        var _this = this;\n        this._platform = _platform;\n        this._change = _platform.isBrowser ? ngZone.runOutsideAngular(function () {\n            return merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange'));\n        }) : of();\n        this._invalidateCache = this.change().subscribe(function () { return _this._updateViewportSize(); });\n    }\n    /**\n     * @return {?}\n     */\n    ViewportRuler.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._invalidateCache.unsubscribe();\n        };\n    /** Returns the viewport's width and height. */\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportSize = /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n        function () {\n            if (!this._viewportSize) {\n                this._updateViewportSize();\n            }\n            var /** @type {?} */ output = { width: this._viewportSize.width, height: this._viewportSize.height };\n            // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n            if (!this._platform.isBrowser) {\n                this._viewportSize = /** @type {?} */ ((null));\n            }\n            return output;\n        };\n    /** Gets a ClientRect for the viewport's bounds. */\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportRect = /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n        function () {\n            // Use the document element's bounding rect rather than the window scroll properties\n            // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n            // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n            // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n            // can disagree when the page is pinch-zoomed (on devices that support touch).\n            // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n            // We use the documentElement instead of the body because, by default (without a css reset)\n            // browsers typically give the document body an 8px margin, which is not included in\n            // getBoundingClientRect().\n            var /** @type {?} */ scrollPosition = this.getViewportScrollPosition();\n            var _a = this.getViewportSize(), width = _a.width, height = _a.height;\n            return {\n                top: scrollPosition.top,\n                left: scrollPosition.left,\n                bottom: scrollPosition.top + height,\n                right: scrollPosition.left + width,\n                height: height,\n                width: width,\n            };\n        };\n    /** Gets the (top, left) scroll position of the viewport. */\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n        function () {\n            // While we can get a reference to the fake document\n            // during SSR, it doesn't have getBoundingClientRect.\n            if (!this._platform.isBrowser) {\n                return { top: 0, left: 0 };\n            }\n            // The top-left-corner of the viewport is determined by the scroll position of the document\n            // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n            // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n            // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n            // `document.documentElement` works consistently, where the `top` and `left` values will\n            // equal negative the scroll position.\n            var /** @type {?} */ documentRect = document.documentElement.getBoundingClientRect();\n            var /** @type {?} */ top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                document.documentElement.scrollTop || 0;\n            var /** @type {?} */ left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                document.documentElement.scrollLeft || 0;\n            return { top: top, left: left };\n        };\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttle Time in milliseconds to throttle the stream.\n     */\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime\n     * @return {?}\n     */\n    ViewportRuler.prototype.change = /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime\n     * @return {?}\n     */\n        function (throttleTime) {\n            if (throttleTime === void 0) {\n                throttleTime = DEFAULT_RESIZE_TIME;\n            }\n            return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n        };\n    /**\n     * Updates the cached viewport size.\n     * @return {?}\n     */\n    ViewportRuler.prototype._updateViewportSize = /**\n     * Updates the cached viewport size.\n     * @return {?}\n     */\n        function () {\n            this._viewportSize = this._platform.isBrowser ?\n                { width: window.innerWidth, height: window.innerHeight } :\n                { width: 0, height: 0 };\n        };\n    return ViewportRuler;\n}());\n/**\n * \\@docs-private\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private\n */\nvar VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ScrollDispatchModule = /*@__PURE__*/ (function () {\n    function ScrollDispatchModule() {\n    }\n    return ScrollDispatchModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER_FACTORY, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER_FACTORY, VIEWPORT_RULER_PROVIDER, ScrollDispatchModule };\n//# sourceMappingURL=scrolling.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/scrolling.es5.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_common PURE_IMPORTS_END */\nimport { Directive, EventEmitter, Inject, Injectable, InjectionToken, Input, NgModule, Optional, Output } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nvar DIR_DOCUMENT = /*@__PURE__*/ new InjectionToken('cdk-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nvar Directionality = /*@__PURE__*/ (function () {\n    function Directionality(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            var /** @type {?} */ bodyDir = _document.body ? _document.body.dir : null;\n            var /** @type {?} */ htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = /** @type {?} */ ((bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    return Directionality;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nvar Dir = /*@__PURE__*/ (function () {\n    function Dir() {\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */ function () { return this._dir; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */ function (v) {\n            var /** @type {?} */ old = this._dir;\n            this._dir = v;\n            if (old !== this._dir && this._isInitialized) {\n                this.change.emit(this._dir);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /** Current layout direction of the element. */\n        get: /**\n         * Current layout direction of the element.\n         * @return {?}\n         */ function () { return this.dir; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Initialize once default value has been set. */\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    Dir.prototype.ngAfterContentInit = /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n        function () {\n            this._isInitialized = true;\n        };\n    /**\n     * @return {?}\n     */\n    Dir.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.change.complete();\n        };\n    return Dir;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar BidiModule = /*@__PURE__*/ (function () {\n    function BidiModule() {\n    }\n    return BidiModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule };\n//# sourceMappingURL=bidi.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/bidi.es5.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START tslib,tslib,_angular_core PURE_IMPORTS_END */\nimport { __extends } from 'tslib';\nimport { ComponentFactoryResolver, Directive, EventEmitter, Input, NgModule, Output, TemplateRef, ViewContainerRef } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nvar Portal = /*@__PURE__*/ (function () {\n    function Portal() {\n    }\n    /** Attach this portal to a host. */\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.attach = /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n        function (host) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            this._attachedHost = host;\n            return /** @type {?} */ (host.attach(this));\n        };\n    /** Detach this portal from its host */\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    Portal.prototype.detach = /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ host = this._attachedHost;\n            if (host == null) {\n                throwNoPortalAttachedError();\n            }\n            else {\n                this._attachedHost = null;\n                host.detach();\n            }\n        };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /** Whether this portal is attached to a host. */\n        get: /**\n         * Whether this portal is attached to a host.\n         * @return {?}\n         */ function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.setAttachedHost = /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n        function (host) {\n            this._attachedHost = host;\n        };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nvar ComponentPortal = /*@__PURE__*/ (function (_super) {\n    __extends(ComponentPortal, _super);\n    function ComponentPortal(component, viewContainerRef, injector) {\n        var _this = _super.call(this) || this;\n        _this.component = component;\n        _this.viewContainerRef = viewContainerRef;\n        _this.injector = injector;\n        return _this;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nvar TemplatePortal = /*@__PURE__*/ (function (_super) {\n    __extends(TemplatePortal, _super);\n    function TemplatePortal(template, viewContainerRef, context) {\n        var _this = _super.call(this) || this;\n        _this.templateRef = template;\n        _this.viewContainerRef = viewContainerRef;\n        _this.context = context;\n        return _this;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    TemplatePortal.prototype.attach = /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n        function (host, context) {\n            if (context === void 0) {\n                context = this.context;\n            }\n            this.context = context;\n            return _super.prototype.attach.call(this, host);\n        };\n    /**\n     * @return {?}\n     */\n    TemplatePortal.prototype.detach = /**\n     * @return {?}\n     */\n        function () {\n            this.context = undefined;\n            return _super.prototype.detach.call(this);\n        };\n    return TemplatePortal;\n}(Portal));\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nvar BasePortalOutlet = /*@__PURE__*/ (function () {\n    function BasePortalOutlet() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n    }\n    /** Whether this host has an attached portal. */\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.hasAttached = /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n        function () {\n            return !!this._attachedPortal;\n        };\n    /** Attaches a portal. */\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attach = /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n        function (portal) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n            if (portal instanceof ComponentPortal) {\n                this._attachedPortal = portal;\n                return this.attachComponentPortal(portal);\n            }\n            else if (portal instanceof TemplatePortal) {\n                this._attachedPortal = portal;\n                return this.attachTemplatePortal(portal);\n            }\n            throwUnknownPortalTypeError();\n        };\n    /** Detaches a previously attached portal. */\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.detach = /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n        function () {\n            if (this._attachedPortal) {\n                this._attachedPortal.setAttachedHost(null);\n                this._attachedPortal = null;\n            }\n            this._invokeDisposeFn();\n        };\n    /** Permanently dispose of this portal host. */\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.dispose = /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n        function () {\n            if (this.hasAttached()) {\n                this.detach();\n            }\n            this._invokeDisposeFn();\n            this._isDisposed = true;\n        };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.setDisposeFn = /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this._disposeFn = fn;\n        };\n    /**\n     * @return {?}\n     */\n    BasePortalOutlet.prototype._invokeDisposeFn = /**\n     * @return {?}\n     */\n        function () {\n            if (this._disposeFn) {\n                this._disposeFn();\n                this._disposeFn = null;\n            }\n        };\n    return BasePortalOutlet;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nvar DomPortalOutlet = /*@__PURE__*/ (function (_super) {\n    __extends(DomPortalOutlet, _super);\n    function DomPortalOutlet(outletElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        var _this = _super.call(this) || this;\n        _this.outletElement = outletElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        _this._defaultInjector = _defaultInjector;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    DomPortalOutlet.prototype.attachComponentPortal = /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n        function (portal) {\n            var _this = this;\n            var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n            var /** @type {?} */ componentRef;\n            // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n            // for the component (in terms of Angular's component tree, not rendering).\n            // When the ViewContainerRef is missing, we use the factory to create the component directly\n            // and then manually attach the view to the application.\n            if (portal.viewContainerRef) {\n                componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);\n                this.setDisposeFn(function () { return componentRef.destroy(); });\n            }\n            else {\n                componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n                this._appRef.attachView(componentRef.hostView);\n                this.setDisposeFn(function () {\n                    _this._appRef.detachView(componentRef.hostView);\n                    componentRef.destroy();\n                });\n            }\n            // At this point the component has been instantiated, so we move it to the location in the DOM\n            // where we want it to be rendered.\n            this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n            return componentRef;\n        };\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    DomPortalOutlet.prototype.attachTemplatePortal = /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n        function (portal) {\n            var _this = this;\n            var /** @type {?} */ viewContainer = portal.viewContainerRef;\n            var /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n            viewRef.detectChanges();\n            // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n            // But for the DomPortalOutlet the view can be added everywhere in the DOM\n            // (e.g Overlay Container) To move the view to the specified host element. We just\n            // re-append the existing root nodes.\n            viewRef.rootNodes.forEach(function (rootNode) { return _this.outletElement.appendChild(rootNode); });\n            this.setDisposeFn((function () {\n                var /** @type {?} */ index = viewContainer.indexOf(viewRef);\n                if (index !== -1) {\n                    viewContainer.remove(index);\n                }\n            }));\n            // TODO(jelbourn): Return locals from view.\n            return viewRef;\n        };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    DomPortalOutlet.prototype.dispose = /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n        function () {\n            _super.prototype.dispose.call(this);\n            if (this.outletElement.parentNode != null) {\n                this.outletElement.parentNode.removeChild(this.outletElement);\n            }\n        };\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    DomPortalOutlet.prototype._getComponentRootNode = /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n        function (componentRef) {\n            return /** @type {?} */ (((componentRef.hostView)).rootNodes[0]);\n        };\n    return DomPortalOutlet;\n}(BasePortalOutlet));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nvar CdkPortal = /*@__PURE__*/ (function (_super) {\n    __extends(CdkPortal, _super);\n    function CdkPortal(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    return CdkPortal;\n}(TemplatePortal));\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nvar CdkPortalOutlet = /*@__PURE__*/ (function (_super) {\n    __extends(CdkPortalOutlet, _super);\n    function CdkPortalOutlet(_componentFactoryResolver, _viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        _this._isInitialized = false;\n        _this.attached = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(CdkPortalOutlet.prototype, \"_deprecatedPortal\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.portal; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */ function (v) { this.portal = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkPortalOutlet.prototype, \"_deprecatedPortalHost\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.portal; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */ function (v) { this.portal = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkPortalOutlet.prototype, \"portal\", {\n        /** Portal associated with the Portal outlet. */\n        get: /**\n         * Portal associated with the Portal outlet.\n         * @return {?}\n         */ function () {\n            return this._attachedPortal;\n        },\n        set: /**\n         * @param {?} portal\n         * @return {?}\n         */ function (portal) {\n            // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n            // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n            // and attach a portal programmatically in the parent component. When Angular does the first CD\n            // round, it will fire the setter with empty string, causing the user's content to be cleared.\n            if (this.hasAttached() && !portal && !this._isInitialized) {\n                return;\n            }\n            if (this.hasAttached()) {\n                _super.prototype.detach.call(this);\n            }\n            if (portal) {\n                _super.prototype.attach.call(this, portal);\n            }\n            this._attachedPortal = portal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkPortalOutlet.prototype, \"attachedRef\", {\n        /** Component or view reference that is attached to the portal. */\n        get: /**\n         * Component or view reference that is attached to the portal.\n         * @return {?}\n         */ function () {\n            return this._attachedRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkPortalOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._isInitialized = true;\n        };\n    /**\n     * @return {?}\n     */\n    CdkPortalOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            _super.prototype.dispose.call(this);\n            this._attachedPortal = null;\n            this._attachedRef = null;\n        };\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    CdkPortalOutlet.prototype.attachComponentPortal = /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n        function (portal) {\n            portal.setAttachedHost(this);\n            // If the portal specifies an origin, use that as the logical location of the component\n            // in the application tree. Otherwise use the location of this PortalOutlet.\n            var /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?\n                portal.viewContainerRef :\n                this._viewContainerRef;\n            var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n            var /** @type {?} */ ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);\n            _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });\n            this._attachedPortal = portal;\n            this._attachedRef = ref;\n            this.attached.emit(ref);\n            return ref;\n        };\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    CdkPortalOutlet.prototype.attachTemplatePortal = /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n        function (portal) {\n            var _this = this;\n            portal.setAttachedHost(this);\n            var /** @type {?} */ viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n            _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });\n            this._attachedPortal = portal;\n            this._attachedRef = viewRef;\n            this.attached.emit(viewRef);\n            return viewRef;\n        };\n    return CdkPortalOutlet;\n}(BasePortalOutlet));\nvar PortalModule = /*@__PURE__*/ (function () {\n    function PortalModule() {\n    }\n    return PortalModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nvar PortalInjector = /*@__PURE__*/ (function () {\n    function PortalInjector(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    PortalInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n        function (token, notFoundValue) {\n            var /** @type {?} */ value = this._customTokens.get(token);\n            if (typeof value !== 'undefined') {\n                return value;\n            }\n            return this._parentInjector.get(token, notFoundValue);\n        };\n    return PortalInjector;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { DomPortalOutlet as DomPortalHost, CdkPortalOutlet as PortalHostDirective, CdkPortal as TemplatePortalDirective, BasePortalOutlet as BasePortalHost, Portal, ComponentPortal, TemplatePortal, BasePortalOutlet, DomPortalOutlet, CdkPortal, CdkPortalOutlet, PortalModule, PortalInjector };\n//# sourceMappingURL=portal.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/portal.es5.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_cdk_scrolling,_angular_common,_angular_cdk_bidi,_angular_cdk_portal,tslib,tslib,rxjs_operators_take,rxjs_Subject,rxjs_Subscription,rxjs_operators_filter,rxjs_observable_fromEvent,_angular_cdk_coercion,_angular_cdk_keycodes PURE_IMPORTS_END */\nimport { ApplicationRef, ComponentFactoryResolver, Directive, ElementRef, EventEmitter, Inject, Injectable, InjectionToken, Injector, Input, NgModule, NgZone, Optional, Output, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { CdkScrollable, ScrollDispatchModule, ScrollDispatcher, VIEWPORT_RULER_PROVIDER, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { BidiModule, Directionality } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, PortalModule, TemplatePortal } from '@angular/cdk/portal';\nimport { __assign, __extends } from 'tslib';\nimport { take } from 'rxjs/operators/take';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators/filter';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nvar NoopScrollStrategy = /*@__PURE__*/ (function () {\n    function NoopScrollStrategy() {\n    }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.enable = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n        function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.disable = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n        function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.attach = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n        function () { };\n    return NoopScrollStrategy;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nvar OverlayConfig = /*@__PURE__*/ (function () {\n    function OverlayConfig(config) {\n        var _this = this;\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * The direction of the text in the overlay panel.\n         */\n        this.direction = 'ltr';\n        if (config) {\n            Object.keys(config)\n                .filter(function (key) { return typeof config[key] !== 'undefined'; })\n                .forEach(function (key) { return _this[key] = config[key]; });\n        }\n    }\n    return OverlayConfig;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\n/**\n * A connection point on the overlay element.\n * @record\n */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nvar ConnectionPositionPair = /*@__PURE__*/ (function () {\n    function ConnectionPositionPair(origin, overlay, offsetX, offsetY) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  \\@docs-private\n */\nvar ScrollingVisibility = /*@__PURE__*/ (function () {\n    function ScrollingVisibility() {\n    }\n    return ScrollingVisibility;\n}());\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nvar ConnectedOverlayPositionChange = /*@__PURE__*/ (function () {\n    function ConnectedOverlayPositionChange(connectionPair, /** @docs-private */ scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n    return ConnectedOverlayPositionChange;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(\"Scroll strategy has already been attached.\");\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nvar CloseScrollStrategy = /*@__PURE__*/ (function () {\n    function CloseScrollStrategy(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = function () {\n            _this.disable();\n            if (_this._overlayRef.hasAttached()) {\n                _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n        function (overlayRef) {\n            if (this._overlayRef) {\n                throw getMatScrollStrategyAlreadyAttachedError();\n            }\n            this._overlayRef = overlayRef;\n        };\n    /** Enables the closing of the attached overlay on scroll. */\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.enable = /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._scrollSubscription) {\n                return;\n            }\n            var /** @type {?} */ stream = this._scrollDispatcher.scrolled(0);\n            if (this._config && this._config.threshold && this._config.threshold > 1) {\n                this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                this._scrollSubscription = stream.subscribe(function () {\n                    var /** @type {?} */ scrollPosition = _this._viewportRuler.getViewportScrollPosition().top;\n                    if (Math.abs(scrollPosition - _this._initialScrollPosition) > /** @type {?} */ ((((_this._config)).threshold))) {\n                        _this._detach();\n                    }\n                    else {\n                        _this._overlayRef.updatePosition();\n                    }\n                });\n            }\n            else {\n                this._scrollSubscription = stream.subscribe(this._detach);\n            }\n        };\n    /** Disables the closing the attached overlay on scroll. */\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.disable = /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n        function () {\n            if (this._scrollSubscription) {\n                this._scrollSubscription.unsubscribe();\n                this._scrollSubscription = null;\n            }\n        };\n    return CloseScrollStrategy;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nvar BlockScrollStrategy = /*@__PURE__*/ (function () {\n    function BlockScrollStrategy(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n        function () { };\n    /** Blocks page-level scroll while the attached overlay is open. */\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.enable = /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n        function () {\n            if (this._canBeEnabled()) {\n                var /** @type {?} */ root = this._document.documentElement;\n                this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n                // Cache the previous inline styles in case the user had set them.\n                this._previousHTMLStyles.left = root.style.left || '';\n                this._previousHTMLStyles.top = root.style.top || '';\n                // Note: we're using the `html` node, instead of the `body`, because the `body` may\n                // have the user agent margin, whereas the `html` is guaranteed not to have one.\n                root.style.left = -this._previousScrollPosition.left + \"px\";\n                root.style.top = -this._previousScrollPosition.top + \"px\";\n                root.classList.add('cdk-global-scrollblock');\n                this._isEnabled = true;\n            }\n        };\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.disable = /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n        function () {\n            if (this._isEnabled) {\n                var /** @type {?} */ html = this._document.documentElement;\n                var /** @type {?} */ body = this._document.body;\n                var /** @type {?} */ previousHtmlScrollBehavior = html.style['scrollBehavior'] || '';\n                var /** @type {?} */ previousBodyScrollBehavior = body.style['scrollBehavior'] || '';\n                this._isEnabled = false;\n                html.style.left = this._previousHTMLStyles.left;\n                html.style.top = this._previousHTMLStyles.top;\n                html.classList.remove('cdk-global-scrollblock');\n                // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n                // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n                html.style['scrollBehavior'] = body.style['scrollBehavior'] = 'auto';\n                window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n                html.style['scrollBehavior'] = previousHtmlScrollBehavior;\n                body.style['scrollBehavior'] = previousBodyScrollBehavior;\n            }\n        };\n    /**\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype._canBeEnabled = /**\n     * @return {?}\n     */\n        function () {\n            // Since the scroll strategies can't be singletons, we have to use a global CSS class\n            // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n            // scrolling multiple times.\n            var /** @type {?} */ html = this._document.documentElement;\n            if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n                return false;\n            }\n            var /** @type {?} */ body = this._document.body;\n            var /** @type {?} */ viewport = this._viewportRuler.getViewportSize();\n            return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n        };\n    return BlockScrollStrategy;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(function (containerBounds) {\n        var /** @type {?} */ outsideAbove = element.bottom < containerBounds.top;\n        var /** @type {?} */ outsideBelow = element.top > containerBounds.bottom;\n        var /** @type {?} */ outsideLeft = element.right < containerBounds.left;\n        var /** @type {?} */ outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(function (scrollContainerRect) {\n        var /** @type {?} */ clippedAbove = element.top < scrollContainerRect.top;\n        var /** @type {?} */ clippedBelow = element.bottom > scrollContainerRect.bottom;\n        var /** @type {?} */ clippedLeft = element.left < scrollContainerRect.left;\n        var /** @type {?} */ clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nvar RepositionScrollStrategy = /*@__PURE__*/ (function () {\n    function RepositionScrollStrategy(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n        function (overlayRef) {\n            if (this._overlayRef) {\n                throw getMatScrollStrategyAlreadyAttachedError();\n            }\n            this._overlayRef = overlayRef;\n        };\n    /** Enables repositioning of the attached overlay on scroll. */\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.enable = /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (!this._scrollSubscription) {\n                var /** @type {?} */ throttle = this._config ? this._config.scrollThrottle : 0;\n                this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(function () {\n                    _this._overlayRef.updatePosition();\n                    // TODO(crisbeto): make `close` on by default once all components can handle it.\n                    if (_this._config && _this._config.autoClose) {\n                        var /** @type {?} */ overlayRect = _this._overlayRef.overlayElement.getBoundingClientRect();\n                        var _a = _this._viewportRuler.getViewportSize(), width = _a.width, height = _a.height;\n                        // TODO(crisbeto): include all ancestor scroll containers here once\n                        // we have a way of exposing the trigger element to the scroll strategy.\n                        var /** @type {?} */ parentRects = [{ width: width, height: height, bottom: height, right: width, top: 0, left: 0 }];\n                        if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                            _this.disable();\n                            _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n                        }\n                    }\n                });\n            }\n        };\n    /** Disables repositioning of the attached overlay on scroll. */\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.disable = /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n        function () {\n            if (this._scrollSubscription) {\n                this._scrollSubscription.unsubscribe();\n                this._scrollSubscription = null;\n            }\n        };\n    return RepositionScrollStrategy;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nvar ScrollStrategyOptions = /*@__PURE__*/ (function () {\n    function ScrollStrategyOptions(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = function () { return new NoopScrollStrategy(); };\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = function (config) {\n            return new CloseScrollStrategy(_this._scrollDispatcher, _this._ngZone, _this._viewportRuler, config);\n        };\n        /**\n         * Block scrolling.\n         */\n        this.block = function () { return new BlockScrollStrategy(_this._viewportRuler, _this._document); };\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = function (config) {\n            return new RepositionScrollStrategy(_this._scrollDispatcher, _this._viewportRuler, _this._ngZone, config);\n        };\n        this._document = document;\n    }\n    return ScrollStrategyOptions;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar OverlayRef = /*@__PURE__*/ (function () {\n    function OverlayRef(_portalOutlet, _pane, _config, _ngZone, _keyboardDispatcher, _document) {\n        this._portalOutlet = _portalOutlet;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        if (_config.scrollStrategy) {\n            _config.scrollStrategy.attach(this);\n        }\n    }\n    Object.defineProperty(OverlayRef.prototype, \"overlayElement\", {\n        /** The overlay's HTML element */\n        get: /**\n         * The overlay's HTML element\n         * @return {?}\n         */ function () {\n            return this._pane;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"backdropElement\", {\n        /** The overlay's backdrop HTML element. */\n        get: /**\n         * The overlay's backdrop HTML element.\n         * @return {?}\n         */ function () {\n            return this._backdropElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    OverlayRef.prototype.attach = /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n        function (portal) {\n            var _this = this;\n            var /** @type {?} */ attachResult = this._portalOutlet.attach(portal);\n            if (this._config.positionStrategy) {\n                this._config.positionStrategy.attach(this);\n            }\n            // Update the pane element with the given configuration.\n            this._updateStackingOrder();\n            this._updateElementSize();\n            this._updateElementDirection();\n            if (this._config.scrollStrategy) {\n                this._config.scrollStrategy.enable();\n            }\n            // Update the position once the zone is stable so that the overlay will be fully rendered\n            // before attempting to position it, as the position may depend on the size of the rendered\n            // content.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n                // The overlay could've been detached before the zone has stabilized.\n                if (_this.hasAttached()) {\n                    _this.updatePosition();\n                }\n            });\n            // Enable pointer events for the overlay pane element.\n            this._togglePointerEvents(true);\n            if (this._config.hasBackdrop) {\n                this._attachBackdrop();\n            }\n            if (this._config.panelClass) {\n                // We can't do a spread here, because IE doesn't support setting multiple classes.\n                if (Array.isArray(this._config.panelClass)) {\n                    this._config.panelClass.forEach(function (cls) { return _this._pane.classList.add(cls); });\n                }\n                else {\n                    this._pane.classList.add(this._config.panelClass);\n                }\n            }\n            // Only emit the `attachments` event once all other setup is done.\n            this._attachments.next();\n            // Track this overlay by the keyboard dispatcher\n            this._keyboardDispatcher.add(this);\n            return attachResult;\n        };\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    OverlayRef.prototype.detach = /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n        function () {\n            if (!this.hasAttached()) {\n                return;\n            }\n            this.detachBackdrop();\n            // When the overlay is detached, the pane element should disable pointer events.\n            // This is necessary because otherwise the pane element will cover the page and disable\n            // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n            this._togglePointerEvents(false);\n            if (this._config.positionStrategy && this._config.positionStrategy.detach) {\n                this._config.positionStrategy.detach();\n            }\n            if (this._config.scrollStrategy) {\n                this._config.scrollStrategy.disable();\n            }\n            var /** @type {?} */ detachmentResult = this._portalOutlet.detach();\n            // Only emit after everything is detached.\n            this._detachments.next();\n            // Remove this overlay from keyboard dispatcher tracking\n            this._keyboardDispatcher.remove(this);\n            return detachmentResult;\n        };\n    /** Cleans up the overlay from the DOM. */\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    OverlayRef.prototype.dispose = /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ isAttached = this.hasAttached();\n            if (this._config.positionStrategy) {\n                this._config.positionStrategy.dispose();\n            }\n            if (this._config.scrollStrategy) {\n                this._config.scrollStrategy.disable();\n            }\n            this.detachBackdrop();\n            this._keyboardDispatcher.remove(this);\n            this._portalOutlet.dispose();\n            this._attachments.complete();\n            this._backdropClick.complete();\n            this._keydownEvents.complete();\n            if (isAttached) {\n                this._detachments.next();\n            }\n            this._detachments.complete();\n        };\n    /** Whether the overlay has attached content. */\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    OverlayRef.prototype.hasAttached = /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n        function () {\n            return this._portalOutlet.hasAttached();\n        };\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    OverlayRef.prototype.backdropClick = /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n        function () {\n            return this._backdropClick.asObservable();\n        };\n    /** Gets an observable that emits when the overlay has been attached. */\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    OverlayRef.prototype.attachments = /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n        function () {\n            return this._attachments.asObservable();\n        };\n    /** Gets an observable that emits when the overlay has been detached. */\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachments = /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n        function () {\n            return this._detachments.asObservable();\n        };\n    /** Gets an observable of keydown events targeted to this overlay. */\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.keydownEvents = /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n        function () {\n            return this._keydownEvents.asObservable();\n        };\n    /** Gets the the current overlay configuration, which is immutable. */\n    /**\n     * Gets the the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    OverlayRef.prototype.getConfig = /**\n     * Gets the the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n        function () {\n            return this._config;\n        };\n    /** Updates the position of the overlay based on the position strategy. */\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    OverlayRef.prototype.updatePosition = /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n        function () {\n            if (this._config.positionStrategy) {\n                this._config.positionStrategy.apply();\n            }\n        };\n    /** Update the size properties of the overlay. */\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    OverlayRef.prototype.updateSize = /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n        function (sizeConfig) {\n            this._config = __assign({}, this._config, sizeConfig);\n            this._updateElementSize();\n        };\n    /** Sets the LTR/RTL direction for the overlay. */\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    OverlayRef.prototype.setDirection = /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n        function (dir) {\n            this._config = __assign({}, this._config, { direction: dir });\n            this._updateElementDirection();\n        };\n    /**\n     * Updates the text direction of the overlay panel.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateElementDirection = /**\n     * Updates the text direction of the overlay panel.\n     * @return {?}\n     */\n        function () {\n            this._pane.setAttribute('dir', /** @type {?} */ ((this._config.direction)));\n        };\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateElementSize = /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @return {?}\n     */\n        function () {\n            if (this._config.width || this._config.width === 0) {\n                this._pane.style.width = formatCssUnit(this._config.width);\n            }\n            if (this._config.height || this._config.height === 0) {\n                this._pane.style.height = formatCssUnit(this._config.height);\n            }\n            if (this._config.minWidth || this._config.minWidth === 0) {\n                this._pane.style.minWidth = formatCssUnit(this._config.minWidth);\n            }\n            if (this._config.minHeight || this._config.minHeight === 0) {\n                this._pane.style.minHeight = formatCssUnit(this._config.minHeight);\n            }\n            if (this._config.maxWidth || this._config.maxWidth === 0) {\n                this._pane.style.maxWidth = formatCssUnit(this._config.maxWidth);\n            }\n            if (this._config.maxHeight || this._config.maxHeight === 0) {\n                this._pane.style.maxHeight = formatCssUnit(this._config.maxHeight);\n            }\n        };\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    OverlayRef.prototype._togglePointerEvents = /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n        function (enablePointer) {\n            this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n        };\n    /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype._attachBackdrop = /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ showingClass = 'cdk-overlay-backdrop-showing';\n            this._backdropElement = this._document.createElement('div');\n            this._backdropElement.classList.add('cdk-overlay-backdrop');\n            if (this._config.backdropClass) {\n                this._backdropElement.classList.add(this._config.backdropClass);\n            } /** @type {?} */\n            ((\n            // Insert the backdrop before the pane in the DOM order,\n            // in order to handle stacked overlays properly.\n            this._pane.parentElement)).insertBefore(this._backdropElement, this._pane);\n            // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n            // action desired when such a click occurs (usually closing the overlay).\n            this._backdropElement.addEventListener('click', function (event) { return _this._backdropClick.next(event); });\n            // Add class to fade-in the backdrop after one frame.\n            if (typeof requestAnimationFrame !== 'undefined') {\n                this._ngZone.runOutsideAngular(function () {\n                    requestAnimationFrame(function () {\n                        if (_this._backdropElement) {\n                            _this._backdropElement.classList.add(showingClass);\n                        }\n                    });\n                });\n            }\n            else {\n                this._backdropElement.classList.add(showingClass);\n            }\n        };\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateStackingOrder = /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n        function () {\n            if (this._pane.nextSibling) {\n                /** @type {?} */ ((this._pane.parentNode)).appendChild(this._pane);\n            }\n        };\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachBackdrop = /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ backdropToDetach = this._backdropElement;\n            if (backdropToDetach) {\n                var /** @type {?} */ finishDetach_1 = function () {\n                    // It may not be attached to anything in certain cases (e.g. unit tests).\n                    if (backdropToDetach && backdropToDetach.parentNode) {\n                        backdropToDetach.parentNode.removeChild(backdropToDetach);\n                    }\n                    // It is possible that a new portal has been attached to this overlay since we started\n                    // removing the backdrop. If that is the case, only clear the backdrop reference if it\n                    // is still the same instance that we started to remove.\n                    if (_this._backdropElement == backdropToDetach) {\n                        _this._backdropElement = null;\n                    }\n                };\n                backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n                if (this._config.backdropClass) {\n                    backdropToDetach.classList.remove(this._config.backdropClass);\n                }\n                backdropToDetach.addEventListener('transitionend', finishDetach_1);\n                // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n                // In this case we make it unclickable and we try to remove it after a delay.\n                backdropToDetach.style.pointerEvents = 'none';\n                // Run this outside the Angular zone because there's nothing that Angular cares about.\n                // If it were to run inside the Angular zone, every test that used Overlay would have to be\n                // either async or fakeAsync.\n                this._ngZone.runOutsideAngular(function () {\n                    setTimeout(finishDetach_1, 500);\n                });\n            }\n        };\n    return OverlayRef;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction formatCssUnit(value) {\n    return typeof value === 'string' ? /** @type {?} */ (value) : value + \"px\";\n}\n/**\n * Size properties for an overlay.\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar ConnectedPositionStrategy = /*@__PURE__*/ (function () {\n    function ConnectedPositionStrategy(originPos, overlayPos, _connectedTo, _viewportRuler, _document) {\n        this._connectedTo = _connectedTo;\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        /**\n         * Layout direction of the position strategy.\n         */\n        this._dir = 'ltr';\n        /**\n         * The offset in pixels for the overlay connection point on the x-axis\n         */\n        this._offsetX = 0;\n        /**\n         * The offset in pixels for the overlay connection point on the y-axis\n         */\n        this._offsetY = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this.scrollables = [];\n        /**\n         * Subscription to viewport resize events.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Whether the position strategy is applied currently.\n         */\n        this._applied = false;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        this._onPositionChange = new Subject();\n        this._origin = this._connectedTo.nativeElement;\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /** Whether the we're dealing with an RTL context */\n        get: /**\n         * Whether the we're dealing with an RTL context\n         * @return {?}\n         */ function () {\n            return this._dir === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"onPositionChange\", {\n        /** Emits an event when the connection point changes. */\n        get: /**\n         * Emits an event when the connection point changes.\n         * @return {?}\n         */ function () {\n            return this._onPositionChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */ function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attach this position strategy to an overlay. */\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.attach = /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n        function (overlayRef) {\n            var _this = this;\n            this._pane = overlayRef.overlayElement;\n            this._resizeSubscription.unsubscribe();\n            this._resizeSubscription = this._viewportRuler.change().subscribe(function () { return _this.apply(); });\n        };\n    /** Disposes all resources used by the position strategy. */\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.dispose = /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n        function () {\n            this._applied = false;\n            this._resizeSubscription.unsubscribe();\n            this._onPositionChange.complete();\n        };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.detach = /**\n     * \\@docs-private\n     * @return {?}\n     */\n        function () {\n            this._applied = false;\n            this._resizeSubscription.unsubscribe();\n        };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.apply = /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n        function () {\n            // If the position has been applied already (e.g. when the overlay was opened) and the\n            // consumer opted into locking in the position, re-use the  old position, in order to\n            // prevent the overlay from jumping around.\n            if (this._applied && this._positionLocked && this._lastConnectedPosition) {\n                this.recalculateLastPosition();\n                return;\n            }\n            this._applied = true;\n            // We need the bounding rects for the origin and the overlay to determine how to position\n            // the overlay relative to the origin.\n            var /** @type {?} */ element = this._pane;\n            var /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n            var /** @type {?} */ overlayRect = element.getBoundingClientRect();\n            // We use the viewport size to determine whether a position would go off-screen.\n            var /** @type {?} */ viewportSize = this._viewportRuler.getViewportSize();\n            // Fallback point if none of the fallbacks fit into the viewport.\n            var /** @type {?} */ fallbackPoint;\n            var /** @type {?} */ fallbackPosition;\n            // We want to place the overlay in the first of the preferred positions such that the\n            // overlay fits on-screen.\n            for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n                var pos = _a[_i];\n                // Get the (x, y) point of connection on the origin, and then use that to get the\n                // (top, left) coordinate for the overlay at `pos`.\n                var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, pos);\n                var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportSize, pos);\n                // If the overlay in the calculated position fits on-screen, put it there and we're done.\n                if (overlayPoint.fitsInViewport) {\n                    this._setElementPosition(element, overlayRect, overlayPoint, pos);\n                    // Save the last connected position in case the position needs to be re-calculated.\n                    this._lastConnectedPosition = pos;\n                    return;\n                }\n                else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {\n                    fallbackPoint = overlayPoint;\n                    fallbackPosition = pos;\n                }\n            }\n            // If none of the preferred positions were in the viewport, take the one\n            // with the largest visible area.\n            this._setElementPosition(element, overlayRect, /** @type {?} */ ((fallbackPoint)), /** @type {?} */ ((fallbackPosition)));\n        };\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.recalculateLastPosition = /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n        function () {\n            // If the overlay has never been positioned before, do nothing.\n            if (!this._lastConnectedPosition) {\n                return;\n            }\n            var /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n            var /** @type {?} */ overlayRect = this._pane.getBoundingClientRect();\n            var /** @type {?} */ viewportSize = this._viewportRuler.getViewportSize();\n            var /** @type {?} */ lastPosition = this._lastConnectedPosition || this._preferredPositions[0];\n            var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, lastPosition);\n            var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportSize, lastPosition);\n            this._setElementPosition(this._pane, overlayRect, overlayPoint, lastPosition);\n        };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withScrollableContainers = /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n        function (scrollables) {\n            this.scrollables = scrollables;\n        };\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withFallbackPosition = /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n        function (originPos, overlayPos, offsetX, offsetY) {\n            var /** @type {?} */ position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n            this._preferredPositions.push(position);\n            return this;\n        };\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withDirection = /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n        function (dir) {\n            this._dir = dir;\n            return this;\n        };\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetX = /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n        function (offset) {\n            this._offsetX = offset;\n            return this;\n        };\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetY = /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n        function (offset) {\n            this._offsetY = offset;\n            return this;\n        };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withLockedPosition = /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n        function (isLocked) {\n            this._positionLocked = isLocked;\n            return this;\n        };\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withPositions = /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {?}\n     */\n        function (positions) {\n            this._preferredPositions = positions.slice();\n            return this;\n        };\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.setOrigin = /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n        function (origin) {\n            this._origin = origin.nativeElement;\n            return this;\n        };\n    /**\n     * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getStartX = /**\n     * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n        function (rect) {\n            return this._isRtl ? rect.right : rect.left;\n        };\n    /**\n     * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getEndX = /**\n     * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n        function (rect) {\n            return this._isRtl ? rect.left : rect.right;\n        };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getOriginConnectionPoint = /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n        function (originRect, pos) {\n            var /** @type {?} */ originStartX = this._getStartX(originRect);\n            var /** @type {?} */ originEndX = this._getEndX(originRect);\n            var /** @type {?} */ x;\n            if (pos.originX == 'center') {\n                x = originStartX + (originRect.width / 2);\n            }\n            else {\n                x = pos.originX == 'start' ? originStartX : originEndX;\n            }\n            var /** @type {?} */ y;\n            if (pos.originY == 'center') {\n                y = originRect.top + (originRect.height / 2);\n            }\n            else {\n                y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n            }\n            return { x: x, y: y };\n        };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected, as well as how much of the element\n     * would be inside the viewport at that position.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} viewportSize\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getOverlayPoint = /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected, as well as how much of the element\n     * would be inside the viewport at that position.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} viewportSize\n     * @param {?} pos\n     * @return {?}\n     */\n        function (originPoint, overlayRect, viewportSize, pos) {\n            // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n            // relative to the origin point.\n            var /** @type {?} */ overlayStartX;\n            if (pos.overlayX == 'center') {\n                overlayStartX = -overlayRect.width / 2;\n            }\n            else if (pos.overlayX === 'start') {\n                overlayStartX = this._isRtl ? -overlayRect.width : 0;\n            }\n            else {\n                overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n            }\n            var /** @type {?} */ overlayStartY;\n            if (pos.overlayY == 'center') {\n                overlayStartY = -overlayRect.height / 2;\n            }\n            else {\n                overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n            }\n            // The (x, y) offsets of the overlay based on the current position.\n            var /** @type {?} */ offsetX = typeof pos.offsetX === 'undefined' ? this._offsetX : pos.offsetX;\n            var /** @type {?} */ offsetY = typeof pos.offsetY === 'undefined' ? this._offsetY : pos.offsetY;\n            // The (x, y) coordinates of the overlay.\n            var /** @type {?} */ x = originPoint.x + overlayStartX + offsetX;\n            var /** @type {?} */ y = originPoint.y + overlayStartY + offsetY;\n            // How much the overlay would overflow at this position, on each side.\n            var /** @type {?} */ leftOverflow = 0 - x;\n            var /** @type {?} */ rightOverflow = (x + overlayRect.width) - viewportSize.width;\n            var /** @type {?} */ topOverflow = 0 - y;\n            var /** @type {?} */ bottomOverflow = (y + overlayRect.height) - viewportSize.height;\n            // Visible parts of the element on each axis.\n            var /** @type {?} */ visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);\n            var /** @type {?} */ visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);\n            // The area of the element that's within the viewport.\n            var /** @type {?} */ visibleArea = visibleWidth * visibleHeight;\n            var /** @type {?} */ fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;\n            return { x: x, y: y, fitsInViewport: fitsInViewport, visibleArea: visibleArea };\n        };\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @param {?} overlay\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getScrollVisibility = /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @param {?} overlay\n     * @return {?}\n     */\n        function (overlay) {\n            var /** @type {?} */ originBounds = this._origin.getBoundingClientRect();\n            var /** @type {?} */ overlayBounds = overlay.getBoundingClientRect();\n            var /** @type {?} */ scrollContainerBounds = this.scrollables.map(function (s) { return s.getElementRef().nativeElement.getBoundingClientRect(); });\n            return {\n                isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n                isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n                isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n                isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n            };\n        };\n    /**\n     * Physically positions the overlay element to the given coordinate.\n     * @param {?} element\n     * @param {?} overlayRect\n     * @param {?} overlayPoint\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._setElementPosition = /**\n     * Physically positions the overlay element to the given coordinate.\n     * @param {?} element\n     * @param {?} overlayRect\n     * @param {?} overlayPoint\n     * @param {?} pos\n     * @return {?}\n     */\n        function (element, overlayRect, overlayPoint, pos) {\n            // We want to set either `top` or `bottom` based on whether the overlay wants to appear above\n            // or below the origin and the direction in which the element will expand.\n            var /** @type {?} */ verticalStyleProperty = pos.overlayY === 'bottom' ? 'bottom' : 'top';\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            var /** @type {?} */ y = verticalStyleProperty === 'top' ?\n                overlayPoint.y :\n                this._document.documentElement.clientHeight - (overlayPoint.y + overlayRect.height);\n            // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n            // or \"after\" the origin, which determines the direction in which the element will expand.\n            // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n            // page is in RTL or LTR.\n            var /** @type {?} */ horizontalStyleProperty;\n            if (this._dir === 'rtl') {\n                horizontalStyleProperty = pos.overlayX === 'end' ? 'left' : 'right';\n            }\n            else {\n                horizontalStyleProperty = pos.overlayX === 'end' ? 'right' : 'left';\n            }\n            // When we're setting `right`, we adjust the x position such that it is the distance\n            // from the right edge of the viewport rather than the left edge.\n            var /** @type {?} */ x = horizontalStyleProperty === 'left' ?\n                overlayPoint.x :\n                this._document.documentElement.clientWidth - (overlayPoint.x + overlayRect.width);\n            // Reset any existing styles. This is necessary in case the preferred position has\n            // changed since the last `apply`.\n            ['top', 'bottom', 'left', 'right'].forEach(function (p) { return element.style[p] = null; });\n            element.style[verticalStyleProperty] = y + \"px\";\n            element.style[horizontalStyleProperty] = x + \"px\";\n            // Notify that the position has been changed along with its change properties.\n            var /** @type {?} */ scrollableViewProperties = this._getScrollVisibility(element);\n            var /** @type {?} */ positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);\n            this._onPositionChange.next(positionChange);\n        };\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._subtractOverflows = /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n        function (length) {\n            var overflows = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                overflows[_i - 1] = arguments[_i];\n            }\n            return overflows.reduce(function (currentValue, currentOverflow) {\n                return currentValue - Math.max(currentOverflow, 0);\n            }, length);\n        };\n    return ConnectedPositionStrategy;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nvar GlobalPositionStrategy = /*@__PURE__*/ (function () {\n    function GlobalPositionStrategy(_document) {\n        this._document = _document;\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n        /**\n         * A lazily-created wrapper for the overlay element that is used as a flex container.\n         */\n        this._wrapper = null;\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.attach = /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n        function (overlayRef) {\n            var /** @type {?} */ config = overlayRef.getConfig();\n            this._overlayRef = overlayRef;\n            if (this._width && !config.width) {\n                overlayRef.updateSize({ width: this._width });\n            }\n            if (this._height && !config.height) {\n                overlayRef.updateSize({ height: this._height });\n            }\n        };\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New top offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.top = /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New top offset.\n     * @return {?}\n     */\n        function (value) {\n            if (value === void 0) {\n                value = '';\n            }\n            this._bottomOffset = '';\n            this._topOffset = value;\n            this._alignItems = 'flex-start';\n            return this;\n        };\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New left offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.left = /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New left offset.\n     * @return {?}\n     */\n        function (value) {\n            if (value === void 0) {\n                value = '';\n            }\n            this._rightOffset = '';\n            this._leftOffset = value;\n            this._justifyContent = 'flex-start';\n            return this;\n        };\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New bottom offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.bottom = /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New bottom offset.\n     * @return {?}\n     */\n        function (value) {\n            if (value === void 0) {\n                value = '';\n            }\n            this._topOffset = '';\n            this._bottomOffset = value;\n            this._alignItems = 'flex-end';\n            return this;\n        };\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New right offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.right = /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New right offset.\n     * @return {?}\n     */\n        function (value) {\n            if (value === void 0) {\n                value = '';\n            }\n            this._leftOffset = '';\n            this._rightOffset = value;\n            this._justifyContent = 'flex-end';\n            return this;\n        };\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @deletion-target 7.0.0\n     */\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New width for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.width = /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New width for the overlay\n     * @return {?}\n     */\n        function (value) {\n            if (value === void 0) {\n                value = '';\n            }\n            if (this._overlayRef) {\n                this._overlayRef.updateSize({ width: value });\n            }\n            else {\n                this._width = value;\n            }\n            return this;\n        };\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @deletion-target 7.0.0\n     */\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New height for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.height = /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New height for the overlay\n     * @return {?}\n     */\n        function (value) {\n            if (value === void 0) {\n                value = '';\n            }\n            if (this._overlayRef) {\n                this._overlayRef.updateSize({ height: value });\n            }\n            else {\n                this._height = value;\n            }\n            return this;\n        };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n        function (offset) {\n            if (offset === void 0) {\n                offset = '';\n            }\n            this.left(offset);\n            this._justifyContent = 'center';\n            return this;\n        };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerVertically = /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n        function (offset) {\n            if (offset === void 0) {\n                offset = '';\n            }\n            this.top(offset);\n            this._alignItems = 'center';\n            return this;\n        };\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     *\n     * @returns Resolved when the styles have been applied.\n     */\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     *\n     * @return {?} Resolved when the styles have been applied.\n     */\n    GlobalPositionStrategy.prototype.apply = /**\n     * Apply the position to the element.\n     * \\@docs-private\n     *\n     * @return {?} Resolved when the styles have been applied.\n     */\n        function () {\n            // Since the overlay ref applies the strategy asynchronously, it could\n            // have been disposed before it ends up being applied. If that is the\n            // case, we shouldn't do anything.\n            if (!this._overlayRef.hasAttached()) {\n                return;\n            }\n            var /** @type {?} */ element = this._overlayRef.overlayElement;\n            if (!this._wrapper && element.parentNode) {\n                this._wrapper = this._document.createElement('div'); /** @type {?} */\n                ((this._wrapper)).classList.add('cdk-global-overlay-wrapper');\n                element.parentNode.insertBefore(/** @type {?} */ ((this._wrapper)), element); /** @type {?} */\n                ((this._wrapper)).appendChild(element);\n            }\n            var /** @type {?} */ styles = element.style;\n            var /** @type {?} */ parentStyles = ((element.parentNode)).style;\n            var /** @type {?} */ config = this._overlayRef.getConfig();\n            styles.position = this._cssPosition;\n            styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n            styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n            styles.marginBottom = this._bottomOffset;\n            styles.marginRight = this._rightOffset;\n            parentStyles.justifyContent = config.width === '100%' ? 'flex-start' : this._justifyContent;\n            parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n        };\n    /** Removes the wrapper element from the DOM. */\n    /**\n     * Removes the wrapper element from the DOM.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.dispose = /**\n     * Removes the wrapper element from the DOM.\n     * @return {?}\n     */\n        function () {\n            if (this._wrapper && this._wrapper.parentNode) {\n                this._wrapper.parentNode.removeChild(this._wrapper);\n                this._wrapper = null;\n            }\n        };\n    return GlobalPositionStrategy;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nvar OverlayPositionBuilder = /*@__PURE__*/ (function () {\n    function OverlayPositionBuilder(_viewportRuler, _document) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.global = /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n        function () {\n            return new GlobalPositionStrategy(this._document);\n        };\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     */\n    /**\n     * Creates a relative position strategy.\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.connectedTo = /**\n     * Creates a relative position strategy.\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n        function (elementRef, originPos, overlayPos) {\n            return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document);\n        };\n    return OverlayPositionBuilder;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nvar OverlayKeyboardDispatcher = /*@__PURE__*/ (function () {\n    function OverlayKeyboardDispatcher(_document) {\n        this._document = _document;\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n    }\n    /**\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._unsubscribeFromKeydownEvents();\n        };\n    /** Add a new overlay to the list of attached overlay refs. */\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.add = /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n        function (overlayRef) {\n            // Lazily start dispatcher once first overlay is added\n            if (!this._keydownEventSubscription) {\n                this._subscribeToKeydownEvents();\n            }\n            this._attachedOverlays.push(overlayRef);\n        };\n    /** Remove an overlay from the list of attached overlay refs. */\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.remove = /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n        function (overlayRef) {\n            var /** @type {?} */ index = this._attachedOverlays.indexOf(overlayRef);\n            if (index > -1) {\n                this._attachedOverlays.splice(index, 1);\n            }\n            // Remove the global listener once there are no more overlays.\n            if (this._attachedOverlays.length === 0) {\n                this._unsubscribeFromKeydownEvents();\n            }\n        };\n    /**\n     * Subscribe to keydown events that land on the body and dispatch those\n     * events to the appropriate overlay.\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype._subscribeToKeydownEvents = /**\n     * Subscribe to keydown events that land on the body and dispatch those\n     * events to the appropriate overlay.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ bodyKeydownEvents = fromEvent(this._document.body, 'keydown', true);\n            this._keydownEventSubscription = bodyKeydownEvents.pipe(filter(function () { return !!_this._attachedOverlays.length; })).subscribe(function (event) {\n                // Dispatch keydown event to the correct overlay.\n                // Dispatch keydown event to the correct overlay.\n                _this._selectOverlayFromEvent(event)._keydownEvents.next(event);\n            });\n        };\n    /**\n     * Removes the global keydown subscription.\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype._unsubscribeFromKeydownEvents = /**\n     * Removes the global keydown subscription.\n     * @return {?}\n     */\n        function () {\n            if (this._keydownEventSubscription) {\n                this._keydownEventSubscription.unsubscribe();\n                this._keydownEventSubscription = null;\n            }\n        };\n    /**\n     * Select the appropriate overlay from a keydown event.\n     * @param {?} event\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype._selectOverlayFromEvent = /**\n     * Select the appropriate overlay from a keydown event.\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            // Check if any overlays contain the event\n            var /** @type {?} */ targetedOverlay = this._attachedOverlays.find(function (overlay) {\n                return overlay.overlayElement === event.target ||\n                    overlay.overlayElement.contains(/** @type {?} */ (event.target));\n            });\n            // Use the overlay if it exists, otherwise choose the most recently attached one\n            return targetedOverlay || this._attachedOverlays[this._attachedOverlays.length - 1];\n        };\n    return OverlayKeyboardDispatcher;\n}());\n/**\n * \\@docs-private\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private\n */\nvar OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), OverlayKeyboardDispatcher],\n        /** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT)\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Container inside which all overlays will render.\n */\nvar OverlayContainer = /*@__PURE__*/ (function () {\n    function OverlayContainer(_document) {\n        this._document = _document;\n    }\n    /**\n     * @return {?}\n     */\n    OverlayContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            if (this._containerElement && this._containerElement.parentNode) {\n                this._containerElement.parentNode.removeChild(this._containerElement);\n            }\n        };\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    OverlayContainer.prototype.getContainerElement = /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n        function () {\n            if (!this._containerElement) {\n                this._createContainer();\n            }\n            return this._containerElement;\n        };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    OverlayContainer.prototype._createContainer = /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ container = this._document.createElement('div');\n            container.classList.add('cdk-overlay-container');\n            this._document.body.appendChild(container);\n            this._containerElement = container;\n        };\n    return OverlayContainer;\n}());\n/**\n * \\@docs-private\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private\n */\nvar OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [/*@__PURE__*/ new Optional(), /*@__PURE__*/ new SkipSelf(), OverlayContainer],\n        /** @type {?} */ (DOCUMENT // We need to use the InjectionToken somewhere to keep TS happy\n        ) // We need to use the InjectionToken somewhere to keep TS happy\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Next overlay unique ID.\n */\nvar nextUniqueId = 0;\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nvar Overlay = /*@__PURE__*/ (function () {\n    function Overlay(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _appRef, _injector, _ngZone, _document) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    Overlay.prototype.create = /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n        function (config) {\n            var /** @type {?} */ pane = this._createPaneElement();\n            var /** @type {?} */ portalOutlet = this._createPortalOutlet(pane);\n            return new OverlayRef(portalOutlet, pane, new OverlayConfig(config), this._ngZone, this._keyboardDispatcher, this._document);\n        };\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    Overlay.prototype.position = /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n        function () {\n            return this._positionBuilder;\n        };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @return {?} Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @return {?} Newly-created pane element\n     */\n        function () {\n            var /** @type {?} */ pane = this._document.createElement('div');\n            pane.id = \"cdk-overlay-\" + nextUniqueId++;\n            pane.classList.add('cdk-overlay-pane');\n            this._overlayContainer.getContainerElement().appendChild(pane);\n            return pane;\n        };\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    Overlay.prototype._createPortalOutlet = /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n        function (pane) {\n            return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector);\n        };\n    return Overlay;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n */\nvar defaultPositionList = [\n    /*@__PURE__*/ new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n    /*@__PURE__*/ new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n    /*@__PURE__*/ new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n    /*@__PURE__*/ new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n */\nvar CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = /*@__PURE__*/ new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar CdkOverlayOrigin = /*@__PURE__*/ (function () {\n    function CdkOverlayOrigin(elementRef) {\n        this.elementRef = elementRef;\n    }\n    return CdkOverlayOrigin;\n}());\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nvar CdkConnectedOverlay = /*@__PURE__*/ (function () {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    function CdkConnectedOverlay(_overlay, templateRef, viewContainerRef, _scrollStrategy, _dir) {\n        this._overlay = _overlay;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = this._scrollStrategy();\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    }\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetX\", {\n        get: /**\n         * The offset in pixels for the overlay connection point on the x-axis\n         * @return {?}\n         */ function () { return this._offsetX; },\n        set: /**\n         * @param {?} offsetX\n         * @return {?}\n         */ function (offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._position.withOffsetX(offsetX);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetY\", {\n        get: /**\n         * The offset in pixels for the overlay connection point on the y-axis\n         * @return {?}\n         */ function () { return this._offsetY; },\n        set: /**\n         * @param {?} offsetY\n         * @return {?}\n         */ function (offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._position.withOffsetY(offsetY);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"hasBackdrop\", {\n        get: /**\n         * Whether or not the overlay should attach a backdrop.\n         * @return {?}\n         */ function () { return this._hasBackdrop; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._hasBackdrop = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"lockPosition\", {\n        get: /**\n         * Whether or not the overlay should be locked when scrolling.\n         * @return {?}\n         */ function () { return this._lockPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._lockPosition = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedOrigin\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.origin; },\n        set: /**\n         * @param {?} _origin\n         * @return {?}\n         */ function (_origin) { this.origin = _origin; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedPositions\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.positions; },\n        set: /**\n         * @param {?} _positions\n         * @return {?}\n         */ function (_positions) { this.positions = _positions; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedOffsetX\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.offsetX; },\n        set: /**\n         * @param {?} _offsetX\n         * @return {?}\n         */ function (_offsetX) { this.offsetX = _offsetX; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedOffsetY\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.offsetY; },\n        set: /**\n         * @param {?} _offsetY\n         * @return {?}\n         */ function (_offsetY) { this.offsetY = _offsetY; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedWidth\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.width; },\n        set: /**\n         * @param {?} _width\n         * @return {?}\n         */ function (_width) { this.width = _width; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedHeight\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.height; },\n        set: /**\n         * @param {?} _height\n         * @return {?}\n         */ function (_height) { this.height = _height; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedMinWidth\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.minWidth; },\n        set: /**\n         * @param {?} _minWidth\n         * @return {?}\n         */ function (_minWidth) { this.minWidth = _minWidth; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedMinHeight\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.minHeight; },\n        set: /**\n         * @param {?} _minHeight\n         * @return {?}\n         */ function (_minHeight) { this.minHeight = _minHeight; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedBackdropClass\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.backdropClass; },\n        set: /**\n         * @param {?} _backdropClass\n         * @return {?}\n         */ function (_backdropClass) { this.backdropClass = _backdropClass; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedScrollStrategy\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.scrollStrategy; },\n        set: /**\n         * @param {?} _scrollStrategy\n         * @return {?}\n         */ function (_scrollStrategy) {\n            this.scrollStrategy = _scrollStrategy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedOpen\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.open; },\n        set: /**\n         * @param {?} _open\n         * @return {?}\n         */ function (_open) { this.open = _open; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"_deprecatedHasBackdrop\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.hasBackdrop; },\n        set: /**\n         * @param {?} _hasBackdrop\n         * @return {?}\n         */ function (_hasBackdrop) { this.hasBackdrop = _hasBackdrop; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"overlayRef\", {\n        /** The associated overlay reference. */\n        get: /**\n         * The associated overlay reference.\n         * @return {?}\n         */ function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"dir\", {\n        /** The element's layout direction. */\n        get: /**\n         * The element's layout direction.\n         * @return {?}\n         */ function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._destroyOverlay();\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if (this._position) {\n                if (changes['positions'] || changes['_deprecatedPositions']) {\n                    this._position.withPositions(this.positions);\n                }\n                if (changes['lockPosition']) {\n                    this._position.withLockedPosition(this.lockPosition);\n                }\n                if (changes['origin'] || changes['_deprecatedOrigin']) {\n                    this._position.setOrigin(this.origin.elementRef);\n                    if (this.open) {\n                        this._position.apply();\n                    }\n                }\n            }\n            if (changes['open'] || changes['_deprecatedOpen']) {\n                this.open ? this._attachOverlay() : this._detachOverlay();\n            }\n        };\n    /**\n     * Creates an overlay\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._createOverlay = /**\n     * Creates an overlay\n     * @return {?}\n     */\n        function () {\n            if (!this.positions || !this.positions.length) {\n                this.positions = defaultPositionList;\n            }\n            this._overlayRef = this._overlay.create(this._buildConfig());\n        };\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._buildConfig = /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ positionStrategy = this._position = this._createPositionStrategy();\n            var /** @type {?} */ overlayConfig = new OverlayConfig({\n                positionStrategy: positionStrategy,\n                scrollStrategy: this.scrollStrategy,\n                hasBackdrop: this.hasBackdrop\n            });\n            if (this.width || this.width === 0) {\n                overlayConfig.width = this.width;\n            }\n            if (this.height || this.height === 0) {\n                overlayConfig.height = this.height;\n            }\n            if (this.minWidth || this.minWidth === 0) {\n                overlayConfig.minWidth = this.minWidth;\n            }\n            if (this.minHeight || this.minHeight === 0) {\n                overlayConfig.minHeight = this.minHeight;\n            }\n            if (this.backdropClass) {\n                overlayConfig.backdropClass = this.backdropClass;\n            }\n            return overlayConfig;\n        };\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._createPositionStrategy = /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ primaryPosition = this.positions[0];\n            var /** @type {?} */ originPoint = { originX: primaryPosition.originX, originY: primaryPosition.originY };\n            var /** @type {?} */ overlayPoint = { overlayX: primaryPosition.overlayX, overlayY: primaryPosition.overlayY };\n            var /** @type {?} */ strategy = this._overlay.position()\n                .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n                .withOffsetX(this.offsetX)\n                .withOffsetY(this.offsetY)\n                .withLockedPosition(this.lockPosition);\n            for (var /** @type {?} */ i = 1; i < this.positions.length; i++) {\n                strategy.withFallbackPosition({ originX: this.positions[i].originX, originY: this.positions[i].originY }, { overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY });\n            }\n            strategy.onPositionChange.subscribe(function (pos) { return _this.positionChange.emit(pos); });\n            return strategy;\n        };\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._attachOverlay = /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (!this._overlayRef) {\n                this._createOverlay(); /** @type {?} */\n                ((this._overlayRef)).keydownEvents().subscribe(function (event) {\n                    if (event.keyCode === ESCAPE) {\n                        _this._detachOverlay();\n                    }\n                });\n            }\n            else {\n                // Update the overlay size, in case the directive's inputs have changed\n                this._overlayRef.updateSize({\n                    width: this.width,\n                    minWidth: this.minWidth,\n                    height: this.height,\n                    minHeight: this.minHeight,\n                });\n            }\n            this._position.withDirection(this.dir);\n            this._overlayRef.setDirection(this.dir);\n            if (!this._overlayRef.hasAttached()) {\n                this._overlayRef.attach(this._templatePortal);\n                this.attach.emit();\n            }\n            if (this.hasBackdrop) {\n                this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function (event) {\n                    _this.backdropClick.emit(event);\n                });\n            }\n        };\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._detachOverlay = /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n        function () {\n            if (this._overlayRef) {\n                this._overlayRef.detach();\n                this.detach.emit();\n            }\n            this._backdropSubscription.unsubscribe();\n        };\n    /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._destroyOverlay = /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n        function () {\n            if (this._overlayRef) {\n                this._overlayRef.dispose();\n            }\n            this._backdropSubscription.unsubscribe();\n        };\n    return CdkConnectedOverlay;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    VIEWPORT_RULER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\nvar OverlayModule = /*@__PURE__*/ (function () {\n    function OverlayModule() {\n    }\n    return OverlayModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nvar FullscreenOverlayContainer = /*@__PURE__*/ (function (_super) {\n    __extends(FullscreenOverlayContainer, _super);\n    function FullscreenOverlayContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._createContainer = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            _super.prototype._createContainer.call(this);\n            this._adjustParentForFullscreenChange();\n            this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });\n        };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._containerElement) {\n                return;\n            }\n            var /** @type {?} */ fullscreenElement = this.getFullscreenElement();\n            var /** @type {?} */ parent = fullscreenElement || document.body;\n            parent.appendChild(this._containerElement);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            if (document.fullscreenEnabled) {\n                document.addEventListener('fullscreenchange', fn);\n            }\n            else if (document.webkitFullscreenEnabled) {\n                document.addEventListener('webkitfullscreenchange', fn);\n            }\n            else if (((document)).mozFullScreenEnabled) {\n                document.addEventListener('mozfullscreenchange', fn);\n            }\n            else if (((document)).msFullscreenEnabled) {\n                document.addEventListener('MSFullscreenChange', fn);\n            }\n        };\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.getFullscreenElement = /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n        function () {\n            return document.fullscreenElement ||\n                document.webkitFullscreenElement ||\n                ((document)).mozFullScreenElement ||\n                ((document)).msFullscreenElement ||\n                null;\n        };\n    return FullscreenOverlayContainer;\n}(OverlayContainer));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Overlay, OverlayContainer, CdkOverlayOrigin, CdkConnectedOverlay, FullscreenOverlayContainer, OverlayRef, ViewportRuler, OverlayKeyboardDispatcher, OverlayPositionBuilder, GlobalPositionStrategy, ConnectedPositionStrategy, VIEWPORT_RULER_PROVIDER, CdkConnectedOverlay as ConnectedOverlayDirective, CdkOverlayOrigin as OverlayOrigin, OverlayConfig, ConnectionPositionPair, ScrollingVisibility, ConnectedOverlayPositionChange, CdkScrollable, ScrollDispatcher, ScrollStrategyOptions, RepositionScrollStrategy, CloseScrollStrategy, NoopScrollStrategy, BlockScrollStrategy, OVERLAY_PROVIDERS, OverlayModule, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵg, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵf, OVERLAY_CONTAINER_PROVIDER as ɵb, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵc, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵe, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵd };\n//# sourceMappingURL=overlay.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/overlay.es5.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_cdk_bidi,tslib,tslib,_angular_cdk_coercion,rxjs_Subject,rxjs_Observable,_angular_platform_browser,_angular_common,_angular_cdk_platform,_angular_cdk_keycodes PURE_IMPORTS_END */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, EventEmitter, Inject, Injectable, InjectionToken, Input, LOCALE_ID, NgModule, NgZone, Optional, Output, ViewEncapsulation, isDevMode } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { __assign, __extends } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar AnimationCurves = /*@__PURE__*/ (function () {\n    function AnimationCurves() {\n    }\n    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    return AnimationCurves;\n}());\n/**\n * \\@docs-private\n */\nvar AnimationDurations = /*@__PURE__*/ (function () {\n    function AnimationDurations() {\n    }\n    AnimationDurations.COMPLEX = '375ms';\n    AnimationDurations.ENTERING = '225ms';\n    AnimationDurations.EXITING = '195ms';\n    return AnimationDurations;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nvar MATERIAL_SANITY_CHECKS = /*@__PURE__*/ new InjectionToken('mat-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nvar MatCommonModule = /*@__PURE__*/ (function () {\n    function MatCommonModule(_sanityChecksEnabled) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    MatCommonModule.prototype._areChecksEnabled = /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n        function () {\n            return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n        };\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    MatCommonModule.prototype._isTestEnv = /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n        function () {\n            return this._window && (this._window['__karma__'] || this._window['jasmine']);\n        };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkDoctypeIsDefined = /**\n     * @return {?}\n     */\n        function () {\n            if (this._document && !this._document.doctype) {\n                console.warn('Current document does not have a doctype. This may cause ' +\n                    'some Angular Material components not to behave as expected.');\n            }\n        };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkThemeIsPresent = /**\n     * @return {?}\n     */\n        function () {\n            if (this._document && typeof getComputedStyle === 'function') {\n                var /** @type {?} */ testElement = this._document.createElement('div');\n                testElement.classList.add('mat-theme-loaded-marker');\n                this._document.body.appendChild(testElement);\n                var /** @type {?} */ computedStyle = getComputedStyle(testElement);\n                // In some situations, the computed style of the test element can be null. For example in\n                // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n                // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n                if (computedStyle && computedStyle.display !== 'none') {\n                    console.warn('Could not find Angular Material core theme. Most Material ' +\n                        'components may not work as expected. For more info refer ' +\n                        'to the theming guide: https://material.angular.io/guide/theming');\n                }\n                this._document.body.removeChild(testElement);\n            }\n        };\n    /** Checks whether HammerJS is available. */\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkHammerIsAvailable = /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n        function () {\n            if (this._hasCheckedHammer || !this._window) {\n                return;\n            }\n            if (this._areChecksEnabled() && !this._window['Hammer']) {\n                console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n            }\n            this._hasCheckedHammer = true;\n        };\n    return MatCommonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._disabled = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"disabled\", {\n            get: /**\n             * @return {?}\n             */ function () { return this._disabled; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */ function (value) { this._disabled = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            // Set the default color that can be specified from the mixin.\n            // Set the default color that can be specified from the mixin.\n            _this.color = defaultColor;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"color\", {\n            get: /**\n             * @return {?}\n             */ function () { return this._color; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */ function (value) {\n                var /** @type {?} */ colorPalette = value || defaultColor;\n                if (colorPalette !== this._color) {\n                    if (this._color) {\n                        this._elementRef.nativeElement.classList.remove(\"mat-\" + this._color);\n                    }\n                    if (colorPalette) {\n                        this._elementRef.nativeElement.classList.add(\"mat-\" + colorPalette);\n                    }\n                    this._color = colorPalette;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._disableRipple = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"disableRipple\", {\n            /** Whether the ripple effect is disabled or not. */\n            get: /**\n             * Whether the ripple effect is disabled or not.\n             * @return {?}\n             */ function () { return this._disableRipple; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */ function (value) { this._disableRipple = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex) {\n    if (defaultTabIndex === void 0) {\n        defaultTabIndex = 0;\n    }\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._tabIndex = defaultTabIndex;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"tabIndex\", {\n            get: /**\n             * @return {?}\n             */ function () { return this.disabled ? -1 : this._tabIndex; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */ function (value) {\n                // If the specified tabIndex value is null or undefined, fall back to the default value.\n                this._tabIndex = value != null ? value : defaultTabIndex;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * \\@docs-private\n * @record\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            /**\n             * Whether the component is in an error state.\n             */\n            _this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            _this.stateChanges = new Subject();\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        class_1.prototype.updateErrorState = /**\n         * @return {?}\n         */\n            function () {\n                var /** @type {?} */ oldState = this.errorState;\n                var /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n                var /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n                var /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n                var /** @type {?} */ newState = matcher.isErrorState(control, parent);\n                if (newState !== oldState) {\n                    this.errorState = newState;\n                    this.stateChanges.next();\n                }\n            };\n        return class_1;\n    }(base));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            _this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            _this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            _this.initialized = new Observable(function (subscriber) {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (_this._isInitialized) {\n                    _this._notifySubscriber(subscriber);\n                }\n                else {\n                    /** @type {?} */ ((_this._pendingSubscribers)).push(subscriber);\n                }\n            });\n            return _this;\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        class_1.prototype._markInitialized = /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n            function () {\n                if (this._isInitialized) {\n                    throw Error('This directive has already been marked as initialized and ' +\n                        'should not be called twice.');\n                }\n                this._isInitialized = true; /** @type {?} */\n                ((this._pendingSubscribers)).forEach(this._notifySubscriber);\n                this._pendingSubscribers = null;\n            };\n        /** Emits and completes the subscriber stream (should only emit once). */\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        class_1.prototype._notifySubscriber = /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n            function (subscriber) {\n                subscriber.next();\n                subscriber.complete();\n            };\n        return class_1;\n    }(base));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nvar MAT_DATE_LOCALE = /*@__PURE__*/ new InjectionToken('MAT_DATE_LOCALE');\n/**\n * Provider for MAT_DATE_LOCALE injection token.\n */\nvar MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nvar DateAdapter = /*@__PURE__*/ (function () {\n    function DateAdapter() {\n        this._localeChanges = new Subject();\n    }\n    Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\n        /** A stream that emits when the locale changes. */\n        get: /**\n         * A stream that emits when the locale changes.\n         * @return {?}\n         */ function () { return this._localeChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    DateAdapter.prototype.deserialize = /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n        function (value) {\n            if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n                return value;\n            }\n            return this.invalid();\n        };\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    DateAdapter.prototype.setLocale = /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n        function (locale) {\n            this.locale = locale;\n            this._localeChanges.next();\n        };\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    DateAdapter.prototype.compareDate = /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n        function (first, second) {\n            return this.getYear(first) - this.getYear(second) ||\n                this.getMonth(first) - this.getMonth(second) ||\n                this.getDate(first) - this.getDate(second);\n        };\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    DateAdapter.prototype.sameDate = /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n        function (first, second) {\n            if (first && second) {\n                var /** @type {?} */ firstValid = this.isValid(first);\n                var /** @type {?} */ secondValid = this.isValid(second);\n                if (firstValid && secondValid) {\n                    return !this.compareDate(first, second);\n                }\n                return firstValid == secondValid;\n            }\n            return first == second;\n        };\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    DateAdapter.prototype.clampDate = /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n        function (date, min, max) {\n            if (min && this.compareDate(date, min) < 0) {\n                return min;\n            }\n            if (max && this.compareDate(date, max) > 0) {\n                return max;\n            }\n            return date;\n        };\n    return DateAdapter;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MAT_DATE_FORMATS = /*@__PURE__*/ new InjectionToken('mat-date-formats');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Whether the browser supports the Intl API.\n */\nvar SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nvar DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nvar ɵ0$1 = function (i) { return String(i + 1); };\n/**\n * The default date names to use if Intl API is not available.\n */\nvar DEFAULT_DATE_NAMES = /*@__PURE__*/ range(31, ɵ0$1);\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    var /** @type {?} */ valuesArray = Array(length);\n    for (var /** @type {?} */ i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nvar NativeDateAdapter = /*@__PURE__*/ (function (_super) {\n    __extends(NativeDateAdapter, _super);\n    function NativeDateAdapter(matDateLocale) {\n        var _this = _super.call(this) || this;\n        _super.prototype.setLocale.call(_this, matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        // TODO(mmalerba): replace with checks from PLATFORM, logic currently duplicated to avoid\n        // breaking change from injecting the Platform.\n        var /** @type {?} */ isBrowser = typeof document === 'object' && !!document;\n        var /** @type {?} */ isIE = isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        _this.useUtcForDisplay = !isIE;\n        _this._clampDate = isIE || (isBrowser && /(edge)/i.test(navigator.userAgent));\n        return _this;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYear = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return date.getFullYear();\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return date.getMonth();\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDate = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return date.getDate();\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeek = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return date.getDay();\n        };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonthNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n        function (style) {\n            var _this = this;\n            if (SUPPORTS_INTL_API) {\n                var /** @type {?} */ dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n                return range(12, function (i) {\n                    return _this._stripDirectionalityCharacters(_this._format(dtf_1, new Date(2017, i, 1)));\n                });\n            }\n            return DEFAULT_MONTH_NAMES[style];\n        };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDateNames = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (SUPPORTS_INTL_API) {\n                var /** @type {?} */ dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n                return range(31, function (i) {\n                    return _this._stripDirectionalityCharacters(_this._format(dtf_2, new Date(2017, 0, i + 1)));\n                });\n            }\n            return DEFAULT_DATE_NAMES;\n        };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeekNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n        function (style) {\n            var _this = this;\n            if (SUPPORTS_INTL_API) {\n                var /** @type {?} */ dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n                return range(7, function (i) {\n                    return _this._stripDirectionalityCharacters(_this._format(dtf_3, new Date(2017, 0, i + 1)));\n                });\n            }\n            return DEFAULT_DAY_OF_WEEK_NAMES[style];\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYearName = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            if (SUPPORTS_INTL_API) {\n                var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n                return this._stripDirectionalityCharacters(this._format(dtf, date));\n            }\n            return String(this.getYear(date));\n        };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getFirstDayOfWeek = /**\n     * @return {?}\n     */\n        function () {\n            // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n            return 0;\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getNumDaysInMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.clone = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n        };\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.createDate = /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n        function (year, month, date) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n            }\n            if (date < 1) {\n                throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n            }\n            var /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n            // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n            if (result.getMonth() != month) {\n                throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n            }\n            return result;\n        };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.today = /**\n     * @return {?}\n     */\n        function () {\n            return new Date();\n        };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.parse = /**\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n            // parameters.\n            if (typeof value == 'number') {\n                return new Date(value);\n            }\n            return value ? new Date(Date.parse(value)) : null;\n        };\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.format = /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n        function (date, displayFormat) {\n            if (!this.isValid(date)) {\n                throw Error('NativeDateAdapter: Cannot format invalid date.');\n            }\n            if (SUPPORTS_INTL_API) {\n                // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n                // if we attempt to format a date whose year is less than 1 or greater than 9999.\n                if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                    date = this.clone(date);\n                    date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n                }\n                displayFormat = __assign({}, displayFormat, { timeZone: 'utc' });\n                var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n                return this._stripDirectionalityCharacters(this._format(dtf, date));\n            }\n            return this._stripDirectionalityCharacters(date.toDateString());\n        };\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarYears = /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n        function (date, years) {\n            return this.addCalendarMonths(date, years * 12);\n        };\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarMonths = /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n        function (date, months) {\n            var /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n            // It's possible to wind up in the wrong month if the original month has more days than the new\n            // month. In this case we want to go to the last day of the desired month.\n            // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n            // guarantee this.\n            if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n                newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n            }\n            return newDate;\n        };\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarDays = /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n        function (date, days) {\n            return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.toIso8601 = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return [\n                date.getUTCFullYear(),\n                this._2digit(date.getUTCMonth() + 1),\n                this._2digit(date.getUTCDate())\n            ].join('-');\n        };\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.deserialize = /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n        function (value) {\n            if (typeof value === 'string') {\n                if (!value) {\n                    return null;\n                }\n                // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n                // string is the right format first.\n                if (ISO_8601_REGEX.test(value)) {\n                    var /** @type {?} */ date = new Date(value);\n                    if (this.isValid(date)) {\n                        return date;\n                    }\n                }\n            }\n            return _super.prototype.deserialize.call(this, value);\n        };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isDateInstance = /**\n     * @param {?} obj\n     * @return {?}\n     */\n        function (obj) {\n            return obj instanceof Date;\n        };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n        function (date) {\n            return !isNaN(date.getTime());\n        };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.invalid = /**\n     * @return {?}\n     */\n        function () {\n            return new Date(NaN);\n        };\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype._createDateWithOverflow = /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n        function (year, month, date) {\n            var /** @type {?} */ result = new Date(year, month, date);\n            // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n            // abbreviations for 19xx.\n            if (year >= 0 && year < 100) {\n                result.setFullYear(this.getYear(result) - 1900);\n            }\n            return result;\n        };\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    NativeDateAdapter.prototype._2digit = /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n        function (n) {\n            return ('00' + n).slice(-2);\n        };\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    NativeDateAdapter.prototype._stripDirectionalityCharacters = /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n        function (str) {\n            return str.replace(/[\\u200e\\u200f]/g, '');\n        };\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    NativeDateAdapter.prototype._format = /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n        function (dtf, date) {\n            var /** @type {?} */ d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n            return dtf.format(d);\n        };\n    return NativeDateAdapter;\n}(DateAdapter));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NativeDateModule = /*@__PURE__*/ (function () {\n    function NativeDateModule() {\n    }\n    return NativeDateModule;\n}());\nvar ɵ0$$1 = MAT_NATIVE_DATE_FORMATS;\nvar MatNativeDateModule = /*@__PURE__*/ (function () {\n    function MatNativeDateModule() {\n    }\n    return MatNativeDateModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nvar ShowOnDirtyErrorStateMatcher = /*@__PURE__*/ (function () {\n    function ShowOnDirtyErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ShowOnDirtyErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n        function (control, form) {\n            return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n        };\n    return ShowOnDirtyErrorStateMatcher;\n}());\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nvar ErrorStateMatcher = /*@__PURE__*/ (function () {\n    function ErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n        function (control, form) {\n            return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n        };\n    return ErrorStateMatcher;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nvar MAT_HAMMER_OPTIONS = /*@__PURE__*/ new InjectionToken('MAT_HAMMER_OPTIONS');\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nvar GestureConfig = /*@__PURE__*/ (function (_super) {\n    __extends(GestureConfig, _super);\n    function GestureConfig(_hammerOptions, commonModule) {\n        var _this = _super.call(this) || this;\n        _this._hammerOptions = _hammerOptions;\n        _this._hammer = typeof window !== 'undefined' ? ((window)).Hammer : null;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        _this.events = _this._hammer ? [\n            'longpress',\n            'slide',\n            'slidestart',\n            'slideend',\n            'slideright',\n            'slideleft'\n        ] : [];\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n        return _this;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param element Element to which to assign the new HammerJS gestures.\n     * @returns Newly-created HammerJS instance.\n     */\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    GestureConfig.prototype.buildHammer = /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n        function (element) {\n            var /** @type {?} */ mc = new this._hammer(element, this._hammerOptions || undefined);\n            // Default Hammer Recognizers.\n            var /** @type {?} */ pan = new this._hammer.Pan();\n            var /** @type {?} */ swipe = new this._hammer.Swipe();\n            var /** @type {?} */ press = new this._hammer.Press();\n            // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n            // Otherwise the previous `recognizeWith` will be dropped.\n            // TODO: Confirm threshold numbers with Material Design UX Team\n            var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n            var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n            // Overwrite the default `pan` event to use the swipe event.\n            pan.recognizeWith(swipe);\n            // Add customized gestures to Hammer manager\n            mc.add([swipe, press, pan, slide, longpress]);\n            return /** @type {?} */ (mc);\n        };\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    GestureConfig.prototype._createRecognizer = /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n        function (base, options) {\n            var inheritances = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                inheritances[_i - 2] = arguments[_i];\n            }\n            var /** @type {?} */ recognizer = new ((base.constructor))(options);\n            inheritances.push(base);\n            inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n            return recognizer;\n        };\n    return GestureConfig;\n}(HammerGestureConfig));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nvar MatLine = /*@__PURE__*/ (function () {\n    function MatLine() {\n    }\n    return MatLine;\n}());\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nvar MatLineSetter = /*@__PURE__*/ (function () {\n    function MatLineSetter(_lines, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    MatLineSetter.prototype._setLineClass = /**\n     * @param {?} count\n     * @return {?}\n     */\n        function (count) {\n            this._resetClasses();\n            if (count === 2 || count === 3) {\n                this._setClass(\"mat-\" + count + \"-line\", true);\n            }\n            else if (count > 3) {\n                this._setClass(\"mat-multi-line\", true);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    MatLineSetter.prototype._resetClasses = /**\n     * @return {?}\n     */\n        function () {\n            this._setClass('mat-2-line', false);\n            this._setClass('mat-3-line', false);\n            this._setClass('mat-multi-line', false);\n        };\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MatLineSetter.prototype._setClass = /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n        function (className, isAdd) {\n            if (isAdd) {\n                this._element.nativeElement.classList.add(className);\n            }\n            else {\n                this._element.nativeElement.classList.remove(className);\n            }\n        };\n    return MatLineSetter;\n}());\nvar MatLineModule = /*@__PURE__*/ (function () {\n    function MatLineModule() {\n    }\n    return MatLineModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar RippleState = /*@__PURE__*/ (function () {\n    var RippleState = {\n        FADING_IN: 0,\n        VISIBLE: 1,\n        FADING_OUT: 2,\n        HIDDEN: 3,\n    };\n    RippleState[RippleState.FADING_IN] = \"FADING_IN\";\n    RippleState[RippleState.VISIBLE] = \"VISIBLE\";\n    RippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\n    RippleState[RippleState.HIDDEN] = \"HIDDEN\";\n    return RippleState;\n}());\n/**\n * Reference to a previously launched ripple element.\n */\nvar RippleRef = /*@__PURE__*/ (function () {\n    function RippleRef(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple reference.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /** Fades out the ripple element. */\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    RippleRef.prototype.fadeOut = /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n        function () {\n            this._renderer.fadeOutRipple(this);\n        };\n    return RippleRef;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nvar defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nvar ignoreMouseEventsTimeout = 800;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nvar RippleRenderer = /*@__PURE__*/ (function () {\n    function RippleRenderer(_target, _ngZone, elementRef, platform) {\n        var _this = this;\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Options that apply to all the event listeners that are bound by the renderer.\n         */\n        this._eventOptions = supportsPassiveEventListeners() ? (({ passive: true })) : false;\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this.onMousedown = function (event) {\n            var /** @type {?} */ isSyntheticEvent = _this._lastTouchStartEvent &&\n                Date.now() < _this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!_this._target.rippleDisabled && !isSyntheticEvent) {\n                _this._isPointerDown = true;\n                _this.fadeInRipple(event.clientX, event.clientY, _this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this.onTouchStart = function (event) {\n            if (!_this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                _this._lastTouchStartEvent = Date.now();\n                _this._isPointerDown = true;\n                _this.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, _this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this.onPointerUp = function () {\n            if (!_this._isPointerDown) {\n                return;\n            }\n            _this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            // Fade-out all ripples that are visible and not persistent.\n            _this._activeRipples.forEach(function (ripple) {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                var /** @type {?} */ isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            });\n        };\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents.set('mousedown', this.onMousedown);\n            this._triggerEvents.set('mouseup', this.onPointerUp);\n            this._triggerEvents.set('mouseleave', this.onPointerUp);\n            this._triggerEvents.set('touchstart', this.onTouchStart);\n            this._triggerEvents.set('touchend', this.onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeInRipple = /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n        function (x, y, config) {\n            var _this = this;\n            if (config === void 0) {\n                config = {};\n            }\n            var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n            var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, config.animation);\n            if (config.centered) {\n                x = containerRect.left + containerRect.width / 2;\n                y = containerRect.top + containerRect.height / 2;\n            }\n            var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n            var /** @type {?} */ offsetX = x - containerRect.left;\n            var /** @type {?} */ offsetY = y - containerRect.top;\n            var /** @type {?} */ duration = animationConfig.enterDuration / (config.speedFactor || 1);\n            var /** @type {?} */ ripple = document.createElement('div');\n            ripple.classList.add('mat-ripple-element');\n            ripple.style.left = offsetX - radius + \"px\";\n            ripple.style.top = offsetY - radius + \"px\";\n            ripple.style.height = radius * 2 + \"px\";\n            ripple.style.width = radius * 2 + \"px\";\n            // If the color is not set, the default CSS color will be used.\n            ripple.style.backgroundColor = config.color || null;\n            ripple.style.transitionDuration = duration + \"ms\";\n            this._containerElement.appendChild(ripple);\n            // By default the browser does not recalculate the styles of dynamically created\n            // ripple elements. This is critical because then the `scale` would not animate properly.\n            enforceStyleRecalculation(ripple);\n            ripple.style.transform = 'scale(1)';\n            // Exposed reference to the ripple that will be returned.\n            var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n            rippleRef.state = RippleState.FADING_IN;\n            // Add the ripple reference to the list of all active ripples.\n            this._activeRipples.add(rippleRef);\n            // Wait for the ripple element to be completely faded in.\n            // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n            this.runTimeoutOutsideZone(function () {\n                rippleRef.state = RippleState.VISIBLE;\n                if (!config.persistent && !_this._isPointerDown) {\n                    rippleRef.fadeOut();\n                }\n            }, duration);\n            return rippleRef;\n        };\n    /** Fades out a ripple reference. */\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutRipple = /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n        function (rippleRef) {\n            // For ripples that are not active anymore, don't re-un the fade-out animation.\n            if (!this._activeRipples.delete(rippleRef)) {\n                return;\n            }\n            var /** @type {?} */ rippleEl = rippleRef.element;\n            var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n            rippleEl.style.transitionDuration = animationConfig.exitDuration + \"ms\";\n            rippleEl.style.opacity = '0';\n            rippleRef.state = RippleState.FADING_OUT;\n            // Once the ripple faded out, the ripple can be safely removed from the DOM.\n            this.runTimeoutOutsideZone(function () {\n                rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n                ((rippleEl.parentNode)).removeChild(rippleEl);\n            }, animationConfig.exitDuration);\n        };\n    /** Fades out all currently active ripples. */\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutAll = /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n        function () {\n            this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n        };\n    /** Sets up the trigger event listeners */\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    RippleRenderer.prototype.setupTriggerEvents = /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n        function (element) {\n            var _this = this;\n            if (!element || element === this._triggerElement) {\n                return;\n            }\n            // Remove all previously registered event listeners from the trigger element.\n            this._removeTriggerEvents();\n            this._ngZone.runOutsideAngular(function () {\n                _this._triggerEvents.forEach(function (fn, type) {\n                    return element.addEventListener(type, fn, _this._eventOptions);\n                });\n            });\n            this._triggerElement = element;\n        };\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    RippleRenderer.prototype.runTimeoutOutsideZone = /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n        function (fn, delay) {\n            if (delay === void 0) {\n                delay = 0;\n            }\n            this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n        };\n    /** Removes previously registered event listeners from the trigger element. */\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    RippleRenderer.prototype._removeTriggerEvents = /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._triggerElement) {\n                this._triggerEvents.forEach(function (fn, type) {\n                    /** @type {?} */ ((_this._triggerElement)).removeEventListener(type, fn, _this._eventOptions);\n                });\n            }\n        };\n    return RippleRenderer;\n}());\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nvar MAT_RIPPLE_GLOBAL_OPTIONS = /*@__PURE__*/ new InjectionToken('mat-ripple-global-options');\nvar MatRipple = /*@__PURE__*/ (function () {\n    function MatRipple(_elementRef, ngZone, platform, globalOptions) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\n         * @deprecated Use the [matRippleAnimation] binding instead.\n         * \\@deletion-target 7.0.0\n         */\n        this.speedFactor = 1;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    Object.defineProperty(MatRipple.prototype, \"disabled\", {\n        get: /**\n         * Whether click events will not trigger the ripple. Ripples can be still launched manually\n         * by using the `launch()` method.\n         * @return {?}\n         */ function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = value;\n            this._setupTriggerEventsIfEnabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRipple.prototype, \"trigger\", {\n        get: /**\n         * The element that triggers the ripple when click events are received.\n         * Defaults to the directive's host element.\n         * @return {?}\n         */ function () { return this._trigger || this._elementRef.nativeElement; },\n        set: /**\n         * @param {?} trigger\n         * @return {?}\n         */ function (trigger) {\n            this._trigger = trigger;\n            this._setupTriggerEventsIfEnabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this._isInitialized = true;\n            this._setupTriggerEventsIfEnabled();\n        };\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._rippleRenderer._removeTriggerEvents();\n        };\n    /** Fades out all currently showing ripple elements. */\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    MatRipple.prototype.fadeOutAll = /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n        function () {\n            this._rippleRenderer.fadeOutAll();\n        };\n    Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\n        /** Ripple configuration from the directive's input values. */\n        get: /**\n         * Ripple configuration from the directive's input values.\n         * @return {?}\n         */ function () {\n            return {\n                centered: this.centered,\n                radius: this.radius,\n                color: this.color,\n                animation: __assign({}, this._globalOptions.animation, this.animation),\n                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRipple.prototype, \"rippleDisabled\", {\n        /** Whether ripples on pointer-down are disabled or not. */\n        get: /**\n         * Whether ripples on pointer-down are disabled or not.\n         * @return {?}\n         */ function () {\n            return this.disabled || !!this._globalOptions.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    MatRipple.prototype._setupTriggerEventsIfEnabled = /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n        function () {\n            if (!this.disabled && this._isInitialized) {\n                this._rippleRenderer.setupTriggerEvents(this.trigger);\n            }\n        };\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    MatRipple.prototype.launch = /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n        function (configOrX, y, config) {\n            if (y === void 0) {\n                y = 0;\n            }\n            if (typeof configOrX === 'number') {\n                return this._rippleRenderer.fadeInRipple(configOrX, y, __assign({}, this.rippleConfig, config));\n            }\n            else {\n                return this._rippleRenderer.fadeInRipple(0, 0, __assign({}, this.rippleConfig, configOrX));\n            }\n        };\n    return MatRipple;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatRippleModule = /*@__PURE__*/ (function () {\n    function MatRippleModule() {\n    }\n    return MatRippleModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nvar MatPseudoCheckbox = /*@__PURE__*/ (function () {\n    function MatPseudoCheckbox() {\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n    return MatPseudoCheckbox;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatPseudoCheckboxModule = /*@__PURE__*/ (function () {\n    function MatPseudoCheckboxModule() {\n    }\n    return MatPseudoCheckboxModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatOptgroupBase = /*@__PURE__*/ (function () {\n    function MatOptgroupBase() {\n    }\n    return MatOptgroupBase;\n}());\nvar _MatOptgroupMixinBase = /*@__PURE__*/ mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nvar _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nvar MatOptgroup = /*@__PURE__*/ (function (_super) {\n    __extends(MatOptgroup, _super);\n    function MatOptgroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Unique id for the underlying label.\n         */\n        _this._labelId = \"mat-optgroup-label-\" + _uniqueOptgroupIdCounter++;\n        return _this;\n    }\n    return MatOptgroup;\n}(_MatOptgroupMixinBase));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nvar _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nvar MatOptionSelectionChange = /*@__PURE__*/ (function () {\n    function MatOptionSelectionChange(source, isUserInput) {\n        if (isUserInput === void 0) {\n            isUserInput = false;\n        }\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n    return MatOptionSelectionChange;\n}());\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nvar MAT_OPTION_PARENT_COMPONENT = /*@__PURE__*/ new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nvar MatOption = /*@__PURE__*/ (function () {\n    function MatOption(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._id = \"mat-option-\" + _uniqueIdCounter++;\n        this._mostRecentViewValue = '';\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    Object.defineProperty(MatOption.prototype, \"multiple\", {\n        /** Whether the wrapping component is in multiple selection mode. */\n        get: /**\n         * Whether the wrapping component is in multiple selection mode.\n         * @return {?}\n         */ function () { return this._parent && this._parent.multiple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"id\", {\n        /** The unique ID of the option. */\n        get: /**\n         * The unique ID of the option.\n         * @return {?}\n         */ function () { return this._id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"selected\", {\n        /** Whether or not the option is currently selected. */\n        get: /**\n         * Whether or not the option is currently selected.\n         * @return {?}\n         */ function () { return this._selected; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disabled\", {\n        get: /**\n         * Whether the option is disabled.\n         * @return {?}\n         */ function () { return (this.group && this.group.disabled) || this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disableRipple\", {\n        /** Whether ripples for the option are disabled. */\n        get: /**\n         * Whether ripples for the option are disabled.\n         * @return {?}\n         */ function () { return this._parent && this._parent.disableRipple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"active\", {\n        /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         */\n        get: /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         * @return {?}\n         */ function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"viewValue\", {\n        /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         */\n        get: /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         * @return {?}\n         */ function () {\n            // TODO(kara): Add input property alternative for node envs.\n            return (this._getHostElement().textContent || '').trim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Selects the option. */\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    MatOption.prototype.select = /**\n     * Selects the option.\n     * @return {?}\n     */\n        function () {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        };\n    /** Deselects the option. */\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    MatOption.prototype.deselect = /**\n     * Deselects the option.\n     * @return {?}\n     */\n        function () {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        };\n    /** Sets focus onto this option. */\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    MatOption.prototype.focus = /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ element = this._getHostElement();\n            if (typeof element.focus === 'function') {\n                element.focus();\n            }\n        };\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setActiveStyles = /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n        function () {\n            if (!this._active) {\n                this._active = true;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setInactiveStyles = /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n        function () {\n            if (this._active) {\n                this._active = false;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    MatOption.prototype.getLabel = /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n        function () {\n            return this.viewValue;\n        };\n    /** Ensures the option is selected when activated from the keyboard. */\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MatOption.prototype._handleKeydown = /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            if (event.keyCode === ENTER || event.keyCode === SPACE) {\n                this._selectViaInteraction();\n                // Prevent the page from scrolling down and form submits.\n                event.preventDefault();\n            }\n        };\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    MatOption.prototype._selectViaInteraction = /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n        function () {\n            if (!this.disabled) {\n                this._selected = this.multiple ? !this._selected : true;\n                this._changeDetectorRef.markForCheck();\n                this._emitSelectionChangeEvent(true);\n            }\n        };\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    MatOption.prototype._getTabIndex = /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n        function () {\n            return this.disabled ? '-1' : '0';\n        };\n    /** Gets the host DOM element. */\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    MatOption.prototype._getHostElement = /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n        function () {\n            return this._element.nativeElement;\n        };\n    /**\n     * @return {?}\n     */\n    MatOption.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n        function () {\n            // Since parent components could be using the option's label to display the selected values\n            // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n            // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n            // relatively cheap, however we still limit them only to selected options in order to avoid\n            // hitting the DOM too often.\n            if (this._selected) {\n                var /** @type {?} */ viewValue = this.viewValue;\n                if (viewValue !== this._mostRecentViewValue) {\n                    this._mostRecentViewValue = viewValue;\n                    this._stateChanges.next();\n                }\n            }\n        };\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatOption.prototype._emitSelectionChangeEvent = /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n        function (isUserInput) {\n            if (isUserInput === void 0) {\n                isUserInput = false;\n            }\n            this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n        };\n    return MatOption;\n}());\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        var /** @type {?} */ optionsArray = options.toArray();\n        var /** @type {?} */ groups = optionGroups.toArray();\n        var /** @type {?} */ groupCounter = 0;\n        for (var /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    var /** @type {?} */ optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatOptionModule = /*@__PURE__*/ (function () {\n    function MatOptionModule() {\n    }\n    return MatOptionModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n */\nvar MAT_LABEL_GLOBAL_OPTIONS = /*@__PURE__*/ new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nvar JAN = 0;\nvar FEB = 1;\nvar MAR = 2;\nvar APR = 3;\nvar MAY = 4;\nvar JUN = 5;\nvar JUL = 6;\nvar AUG = 7;\nvar SEP = 8;\nvar OCT = 9;\nvar NOV = 10;\nvar DEC = 11;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MAT_LABEL_GLOBAL_OPTIONS as MAT_PLACEHOLDER_GLOBAL_OPTIONS, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };\n//# sourceMappingURL=core.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/core.es5.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START .._observable_ArrayObservable,.._observable_ScalarObservable,.._observable_EmptyObservable,.._observable_concat,.._util_isScheduler PURE_IMPORTS_END */\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concatStatic(new ScalarObservable(array[0], scheduler), source);\n        }\n        else if (len > 1) {\n            return concatStatic(new ArrayObservable(array, scheduler), source);\n        }\n        else {\n            return concatStatic(new EmptyObservable(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/startWith.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START .._util_isScheduler,._of,._from,.._operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/concat.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/takeUntil.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nexport var CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=combineLatest.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operators/combineLatest.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START ._FromEventPatternObservable PURE_IMPORTS_END */\nimport { FromEventPatternObservable } from './FromEventPatternObservable';\nexport var fromEventPattern = FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/fromEventPattern.js\n// module id = null\n// module chunks = ","import { __extends } from \"tslib\";\nimport { isFunction } from '../util/isFunction';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventPatternObservable = /*@__PURE__*/ (function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    /** @deprecated internal use only */ FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable));\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/FromEventPatternObservable.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_cdk_platform,rxjs_Subject,rxjs_operators_map,rxjs_operators_startWith,rxjs_operators_takeUntil,_angular_cdk_coercion,rxjs_observable_combineLatest,rxjs_observable_fromEventPattern PURE_IMPORTS_END */\nimport { Injectable, NgModule, NgZone } from '@angular/core';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Subject } from 'rxjs/Subject';\nimport { map } from 'rxjs/operators/map';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { fromEventPattern } from 'rxjs/observable/fromEventPattern';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected style tags.\n */\nvar styleElementForWebkitCompatibility = /*@__PURE__*/ new Map();\n/**\n * A utility for calling matchMedia queries.\n */\nvar MediaMatcher = /*@__PURE__*/ (function () {\n    function MediaMatcher(platform) {\n        this.platform = platform;\n        this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    MediaMatcher.prototype.matchMedia = /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n        function (query) {\n            if (this.platform.WEBKIT) {\n                createEmptyStyleRule(query);\n            }\n            return this._matchMedia(query);\n        };\n    return MediaMatcher;\n}());\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when there is at least one CSS\n * selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (!styleElementForWebkitCompatibility.has(query)) {\n        try {\n            var /** @type {?} */ style = document.createElement('style');\n            style.setAttribute('type', 'text/css');\n            if (!style.sheet) {\n                var /** @type {?} */ cssText = \"@media \" + query + \" {.fx-query-test{ }}\";\n                style.appendChild(document.createTextNode(cssText));\n            }\n            document.getElementsByTagName('head')[0].appendChild(style);\n            // Store in private global registry\n            styleElementForWebkitCompatibility.set(query, style);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: function () { },\n        removeListener: function () { }\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nvar BreakpointObserver = /*@__PURE__*/ (function () {\n    function BreakpointObserver(mediaMatcher, zone) {\n        this.mediaMatcher = mediaMatcher;\n        this.zone = zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    BreakpointObserver.prototype.ngOnDestroy = /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n        function () {\n            this._destroySubject.next();\n            this._destroySubject.complete();\n        };\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    BreakpointObserver.prototype.isMatched = /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n        function (value) {\n            var _this = this;\n            var /** @type {?} */ queries = coerceArray(value);\n            return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n        };\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @returns A stream of matches for the given queries.\n     */\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value\n     * @return {?} A stream of matches for the given queries.\n     */\n    BreakpointObserver.prototype.observe = /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value\n     * @return {?} A stream of matches for the given queries.\n     */\n        function (value) {\n            var _this = this;\n            var /** @type {?} */ queries = coerceArray(value);\n            var /** @type {?} */ observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n            return combineLatest(observables, function (a, b) {\n                return {\n                    matches: !!((a && a.matches) || (b && b.matches)),\n                };\n            });\n        };\n    /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    BreakpointObserver.prototype._registerQuery = /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n        function (query) {\n            var _this = this;\n            // Only set up a new MediaQueryList if it is not already being listened for.\n            if (this._queries.has(query)) {\n                return /** @type {?} */ ((this._queries.get(query)));\n            }\n            var /** @type {?} */ mql = this.mediaMatcher.matchMedia(query);\n            // Create callback for match changes and add it is as a listener.\n            var /** @type {?} */ queryObservable = fromEventPattern(\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            function (listener) {\n                mql.addListener(function (e) { return _this.zone.run(function () { return listener(e); }); });\n            }, function (listener) {\n                mql.removeListener(function (e) { return _this.zone.run(function () { return listener(e); }); });\n            })\n                .pipe(takeUntil(this._destroySubject), startWith(mql), map(function (nextMql) { return ({ matches: nextMql.matches }); }));\n            // Add the MediaQueryList to the set of queries.\n            var /** @type {?} */ output = { observable: queryObservable, mql: mql };\n            this._queries.set(query, output);\n            return output;\n        };\n    return BreakpointObserver;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Breakpoints = {\n    XSmall: '(max-width: 599px)',\n    Small: '(min-width: 600px) and (max-width: 959px)',\n    Medium: '(min-width: 960px) and (max-width: 1279px)',\n    Large: '(min-width: 1280px) and (max-width: 1919px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599px) and (orientation: portrait), ' +\n        '(max-width: 959px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LayoutModule = /*@__PURE__*/ (function () {\n    function LayoutModule() {\n    }\n    return LayoutModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher };\n//# sourceMappingURL=layout.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/layout.es5.js\n// module id = null\n// module chunks = ","/** PURE_IMPORTS_START .._util_isScheduler,.._util_isArray,._ArrayObservable,.._operators_combineLatest PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from './ArrayObservable';\nimport { CombineLatestOperator } from '../operators/combineLatest';\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineLatest.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/observable/combineLatest.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_cdk_a11y,_angular_cdk_overlay,_angular_cdk_platform,_angular_common,_angular_core,_angular_material_core,_angular_cdk_layout,_angular_cdk_bidi,_angular_cdk_coercion,_angular_cdk_keycodes,_angular_cdk_portal,rxjs_operators_take,rxjs_observable_merge,_angular_cdk_scrolling,rxjs_Subject,_angular_animations PURE_IMPORTS_END */\nimport { A11yModule, ARIA_DESCRIBER_PROVIDER, AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Inject, InjectionToken, Input, NgModule, NgZone, Optional, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { BreakpointObserver, Breakpoints, LayoutModule } from '@angular/cdk/layout';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { take } from 'rxjs/operators/take';\nimport { merge } from 'rxjs/observable/merge';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs/Subject';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n */\nvar matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: /*@__PURE__*/ trigger('state', [\n        /*@__PURE__*/ state('initial, void, hidden', /*@__PURE__*/ style({ transform: 'scale(0)' })),\n        /*@__PURE__*/ state('visible', /*@__PURE__*/ style({ transform: 'scale(1)' })),\n        /*@__PURE__*/ transition('* => visible', /*@__PURE__*/ animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n        /*@__PURE__*/ transition('* => hidden', /*@__PURE__*/ animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nvar SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n */\nvar TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(\"Tooltip position \\\"\" + position + \"\\\" is invalid.\");\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n */\nvar MAT_TOOLTIP_SCROLL_STRATEGY = /*@__PURE__*/ new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n */\nvar MAT_TOOLTIP_DEFAULT_OPTIONS = /*@__PURE__*/ new InjectionToken('mat-tooltip-default-options');\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\nvar MatTooltip = /*@__PURE__*/ (function () {\n    function MatTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, _scrollStrategy, _dir, _defaultOptions) {\n        // TODO(crisbeto): make the `_defaultOptions` a required param next time we do breaking changes.\n        // @deletion-target 6.0.0\n        var _this = this;\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions ? this._defaultOptions.showDelay : 0;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions ? this._defaultOptions.hideDelay : 0;\n        this._message = '';\n        this._manualListeners = new Map();\n        var /** @type {?} */ element = _elementRef.nativeElement;\n        // The mouse events shouldn't be bound on iOS devices, because\n        // they can prevent the first tap from firing its click event.\n        if (!_platform.IOS) {\n            this._manualListeners.set('mouseenter', function () { return _this.show(); });\n            this._manualListeners.set('mouseleave', function () { return _this.hide(); });\n            this._manualListeners\n                .forEach(function (listener, event) { return _elementRef.nativeElement.addEventListener(event, listener); });\n        }\n        else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n            // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n            // will add some inline styles by default, including `user-select: none`. This is\n            // problematic on iOS, because it will prevent users from typing in inputs. If\n            // we're on iOS and the tooltip is attached on an input or textarea, we clear\n            // the `user-select` to avoid these issues.\n            element.style.webkitUserSelect = element.style.userSelect = '';\n        }\n        _focusMonitor.monitor(element).subscribe(function (origin) {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run(function () { return _this.hide(0); });\n            }\n            else if (origin !== 'program') {\n                _ngZone.run(function () { return _this.show(); });\n            }\n        });\n    }\n    Object.defineProperty(MatTooltip.prototype, \"position\", {\n        get: /**\n         * Allows the user to define the position of the tooltip relative to the parent element\n         * @return {?}\n         */ function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n                // the tooltip.\n                if (this._tooltipInstance) {\n                    this._disposeTooltip();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"disabled\", {\n        get: /**\n         * Disables the display of the tooltip.\n         * @return {?}\n         */ function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // If tooltip is disabled, hide immediately.\n            if (this._disabled) {\n                this.hide(0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"_positionDeprecated\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._position = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"message\", {\n        get: /**\n         * The message to be displayed in the tooltip\n         * @return {?}\n         */ function () { return this._message; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n            // If the message is not a string (e.g. number), convert it to a string and trim it.\n            this._message = value != null ? (\"\" + value).trim() : '';\n            if (!this._message && this._isTooltipVisible()) {\n                this.hide(0);\n            }\n            else {\n                this._updateTooltipMessage();\n                this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"tooltipClass\", {\n        get: /**\n         * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n         * @return {?}\n         */ function () { return this._tooltipClass; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._tooltipClass = value;\n            if (this._tooltipInstance) {\n                this._setTooltipClass(this._tooltipClass);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    MatTooltip.prototype.ngOnDestroy = /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._tooltipInstance) {\n                this._disposeTooltip();\n            }\n            // Clean up the event listeners set in the constructor\n            if (!this._platform.IOS) {\n                this._manualListeners.forEach(function (listener, event) {\n                    _this._elementRef.nativeElement.removeEventListener(event, listener);\n                });\n                this._manualListeners.clear();\n            }\n            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        };\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.show = /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n        function (delay) {\n            if (delay === void 0) {\n                delay = this.showDelay;\n            }\n            if (this.disabled || !this.message) {\n                return;\n            }\n            if (!this._tooltipInstance) {\n                this._createTooltip();\n            }\n            this._setTooltipClass(this._tooltipClass);\n            this._updateTooltipMessage(); /** @type {?} */\n            ((this._tooltipInstance)).show(this._position, delay);\n        };\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.hide = /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n        function (delay) {\n            if (delay === void 0) {\n                delay = this.hideDelay;\n            }\n            if (this._tooltipInstance) {\n                this._tooltipInstance.hide(delay);\n            }\n        };\n    /** Shows/hides the tooltip */\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    MatTooltip.prototype.toggle = /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n        function () {\n            this._isTooltipVisible() ? this.hide() : this.show();\n        };\n    /** Returns true if the tooltip is currently visible to the user */\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    MatTooltip.prototype._isTooltipVisible = /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n        function () {\n            return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n        };\n    /** Handles the keydown events on the host element. */\n    /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    MatTooltip.prototype._handleKeydown = /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n        function (e) {\n            if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n                e.stopPropagation();\n                this.hide(0);\n            }\n        };\n    /** Handles the touchend events on the host element. */\n    /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n    MatTooltip.prototype._handleTouchend = /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n        function () {\n            this.hide(this._defaultOptions ? this._defaultOptions.touchendHideDelay : 1500);\n        };\n    /**\n     * Create the tooltip to display\n     * @return {?}\n     */\n    MatTooltip.prototype._createTooltip = /**\n     * Create the tooltip to display\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ overlayRef = this._createOverlay();\n            var /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n            this._tooltipInstance = overlayRef.attach(portal).instance;\n            // Dispose of the tooltip when the overlay is detached.\n            merge(/** @type {?} */ ((this._tooltipInstance)).afterHidden(), overlayRef.detachments()).subscribe(function () {\n                // Check first if the tooltip has already been removed through this components destroy.\n                if (_this._tooltipInstance) {\n                    _this._disposeTooltip();\n                }\n            });\n        };\n    /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    MatTooltip.prototype._createOverlay = /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var /** @type {?} */ origin = this._getOrigin();\n            var /** @type {?} */ overlay = this._getOverlayPosition();\n            // Create connected position strategy that listens for scroll events to reposition.\n            var /** @type {?} */ strategy = this._overlay\n                .position()\n                .connectedTo(this._elementRef, origin.main, overlay.main)\n                .withFallbackPosition(origin.fallback, overlay.fallback);\n            var /** @type {?} */ scrollableAncestors = this._scrollDispatcher\n                .getAncestorScrollContainers(this._elementRef);\n            strategy.withScrollableContainers(scrollableAncestors);\n            strategy.onPositionChange.subscribe(function (change) {\n                if (_this._tooltipInstance) {\n                    if (change.scrollableViewProperties.isOverlayClipped && _this._tooltipInstance.isVisible()) {\n                        // After position changes occur and the overlay is clipped by\n                        // a parent scrollable then close the tooltip.\n                        // After position changes occur and the overlay is clipped by\n                        // a parent scrollable then close the tooltip.\n                        _this._ngZone.run(function () { return _this.hide(0); });\n                    }\n                    else {\n                        // Otherwise recalculate the origin based on the new position.\n                        // Otherwise recalculate the origin based on the new position.\n                        _this._tooltipInstance._setTransformOrigin(change.connectionPair);\n                    }\n                }\n            });\n            var /** @type {?} */ config = new OverlayConfig({\n                direction: this._dir ? this._dir.value : 'ltr',\n                positionStrategy: strategy,\n                panelClass: TOOLTIP_PANEL_CLASS,\n                scrollStrategy: this._scrollStrategy()\n            });\n            this._overlayRef = this._overlay.create(config);\n            return this._overlayRef;\n        };\n    /**\n     * Disposes the current tooltip and the overlay it is attached to\n     * @return {?}\n     */\n    MatTooltip.prototype._disposeTooltip = /**\n     * Disposes the current tooltip and the overlay it is attached to\n     * @return {?}\n     */\n        function () {\n            if (this._overlayRef) {\n                this._overlayRef.dispose();\n                this._overlayRef = null;\n            }\n            this._tooltipInstance = null;\n        };\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    MatTooltip.prototype._getOrigin = /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n            var /** @type {?} */ position;\n            if (this.position == 'above' || this.position == 'below') {\n                position = { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };\n            }\n            else if (this.position == 'left' ||\n                this.position == 'before' && isDirectionLtr ||\n                this.position == 'after' && !isDirectionLtr) {\n                position = { originX: 'start', originY: 'center' };\n            }\n            else if (this.position == 'right' ||\n                this.position == 'after' && isDirectionLtr ||\n                this.position == 'before' && !isDirectionLtr) {\n                position = { originX: 'end', originY: 'center' };\n            }\n            else {\n                throw getMatTooltipInvalidPositionError(this.position);\n            }\n            var _a = this._invertPosition(position.originX, position.originY), x = _a.x, y = _a.y;\n            return {\n                main: position,\n                fallback: { originX: x, originY: y }\n            };\n        };\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    MatTooltip.prototype._getOverlayPosition = /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n            var /** @type {?} */ position;\n            if (this.position == 'above') {\n                position = { overlayX: 'center', overlayY: 'bottom' };\n            }\n            else if (this.position == 'below') {\n                position = { overlayX: 'center', overlayY: 'top' };\n            }\n            else if (this.position == 'left' ||\n                this.position == 'before' && isLtr ||\n                this.position == 'after' && !isLtr) {\n                position = { overlayX: 'end', overlayY: 'center' };\n            }\n            else if (this.position == 'right' ||\n                this.position == 'after' && isLtr ||\n                this.position == 'before' && !isLtr) {\n                position = { overlayX: 'start', overlayY: 'center' };\n            }\n            else {\n                throw getMatTooltipInvalidPositionError(this.position);\n            }\n            var _a = this._invertPosition(position.overlayX, position.overlayY), x = _a.x, y = _a.y;\n            return {\n                main: position,\n                fallback: { overlayX: x, overlayY: y }\n            };\n        };\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @return {?}\n     */\n    MatTooltip.prototype._updateTooltipMessage = /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            // Must wait for the message to be painted to the tooltip so that the overlay can properly\n            // calculate the correct positioning based on the size of the text.\n            if (this._tooltipInstance) {\n                this._tooltipInstance.message = this.message;\n                this._tooltipInstance._markForCheck();\n                this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(function () {\n                    if (_this._tooltipInstance) {\n                        /** @type {?} */ ((_this._overlayRef)).updatePosition();\n                    }\n                });\n            }\n        };\n    /**\n     * Updates the tooltip class\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    MatTooltip.prototype._setTooltipClass = /**\n     * Updates the tooltip class\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n        function (tooltipClass) {\n            if (this._tooltipInstance) {\n                this._tooltipInstance.tooltipClass = tooltipClass;\n                this._tooltipInstance._markForCheck();\n            }\n        };\n    /**\n     * Inverts an overlay position.\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    MatTooltip.prototype._invertPosition = /**\n     * Inverts an overlay position.\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n        function (x, y) {\n            if (this.position === 'above' || this.position === 'below') {\n                if (y === 'top') {\n                    y = 'bottom';\n                }\n                else if (y === 'bottom') {\n                    y = 'top';\n                }\n            }\n            else {\n                if (x === 'end') {\n                    x = 'start';\n                }\n                else if (x === 'start') {\n                    x = 'end';\n                }\n            }\n            return { x: x, y: y };\n        };\n    return MatTooltip;\n}());\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nvar TooltipComponent = /*@__PURE__*/ (function () {\n    function TooltipComponent(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * The transform origin used in the animation for showing and hiding the tooltip\n         */\n        this._transformOrigin = 'bottom';\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param position Position of the tooltip.\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} position Position of the tooltip.\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.show = /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} position Position of the tooltip.\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n        function (position, delay) {\n            var _this = this;\n            // Cancel the delayed hide if it is scheduled\n            if (this._hideTimeoutId) {\n                clearTimeout(this._hideTimeoutId);\n            }\n            // Body interactions should cancel the tooltip if there is a delay in showing.\n            this._closeOnInteraction = true;\n            this._position = position;\n            this._showTimeoutId = setTimeout(function () {\n                _this._visibility = 'visible';\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                _this._markForCheck();\n            }, delay);\n        };\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.hide = /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n        function (delay) {\n            var _this = this;\n            // Cancel the delayed show if it is scheduled\n            if (this._showTimeoutId) {\n                clearTimeout(this._showTimeoutId);\n            }\n            this._hideTimeoutId = setTimeout(function () {\n                _this._visibility = 'hidden';\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                _this._markForCheck();\n            }, delay);\n        };\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    TooltipComponent.prototype.afterHidden = /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n        function () {\n            return this._onHide.asObservable();\n        };\n    /** Whether the tooltip is being displayed. */\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    TooltipComponent.prototype.isVisible = /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n        function () {\n            return this._visibility === 'visible';\n        };\n    /** Sets the tooltip transform origin according to the position of the tooltip overlay. */\n    /**\n     * Sets the tooltip transform origin according to the position of the tooltip overlay.\n     * @param {?} overlayPosition\n     * @return {?}\n     */\n    TooltipComponent.prototype._setTransformOrigin = /**\n     * Sets the tooltip transform origin according to the position of the tooltip overlay.\n     * @param {?} overlayPosition\n     * @return {?}\n     */\n        function (overlayPosition) {\n            var /** @type {?} */ axis = (this._position === 'above' || this._position === 'below') ? 'Y' : 'X';\n            var /** @type {?} */ position = axis == 'X' ? overlayPosition.overlayX : overlayPosition.overlayY;\n            if (position === 'top' || position === 'bottom') {\n                this._transformOrigin = position;\n            }\n            else if (position === 'start') {\n                this._transformOrigin = 'left';\n            }\n            else if (position === 'end') {\n                this._transformOrigin = 'right';\n            }\n            else {\n                throw getMatTooltipInvalidPositionError(this._position);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationStart = /**\n     * @return {?}\n     */\n        function () {\n            this._closeOnInteraction = false;\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationDone = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            var /** @type {?} */ toState = (event.toState);\n            if (toState === 'hidden' && !this.isVisible()) {\n                this._onHide.next();\n            }\n            if (toState === 'visible' || toState === 'hidden') {\n                this._closeOnInteraction = true;\n            }\n        };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     */\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     * @return {?}\n     */\n    TooltipComponent.prototype._handleBodyInteraction = /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     * @return {?}\n     */\n        function () {\n            if (this._closeOnInteraction) {\n                this.hide(0);\n            }\n        };\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    TooltipComponent.prototype._markForCheck = /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n        function () {\n            this._changeDetectorRef.markForCheck();\n        };\n    return TooltipComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ɵ0 = {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500\n};\nvar MatTooltipModule = /*@__PURE__*/ (function () {\n    function MatTooltipModule() {\n    }\n    return MatTooltipModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, getMatTooltipInvalidPositionError, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER, MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltip, TooltipComponent, matTooltipAnimations };\n//# sourceMappingURL=tooltip.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/tooltip.es5.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UP_ARROW = 38;\nvar DOWN_ARROW = 40;\nvar RIGHT_ARROW = 39;\nvar LEFT_ARROW = 37;\nvar PAGE_UP = 33;\nvar PAGE_DOWN = 34;\nvar HOME = 36;\nvar END = 35;\nvar ENTER = 13;\nvar SPACE = 32;\nvar TAB = 9;\nvar ESCAPE = 27;\nvar BACKSPACE = 8;\nvar DELETE = 46;\nvar A = 65;\nvar Z = 90;\nvar ZERO = 48;\nvar NINE = 57;\nvar COMMA = 188;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, PAGE_UP, PAGE_DOWN, HOME, END, ENTER, SPACE, TAB, ESCAPE, BACKSPACE, DELETE, A, Z, ZERO, NINE, COMMA };\n//# sourceMappingURL=keycodes.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/keycodes.es5.js\n// module id = null\n// module chunks = ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tooltip\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/cdk/scrolling\";\nimport * as i6 from \"@angular/cdk/overlay\";\nimport * as i7 from \"@angular/cdk/a11y\";\nimport * as i8 from \"@angular/cdk/layout\";\nimport * as i9 from \"@angular/cdk/portal\";\nimport * as i10 from \"@angular/material/core\";\nvar MatTooltipModuleNgFactory = i0.ɵcmf(i1.MatTooltipModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [TooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵa]]), i0.ɵmpd(6144, i3.DIR_DOCUMENT, null, [i2.DOCUMENT]), i0.ɵmpd(4608, i3.Directionality, i3.Directionality, [[2, i3.DIR_DOCUMENT]]), i0.ɵmpd(4608, i4.Platform, i4.Platform, []), i0.ɵmpd(5120, i5.ScrollDispatcher, i5.SCROLL_DISPATCHER_PROVIDER_FACTORY, [[3, i5.ScrollDispatcher], i0.NgZone, i4.Platform]), i0.ɵmpd(5120, i5.ViewportRuler, i5.VIEWPORT_RULER_PROVIDER_FACTORY, [[3, i5.ViewportRuler], i4.Platform, i0.NgZone]), i0.ɵmpd(4608, i6.ScrollStrategyOptions, i6.ScrollStrategyOptions, [i5.ScrollDispatcher, i5.ViewportRuler, i0.NgZone, i2.DOCUMENT]), i0.ɵmpd(5120, i6.OverlayContainer, i6.ɵa, [[3, i6.OverlayContainer], i2.DOCUMENT]), i0.ɵmpd(4608, i6.OverlayPositionBuilder, i6.OverlayPositionBuilder, [i5.ViewportRuler, i2.DOCUMENT]), i0.ɵmpd(5120, i6.OverlayKeyboardDispatcher, i6.ɵf, [[3, i6.OverlayKeyboardDispatcher], i2.DOCUMENT]), i0.ɵmpd(4608, i6.Overlay, i6.Overlay, [i6.ScrollStrategyOptions, i6.OverlayContainer, i0.ComponentFactoryResolver, i6.OverlayPositionBuilder, i6.OverlayKeyboardDispatcher, i0.ApplicationRef, i0.Injector, i0.NgZone, i2.DOCUMENT]), i0.ɵmpd(5120, i6.ɵc, i6.ɵd, [i6.Overlay]), i0.ɵmpd(4608, i7.InteractivityChecker, i7.InteractivityChecker, [i4.Platform]), i0.ɵmpd(4608, i7.FocusTrapFactory, i7.FocusTrapFactory, [i7.InteractivityChecker, i0.NgZone, i2.DOCUMENT]), i0.ɵmpd(136192, i7.AriaDescriber, i7.ARIA_DESCRIBER_PROVIDER_FACTORY, [[3, i7.AriaDescriber], i2.DOCUMENT]), i0.ɵmpd(5120, i7.LiveAnnouncer, i7.LIVE_ANNOUNCER_PROVIDER_FACTORY, [[3, i7.LiveAnnouncer], [2, i7.LIVE_ANNOUNCER_ELEMENT_TOKEN], i2.DOCUMENT]), i0.ɵmpd(5120, i7.FocusMonitor, i7.FOCUS_MONITOR_PROVIDER_FACTORY, [[3, i7.FocusMonitor], i0.NgZone, i4.Platform]), i0.ɵmpd(4608, i8.MediaMatcher, i8.MediaMatcher, [i4.Platform]), i0.ɵmpd(135680, i8.BreakpointObserver, i8.BreakpointObserver, [i8.MediaMatcher, i0.NgZone]), i0.ɵmpd(5120, i1.MAT_TOOLTIP_SCROLL_STRATEGY, i1.MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY, [i6.Overlay]), i0.ɵmpd(512, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(512, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(512, i9.PortalModule, i9.PortalModule, []), i0.ɵmpd(512, i4.PlatformModule, i4.PlatformModule, []), i0.ɵmpd(512, i5.ScrollDispatchModule, i5.ScrollDispatchModule, []), i0.ɵmpd(512, i6.OverlayModule, i6.OverlayModule, []), i0.ɵmpd(256, i10.MATERIAL_SANITY_CHECKS, true, []), i0.ɵmpd(512, i10.MatCommonModule, i10.MatCommonModule, [[2, i10.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(512, i7.A11yModule, i7.A11yModule, []), i0.ɵmpd(512, i8.LayoutModule, i8.LayoutModule, []), i0.ɵmpd(512, i1.MatTooltipModule, i1.MatTooltipModule, []), i0.ɵmpd(256, i1.MAT_TOOLTIP_DEFAULT_OPTIONS, { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 }, [])]); });\nexport { MatTooltipModuleNgFactory as MatTooltipModuleNgFactory };\nvar styles_TooltipComponent = [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:2px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"];\nvar RenderType_TooltipComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TooltipComponent, data: { \"animation\": [{ type: 7, name: \"state\", definitions: [{ type: 0, name: \"initial, void, hidden\", styles: { type: 6, styles: { transform: \"scale(0)\" }, offset: null }, options: undefined }, { type: 0, name: \"visible\", styles: { type: 6, styles: { transform: \"scale(1)\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => visible\", animation: { type: 4, styles: null, timings: \"150ms cubic-bezier(0.0, 0.0, 0.2, 1)\" }, options: null }, { type: 1, expr: \"* => hidden\", animation: { type: 4, styles: null, timings: \"150ms cubic-bezier(0.4, 0.0, 1, 1)\" }, options: null }], options: {} }] } });\nexport { RenderType_TooltipComponent as RenderType_TooltipComponent };\nexport function View_TooltipComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"mat-tooltip\"]], [[2, \"mat-tooltip-handset\", null], [4, \"transform-origin\", null], [24, \"@state\", 0]], [[null, \"@state.start\"], [null, \"@state.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@state.start\" === en)) {\n        var pd_0 = (_co._animationStart() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@state.done\" === en)) {\n        var pd_1 = (_co._animationDone($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 278528, null, 0, i2.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵted(3, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_3 = \"mat-tooltip\"; var currVal_4 = _co.tooltipClass; _ck(_v, 1, 0, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 0, 0, i0.ɵnov(_v, 2).transform(_co._isHandset)).matches; var currVal_1 = _co._transformOrigin; var currVal_2 = _co._visibility; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); var currVal_5 = _co.message; _ck(_v, 3, 0, currVal_5); }); }\nexport function View_TooltipComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tooltip-component\", [[\"aria-hidden\", \"true\"]], [[4, \"zoom\", null]], [[\"body\", \"click\"]], function (_v, en, $event) { var ad = true; if ((\"body:click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._handleBodyInteraction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_TooltipComponent_0, RenderType_TooltipComponent)), i0.ɵdid(1, 49152, null, 0, i1.TooltipComponent, [i0.ChangeDetectorRef, i8.BreakpointObserver], null, null)], null, function (_ck, _v) { var currVal_0 = ((i0.ɵnov(_v, 1)._visibility === \"visible\") ? 1 : null); _ck(_v, 0, 0, currVal_0); }); }\nvar TooltipComponentNgFactory = i0.ɵccf(\"mat-tooltip-component\", i1.TooltipComponent, View_TooltipComponent_Host_0, {}, {}, []);\nexport { TooltipComponentNgFactory as TooltipComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tooltip/typings/index.ngfactory.js.pre-build-optimizer.js","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)!.matches\" [style.transform-origin]=\"_transformOrigin\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_common,_angular_material_core,_angular_cdk_a11y,tslib,tslib,_angular_cdk_platform PURE_IMPORTS_END */\nimport { ChangeDetectionStrategy, Component, ElementRef, NgModule, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule, MatRipple, MatRippleModule, mixinColor, mixinDisableRipple, mixinDisabled } from '@angular/material/core';\nimport { A11yModule, FocusMonitor } from '@angular/cdk/a11y';\nimport { __extends } from 'tslib';\nimport { Platform } from '@angular/cdk/platform';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n */\nvar DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * Default color palette for flat buttons (mat-flat-button)\n */\nvar DEFAULT_FLAT_BUTTON_COLOR = 'primary';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nvar BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n/**\n * \\@docs-private\n */\nvar MatButtonBase = /*@__PURE__*/ (function () {\n    function MatButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatButtonBase;\n}());\nvar _MatButtonMixinBase = /*@__PURE__*/ mixinColor(/*@__PURE__*/ mixinDisabled(/*@__PURE__*/ mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nvar MatButton = /*@__PURE__*/ (function (_super) {\n    __extends(MatButton, _super);\n    function MatButton(elementRef, _platform, _focusMonitor) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._platform = _platform;\n        _this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the button is round.\n         */\n        _this._isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        _this._isIconButton = _this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is prevent in the button's host\n        // attributes, add the correct corresponding class.\n        for (var _i = 0, BUTTON_HOST_ATTRIBUTES_1 = BUTTON_HOST_ATTRIBUTES; _i < BUTTON_HOST_ATTRIBUTES_1.length; _i++) {\n            var attr = BUTTON_HOST_ATTRIBUTES_1[_i];\n            if (_this._hasHostAttributes(attr)) {\n                ((elementRef.nativeElement)).classList.add(attr);\n            }\n        }\n        _this._focusMonitor.monitor(_this._elementRef.nativeElement, true);\n        if (_this._isRoundButton) {\n            _this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n        else if (_this._hasHostAttributes('mat-flat-button')) {\n            _this.color = DEFAULT_FLAT_BUTTON_COLOR;\n        }\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        };\n    /** Focuses the button. */\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MatButton.prototype.focus = /**\n     * Focuses the button.\n     * @return {?}\n     */\n        function () {\n            this._getHostElement().focus();\n        };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._getHostElement = /**\n     * @return {?}\n     */\n        function () {\n            return this._elementRef.nativeElement;\n        };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n        function () {\n            return this.disableRipple || this.disabled;\n        };\n    /** Gets whether the button has one of the given attributes. */\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    MatButton.prototype._hasHostAttributes = /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            var attributes = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                attributes[_i] = arguments[_i];\n            }\n            // If not on the browser, say that there are none of the attributes present.\n            // Since these only affect how the ripple displays (and ripples only happen on the client),\n            // detecting these attributes isn't necessary when not on the browser.\n            if (!this._platform.isBrowser) {\n                return false;\n            }\n            return attributes.some(function (attribute) { return _this._getHostElement().hasAttribute(attribute); });\n        };\n    return MatButton;\n}(_MatButtonMixinBase));\n/**\n * Raised Material design button.\n */\nvar MatAnchor = /*@__PURE__*/ (function (_super) {\n    __extends(MatAnchor, _super);\n    function MatAnchor(platform, focusMonitor, elementRef) {\n        return _super.call(this, elementRef, platform, focusMonitor) || this;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAnchor.prototype._haltDisabledEvents = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    return MatAnchor;\n}(MatButton));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatButtonModule = /*@__PURE__*/ (function () {\n    function MatButtonModule() {\n    }\n    return MatButtonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatButtonModule, MatButtonBase, _MatButtonMixinBase, MatButton, MatAnchor };\n//# sourceMappingURL=button.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/button.es5.js\n// module id = null\n// module chunks = ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/cdk/a11y\";\nimport * as i6 from \"@angular/material/core\";\nvar MatButtonModuleNgFactory = i0.ɵcmf(i1.MatButtonModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵa]]), i0.ɵmpd(6144, i3.DIR_DOCUMENT, null, [i2.DOCUMENT]), i0.ɵmpd(4608, i3.Directionality, i3.Directionality, [[2, i3.DIR_DOCUMENT]]), i0.ɵmpd(4608, i4.Platform, i4.Platform, []), i0.ɵmpd(4608, i5.InteractivityChecker, i5.InteractivityChecker, [i4.Platform]), i0.ɵmpd(4608, i5.FocusTrapFactory, i5.FocusTrapFactory, [i5.InteractivityChecker, i0.NgZone, i2.DOCUMENT]), i0.ɵmpd(136192, i5.AriaDescriber, i5.ARIA_DESCRIBER_PROVIDER_FACTORY, [[3, i5.AriaDescriber], i2.DOCUMENT]), i0.ɵmpd(5120, i5.LiveAnnouncer, i5.LIVE_ANNOUNCER_PROVIDER_FACTORY, [[3, i5.LiveAnnouncer], [2, i5.LIVE_ANNOUNCER_ELEMENT_TOKEN], i2.DOCUMENT]), i0.ɵmpd(5120, i5.FocusMonitor, i5.FOCUS_MONITOR_PROVIDER_FACTORY, [[3, i5.FocusMonitor], i0.NgZone, i4.Platform]), i0.ɵmpd(512, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(512, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(256, i6.MATERIAL_SANITY_CHECKS, true, []), i0.ɵmpd(512, i6.MatCommonModule, i6.MatCommonModule, [[2, i6.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(512, i4.PlatformModule, i4.PlatformModule, []), i0.ɵmpd(512, i6.MatRippleModule, i6.MatRippleModule, []), i0.ɵmpd(512, i5.A11yModule, i5.A11yModule, []), i0.ɵmpd(512, i1.MatButtonModule, i1.MatButtonModule, [])]); });\nexport { MatButtonModuleNgFactory as MatButtonModuleNgFactory };\nvar styles_MatButton = [\".mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"];\nvar RenderType_MatButton = i0.ɵcrt({ encapsulation: 2, styles: styles_MatButton, data: {} });\nexport { RenderType_MatButton as RenderType_MatButton };\nexport function View_MatButton_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { ripple: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"mat-button-wrapper\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"mat-button-ripple mat-ripple\"], [\"matRipple\", \"\"]], [[2, \"mat-button-ripple-round\", null], [2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(4, 212992, [[1, 4]], 0, i6.MatRipple, [i0.ElementRef, i0.NgZone, i4.Platform, [2, i6.MAT_RIPPLE_GLOBAL_OPTIONS]], { centered: [0, \"centered\"], disabled: [1, \"disabled\"], trigger: [2, \"trigger\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-button-focus-overlay\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co._isIconButton; var currVal_3 = _co._isRippleDisabled(); var currVal_4 = _co._getHostElement(); _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co._isRoundButton || _co._isIconButton); var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); }); }\nexport function View_MatButton_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"button\", [[\"mat-button\", \"\"]], [[8, \"disabled\", 0]], null, null, View_MatButton_0, RenderType_MatButton)), i0.ɵdid(1, 180224, null, 0, i1.MatButton, [i0.ElementRef, i4.Platform, i5.FocusMonitor], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).disabled || null); _ck(_v, 0, 0, currVal_0); }); }\nvar MatButtonNgFactory = i0.ɵccf(\"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", i1.MatButton, View_MatButton_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, {}, [\"*\"]);\nexport { MatButtonNgFactory as MatButtonNgFactory };\nvar styles_MatAnchor = [\".mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"];\nvar RenderType_MatAnchor = i0.ɵcrt({ encapsulation: 2, styles: styles_MatAnchor, data: {} });\nexport { RenderType_MatAnchor as RenderType_MatAnchor };\nexport function View_MatAnchor_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { ripple: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"mat-button-wrapper\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"mat-button-ripple mat-ripple\"], [\"matRipple\", \"\"]], [[2, \"mat-button-ripple-round\", null], [2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(4, 212992, [[1, 4]], 0, i6.MatRipple, [i0.ElementRef, i0.NgZone, i4.Platform, [2, i6.MAT_RIPPLE_GLOBAL_OPTIONS]], { centered: [0, \"centered\"], disabled: [1, \"disabled\"], trigger: [2, \"trigger\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-button-focus-overlay\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co._isIconButton; var currVal_3 = _co._isRippleDisabled(); var currVal_4 = _co._getHostElement(); _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co._isRoundButton || _co._isIconButton); var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); }); }\nexport function View_MatAnchor_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"a\", [[\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_MatAnchor_0, RenderType_MatAnchor)), i0.ɵdid(1, 180224, null, 0, i1.MatAnchor, [i4.Platform, i5.FocusMonitor, i0.ElementRef], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).disabled ? (0 - 1) : 0); var currVal_1 = (i0.ɵnov(_v, 1).disabled || null); var currVal_2 = i0.ɵnov(_v, 1).disabled.toString(); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar MatAnchorNgFactory = i0.ɵccf(\"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", i1.MatAnchor, View_MatAnchor_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, {}, [\"*\"]);\nexport { MatAnchorNgFactory as MatAnchorNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/button/typings/index.ngfactory.js.pre-build-optimizer.js","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"_isRoundButton || _isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"_isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"_isRoundButton || _isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"_isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/button/typings/index.d.ts.MatAnchor.html","import { Component, OnInit } from '@angular/core';\nimport * as Chartist from 'chartist';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n  startAnimationForLineChart(chart){\n      let seq: any, delays: any, durations: any;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n\n      chart.on('draw', function(data) {\n        if(data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if(data.type === 'point') {\n              seq++;\n              data.element.animate({\n                opacity: {\n                  begin: seq * delays,\n                  dur: durations,\n                  from: 0,\n                  to: 1,\n                  easing: 'ease'\n                }\n              });\n          }\n      });\n\n      seq = 0;\n  };\n  startAnimationForBarChart(chart){\n      let seq2: any, delays2: any, durations2: any;\n\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function(data) {\n        if(data.type === 'bar'){\n            seq2++;\n            data.element.animate({\n              opacity: {\n                begin: seq2 * delays2,\n                dur: durations2,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            });\n        }\n      });\n\n      seq2 = 0;\n  };\n  ngOnInit() {\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\n\n      const dataDailySalesChart: any = {\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n          series: [\n              [12, 17, 7, 17, 23, 18, 38]\n          ]\n      };\n\n     const optionsDailySalesChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\n      }\n\n      var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\n\n      this.startAnimationForLineChart(dailySalesChart);\n\n\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n\n      const dataCompletedTasksChart: any = {\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\n          series: [\n              [230, 750, 450, 300, 280, 240, 200, 190]\n          ]\n      };\n\n     const optionsCompletedTasksChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\n      }\n\n      var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\n\n      // start animation for the Completed Tasks Chart - Line Chart\n      this.startAnimationForLineChart(completedTasksChart);\n\n\n\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n\n      var datawebsiteViewsChart = {\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        series: [\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n\n        ]\n      };\n      var optionswebsiteViewsChart = {\n          axisX: {\n              showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\n      };\n      var responsiveOptions: any[] = [\n        ['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function (value) {\n              return value[0];\n            }\n          }\n        }]\n      ];\n      var websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\n\n      //start animation for the Emails Subscription Chart\n      this.startAnimationForBarChart(websiteViewsChart);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./dashboard.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/cdk/a11y\";\nimport * as i6 from \"@angular/material/tooltip\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/scrolling\";\nimport * as i9 from \"@angular/cdk/bidi\";\nimport * as i10 from \"./dashboard.component\";\nvar styles_DashboardComponent = [i0.styles];\nvar RenderType_DashboardComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_DashboardComponent, data: {} });\nexport { RenderType_DashboardComponent as RenderType_DashboardComponent };\nexport function View_DashboardComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 787, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(2, 0, null, null, 784, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(4, 0, null, null, 126, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(6, 0, null, null, 34, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(8, 0, null, null, 31, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(10, 0, null, null, 16, \"div\", [[\"class\", \"card-header card-header-warning card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(12, 0, null, null, 4, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"content_copy\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(18, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Used Space\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(21, 0, null, null, 4, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"49/50\\n                          \"])), (_l()(), i1.ɵeld(23, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"GB\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(28, 0, null, null, 10, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(30, 0, null, null, 7, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(32, 0, null, null, 1, \"i\", [[\"class\", \"material-icons text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"warning\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(35, 0, null, null, 1, \"a\", [[\"href\", \"#pablo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Get More Space...\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(42, 0, null, null, 28, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(44, 0, null, null, 25, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(46, 0, null, null, 13, \"div\", [[\"class\", \"card-header card-header-success card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(48, 0, null, null, 4, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(50, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"store\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(54, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Revenue\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(57, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$34,245\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(61, 0, null, null, 7, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(63, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(65, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"date_range\"])), (_l()(), i1.ɵted(-1, null, [\" Last 24 Hours\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(72, 0, null, null, 28, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(74, 0, null, null, 25, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(76, 0, null, null, 13, \"div\", [[\"class\", \"card-header card-header-danger card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(78, 0, null, null, 4, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(80, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"info_outline\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(84, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Fixed Issues\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(87, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"75\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(91, 0, null, null, 7, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(93, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(95, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"local_offer\"])), (_l()(), i1.ɵted(-1, null, [\" Tracked from Github\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(102, 0, null, null, 27, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(104, 0, null, null, 24, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(106, 0, null, null, 12, \"div\", [[\"class\", \"card-header card-header-info card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(108, 0, null, null, 3, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(110, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-twitter\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(113, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Followers\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(116, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"+245\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(120, 0, null, null, 7, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(122, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(124, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"update\"])), (_l()(), i1.ɵted(-1, null, [\" Just Updated\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(132, 0, null, null, 92, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(134, 0, null, null, 31, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(136, 0, null, null, 28, \"div\", [[\"class\", \"card card-chart\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(138, 0, null, null, 3, \"div\", [[\"class\", \"card-header card-header-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(140, 0, null, null, 0, \"div\", [[\"class\", \"ct-chart\"], [\"id\", \"dailySalesChart\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(143, 0, null, null, 11, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(145, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Daily Sales\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(148, 0, null, null, 5, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(150, 0, null, null, 2, \"span\", [[\"class\", \"text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(151, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-long-arrow-up\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 55% \"])), (_l()(), i1.ɵted(-1, null, [\" increase in today sales.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(156, 0, null, null, 7, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(158, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(160, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"access_time\"])), (_l()(), i1.ɵted(-1, null, [\" updated 4 minutes ago\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(167, 0, null, null, 27, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(169, 0, null, null, 24, \"div\", [[\"class\", \"card card-chart\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(171, 0, null, null, 3, \"div\", [[\"class\", \"card-header card-header-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(173, 0, null, null, 0, \"div\", [[\"class\", \"ct-chart\"], [\"id\", \"websiteViewsChart\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(176, 0, null, null, 7, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(178, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Email Subscriptions\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(181, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Last Campaign Performance\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(185, 0, null, null, 7, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(187, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(189, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"access_time\"])), (_l()(), i1.ɵted(-1, null, [\" campaign sent 2 days ago\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(196, 0, null, null, 27, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(198, 0, null, null, 24, \"div\", [[\"class\", \"card card-chart\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(200, 0, null, null, 3, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(202, 0, null, null, 0, \"div\", [[\"class\", \"ct-chart\"], [\"id\", \"completedTasksChart\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(205, 0, null, null, 7, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(207, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Completed Tasks\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(210, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Last Campaign Performance\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(214, 0, null, null, 7, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(216, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(218, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"access_time\"])), (_l()(), i1.ɵted(-1, null, [\" campaign sent 2 days ago\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(226, 0, null, null, 559, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(228, 0, null, null, 457, \"div\", [[\"class\", \"col-lg-6 col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(230, 0, null, null, 454, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(232, 0, null, null, 49, \"div\", [[\"class\", \"card-header card-header-tabs card-header-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(234, 0, null, null, 46, \"div\", [[\"class\", \"nav-tabs-navigation\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(236, 0, null, null, 43, \"div\", [[\"class\", \"nav-tabs-wrapper\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(238, 0, null, null, 1, \"span\", [[\"class\", \"nav-tabs-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Tasks:\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(241, 0, null, null, 37, \"ul\", [[\"class\", \"nav nav-tabs\"], [\"data-tabs\", \"tabs\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(243, 0, null, null, 10, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(245, 0, null, null, 7, \"a\", [[\"class\", \"nav-link active\"], [\"data-toggle\", \"tab\"], [\"href\", \"#profile\"], [\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 246)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatAnchor_0, i2.RenderType_MatAnchor)), i1.ɵdid(246, 180224, null, 0, i3.MatAnchor, [i4.Platform, i5.FocusMonitor, i1.ElementRef], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                          \"])), (_l()(), i1.ɵeld(248, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"bug_report\"])), (_l()(), i1.ɵted(-1, 0, [\" Bugs\\n                                          \"])), (_l()(), i1.ɵeld(251, 0, null, 0, 0, \"div\", [[\"class\", \"ripple-container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, 0, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(255, 0, null, null, 10, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(257, 0, null, null, 7, \"a\", [[\"class\", \"nav-link\"], [\"data-toggle\", \"tab\"], [\"href\", \"#messages\"], [\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 258)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatAnchor_0, i2.RenderType_MatAnchor)), i1.ɵdid(258, 180224, null, 0, i3.MatAnchor, [i4.Platform, i5.FocusMonitor, i1.ElementRef], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                          \"])), (_l()(), i1.ɵeld(260, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"code\"])), (_l()(), i1.ɵted(-1, 0, [\" Website\\n                                          \"])), (_l()(), i1.ɵeld(263, 0, null, 0, 0, \"div\", [[\"class\", \"ripple-container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, 0, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(267, 0, null, null, 10, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(269, 0, null, null, 7, \"a\", [[\"class\", \"nav-link\"], [\"data-toggle\", \"tab\"], [\"href\", \"#settings\"], [\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 270)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatAnchor_0, i2.RenderType_MatAnchor)), i1.ɵdid(270, 180224, null, 0, i3.MatAnchor, [i4.Platform, i5.FocusMonitor, i1.ElementRef], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                          \"])), (_l()(), i1.ɵeld(272, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"cloud\"])), (_l()(), i1.ɵted(-1, 0, [\" Server\\n                                          \"])), (_l()(), i1.ɵeld(275, 0, null, 0, 0, \"div\", [[\"class\", \"ripple-container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, 0, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(283, 0, null, null, 400, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(285, 0, null, null, 397, \"div\", [[\"class\", \"tab-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(287, 0, null, null, 171, \"div\", [[\"class\", \"tab-pane active\"], [\"id\", \"profile\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(289, 0, null, null, 168, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(291, 0, null, null, 165, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(293, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(295, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(297, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(299, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(301, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(303, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(305, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(311, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sign contract for \\\"What are conference organizers afraid of?\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(314, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(316, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 318).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 318)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 318)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(317, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(318, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(320, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(324, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 326).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 326)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 326)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(325, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(326, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(328, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(334, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(336, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(338, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(340, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(342, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(344, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(346, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(352, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lines From Great Russian Literature? Or E-mails From My Boss?\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(355, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(357, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 359).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 359)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 359)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(358, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(359, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(361, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(365, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 367).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 367)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 367)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(366, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(367, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(369, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(375, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(377, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(379, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(381, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(383, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(385, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(387, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(393, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(396, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(398, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 400).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 400)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 400)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(399, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(400, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(402, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(406, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 408).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 408)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 408)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(407, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(408, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(410, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(416, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(418, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(420, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(422, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(424, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(426, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(428, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(434, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Create 4 Invisible User Experiences you Never Knew About\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(437, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(439, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 441).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 441)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 441)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(440, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(441, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(443, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(447, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 449).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 449)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 449)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(448, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(449, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(451, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(460, 0, null, null, 89, \"div\", [[\"class\", \"tab-pane\"], [\"id\", \"messages\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(462, 0, null, null, 86, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(464, 0, null, null, 83, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(466, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(468, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(470, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(472, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(474, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(476, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(478, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(484, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(487, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(489, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 491).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 491)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 491)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(490, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(491, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(493, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(497, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 499).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 499)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 499)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(498, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(499, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(501, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(507, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(509, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(511, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(513, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(515, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(517, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(519, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(525, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sign contract for \\\"What are conference organizers afraid of?\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(528, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(530, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 532).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 532)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 532)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(531, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(532, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(534, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(538, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 540).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 540)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 540)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(539, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(540, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(542, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(551, 0, null, null, 130, \"div\", [[\"class\", \"tab-pane\"], [\"id\", \"settings\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(553, 0, null, null, 127, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(555, 0, null, null, 124, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(557, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(559, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(561, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(563, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(565, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(567, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(569, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(575, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lines From Great Russian Literature? Or E-mails From My Boss?\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(578, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(580, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 582).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 582)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 582)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(581, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(582, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(584, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(588, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 590).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 590)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 590)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(589, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(590, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(592, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(598, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(600, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(602, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(604, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(606, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(608, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(610, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(616, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(619, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(621, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 623).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 623)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 623)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(622, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(623, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(625, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(629, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 631).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 631)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 631)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(630, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(631, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(633, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(639, 0, null, null, 39, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(641, 0, null, null, 14, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(643, 0, null, null, 11, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(645, 0, null, null, 8, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(647, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵeld(649, 0, null, null, 3, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                          \"])), (_l()(), i1.ɵeld(651, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(657, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sign contract for \\\"What are conference organizers afraid of?\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵeld(660, 0, null, null, 17, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(662, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 664).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 664)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 664)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(663, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(664, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(666, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                              \"])), (_l()(), i1.ɵeld(670, 16777216, null, null, 6, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 672).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 672)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 672)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(671, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), i1.ɵdid(672, 147456, null, 0, i6.MatTooltip, [i7.Overlay, i1.ElementRef, i8.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i6.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i9.Directionality], [2, i6.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                                                  \"])), (_l()(), i1.ɵeld(674, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(687, 0, null, null, 97, \"div\", [[\"class\", \"col-lg-6 col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(689, 0, null, null, 94, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(691, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(693, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Employees Stats\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(696, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"New employees on 15th September, 2016\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(700, 0, null, null, 82, \"div\", [[\"class\", \"card-body table-responsive\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(702, 0, null, null, 79, \"table\", [[\"class\", \"table table-hover\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(704, 0, null, null, 13, \"thead\", [[\"class\", \"text-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(706, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"ID\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(709, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Name\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(712, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Salary\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(715, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Country\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(719, 0, null, null, 61, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(721, 0, null, null, 13, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(723, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"1\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(726, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Dakota Rice\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(729, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$36,738\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(732, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Niger\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(736, 0, null, null, 13, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(738, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"2\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(741, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Minerva Hooper\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(744, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$23,789\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(747, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Cura\\u00E7ao\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(751, 0, null, null, 13, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(753, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"3\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(756, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sage Rodriguez\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(759, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$56,142\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(762, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Netherlands\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(766, 0, null, null, 13, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(768, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"4\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(771, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Philip Chaney\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(774, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$38,735\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(777, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Korea, South\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], function (_ck, _v) { var currVal_10 = \"above\"; var currVal_11 = \"Edit Task\"; _ck(_v, 318, 0, currVal_10, currVal_11); var currVal_13 = \"above\"; var currVal_14 = \"Remove\"; _ck(_v, 326, 0, currVal_13, currVal_14); var currVal_16 = \"above\"; var currVal_17 = \"Edit Task\"; _ck(_v, 359, 0, currVal_16, currVal_17); var currVal_19 = \"above\"; var currVal_20 = \"Remove\"; _ck(_v, 367, 0, currVal_19, currVal_20); var currVal_22 = \"above\"; var currVal_23 = \"Edit Task\"; _ck(_v, 400, 0, currVal_22, currVal_23); var currVal_25 = \"above\"; var currVal_26 = \"Remove\"; _ck(_v, 408, 0, currVal_25, currVal_26); var currVal_28 = \"above\"; var currVal_29 = \"Edit Task\"; _ck(_v, 441, 0, currVal_28, currVal_29); var currVal_31 = \"above\"; var currVal_32 = \"Remove\"; _ck(_v, 449, 0, currVal_31, currVal_32); var currVal_34 = \"above\"; var currVal_35 = \"Edit Task\"; _ck(_v, 491, 0, currVal_34, currVal_35); var currVal_37 = \"above\"; var currVal_38 = \"Remove\"; _ck(_v, 499, 0, currVal_37, currVal_38); var currVal_40 = \"above\"; var currVal_41 = \"Edit Task\"; _ck(_v, 532, 0, currVal_40, currVal_41); var currVal_43 = \"above\"; var currVal_44 = \"Remove\"; _ck(_v, 540, 0, currVal_43, currVal_44); var currVal_46 = \"above\"; var currVal_47 = \"Edit Task\"; _ck(_v, 582, 0, currVal_46, currVal_47); var currVal_49 = \"above\"; var currVal_50 = \"Remove\"; _ck(_v, 590, 0, currVal_49, currVal_50); var currVal_52 = \"above\"; var currVal_53 = \"Edit Task\"; _ck(_v, 623, 0, currVal_52, currVal_53); var currVal_55 = \"above\"; var currVal_56 = \"Remove\"; _ck(_v, 631, 0, currVal_55, currVal_56); var currVal_58 = \"above\"; var currVal_59 = \"Edit Task\"; _ck(_v, 664, 0, currVal_58, currVal_59); var currVal_61 = \"above\"; var currVal_62 = \"Remove\"; _ck(_v, 672, 0, currVal_61, currVal_62); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 246).disabled ? (0 - 1) : 0); var currVal_1 = (i1.ɵnov(_v, 246).disabled || null); var currVal_2 = i1.ɵnov(_v, 246).disabled.toString(); _ck(_v, 245, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = (i1.ɵnov(_v, 258).disabled ? (0 - 1) : 0); var currVal_4 = (i1.ɵnov(_v, 258).disabled || null); var currVal_5 = i1.ɵnov(_v, 258).disabled.toString(); _ck(_v, 257, 0, currVal_3, currVal_4, currVal_5); var currVal_6 = (i1.ɵnov(_v, 270).disabled ? (0 - 1) : 0); var currVal_7 = (i1.ɵnov(_v, 270).disabled || null); var currVal_8 = i1.ɵnov(_v, 270).disabled.toString(); _ck(_v, 269, 0, currVal_6, currVal_7, currVal_8); var currVal_9 = (i1.ɵnov(_v, 317).disabled || null); _ck(_v, 316, 0, currVal_9); var currVal_12 = (i1.ɵnov(_v, 325).disabled || null); _ck(_v, 324, 0, currVal_12); var currVal_15 = (i1.ɵnov(_v, 358).disabled || null); _ck(_v, 357, 0, currVal_15); var currVal_18 = (i1.ɵnov(_v, 366).disabled || null); _ck(_v, 365, 0, currVal_18); var currVal_21 = (i1.ɵnov(_v, 399).disabled || null); _ck(_v, 398, 0, currVal_21); var currVal_24 = (i1.ɵnov(_v, 407).disabled || null); _ck(_v, 406, 0, currVal_24); var currVal_27 = (i1.ɵnov(_v, 440).disabled || null); _ck(_v, 439, 0, currVal_27); var currVal_30 = (i1.ɵnov(_v, 448).disabled || null); _ck(_v, 447, 0, currVal_30); var currVal_33 = (i1.ɵnov(_v, 490).disabled || null); _ck(_v, 489, 0, currVal_33); var currVal_36 = (i1.ɵnov(_v, 498).disabled || null); _ck(_v, 497, 0, currVal_36); var currVal_39 = (i1.ɵnov(_v, 531).disabled || null); _ck(_v, 530, 0, currVal_39); var currVal_42 = (i1.ɵnov(_v, 539).disabled || null); _ck(_v, 538, 0, currVal_42); var currVal_45 = (i1.ɵnov(_v, 581).disabled || null); _ck(_v, 580, 0, currVal_45); var currVal_48 = (i1.ɵnov(_v, 589).disabled || null); _ck(_v, 588, 0, currVal_48); var currVal_51 = (i1.ɵnov(_v, 622).disabled || null); _ck(_v, 621, 0, currVal_51); var currVal_54 = (i1.ɵnov(_v, 630).disabled || null); _ck(_v, 629, 0, currVal_54); var currVal_57 = (i1.ɵnov(_v, 663).disabled || null); _ck(_v, 662, 0, currVal_57); var currVal_60 = (i1.ɵnov(_v, 671).disabled || null); _ck(_v, 670, 0, currVal_60); }); }\nexport function View_DashboardComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-dashboard\", [], null, null, null, View_DashboardComponent_0, RenderType_DashboardComponent)), i1.ɵdid(1, 114688, null, 0, i10.DashboardComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DashboardComponentNgFactory = i1.ɵccf(\"app-dashboard\", i10.DashboardComponent, View_DashboardComponent_Host_0, {}, {}, []);\nexport { DashboardComponentNgFactory as DashboardComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-warning card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"material-icons\">content_copy</i>\n                      </div>\n                      <p class=\"card-category\">Used Space</p>\n                      <h3 class=\"card-title\">49/50\n                          <small>GB</small>\n                      </h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons text-danger\">warning</i>\n                          <a href=\"#pablo\">Get More Space...</a>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-success card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"material-icons\">store</i>\n                      </div>\n                      <p class=\"card-category\">Revenue</p>\n                      <h3 class=\"card-title\">$34,245</h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">date_range</i> Last 24 Hours\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-danger card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"material-icons\">info_outline</i>\n                      </div>\n                      <p class=\"card-category\">Fixed Issues</p>\n                      <h3 class=\"card-title\">75</h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">local_offer</i> Tracked from Github\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-info card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"fa fa-twitter\"></i>\n                      </div>\n                      <p class=\"card-category\">Followers</p>\n                      <h3 class=\"card-title\">+245</h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">update</i> Just Updated\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div class=\"row\">\n          <div class=\"col-md-4\">\n              <div class=\"card card-chart\">\n                  <div class=\"card-header card-header-success\">\n                      <div class=\"ct-chart\" id=\"dailySalesChart\"></div>\n                  </div>\n                  <div class=\"card-body\">\n                      <h4 class=\"card-title\">Daily Sales</h4>\n                      <p class=\"card-category\">\n                          <span class=\"text-success\"><i class=\"fa fa-long-arrow-up\"></i> 55% </span> increase in today sales.</p>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">access_time</i> updated 4 minutes ago\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-4\">\n              <div class=\"card card-chart\">\n                  <div class=\"card-header card-header-warning\">\n                      <div class=\"ct-chart\" id=\"websiteViewsChart\"></div>\n                  </div>\n                  <div class=\"card-body\">\n                      <h4 class=\"card-title\">Email Subscriptions</h4>\n                      <p class=\"card-category\">Last Campaign Performance</p>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">access_time</i> campaign sent 2 days ago\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-4\">\n              <div class=\"card card-chart\">\n                  <div class=\"card-header card-header-danger\">\n                      <div class=\"ct-chart\" id=\"completedTasksChart\"></div>\n                  </div>\n                  <div class=\"card-body\">\n                      <h4 class=\"card-title\">Completed Tasks</h4>\n                      <p class=\"card-category\">Last Campaign Performance</p>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">access_time</i> campaign sent 2 days ago\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div class=\"row\">\n          <div class=\"col-lg-6 col-md-12\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-tabs card-header-primary\">\n                      <div class=\"nav-tabs-navigation\">\n                          <div class=\"nav-tabs-wrapper\">\n                              <span class=\"nav-tabs-title\">Tasks:</span>\n                              <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\n                                  <li class=\"nav-item\">\n                                      <a mat-button class=\"nav-link active\" href=\"#profile\" data-toggle=\"tab\">\n                                          <i class=\"material-icons\">bug_report</i> Bugs\n                                          <div class=\"ripple-container\"></div>\n                                      </a>\n                                  </li>\n                                  <li class=\"nav-item\">\n                                      <a mat-button class=\"nav-link\" href=\"#messages\" data-toggle=\"tab\">\n                                          <i class=\"material-icons\">code</i> Website\n                                          <div class=\"ripple-container\"></div>\n                                      </a>\n                                  </li>\n                                  <li class=\"nav-item\">\n                                      <a mat-button class=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">\n                                          <i class=\"material-icons\">cloud</i> Server\n                                          <div class=\"ripple-container\"></div>\n                                      </a>\n                                  </li>\n                              </ul>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"card-body\">\n                      <div class=\"tab-content\">\n                          <div class=\"tab-pane active\" id=\"profile\">\n                              <table class=\"table\">\n                                  <tbody>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                          </td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Create 4 Invisible User Experiences you Never Knew About</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                  </tbody>\n                              </table>\n                          </div>\n                          <div class=\"tab-pane\" id=\"messages\">\n                              <table class=\"table\">\n                                  <tbody>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                          </td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                  </tbody>\n                              </table>\n                          </div>\n                          <div class=\"tab-pane\" id=\"settings\">\n                              <table class=\"table\">\n                                  <tbody>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                          </td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                  </tbody>\n                              </table>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-6 col-md-12\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-warning\">\n                      <h4 class=\"card-title\">Employees Stats</h4>\n                      <p class=\"card-category\">New employees on 15th September, 2016</p>\n                  </div>\n                  <div class=\"card-body table-responsive\">\n                      <table class=\"table table-hover\">\n                          <thead class=\"text-warning\">\n                              <th>ID</th>\n                              <th>Name</th>\n                              <th>Salary</th>\n                              <th>Country</th>\n                          </thead>\n                          <tbody>\n                              <tr>\n                                  <td>1</td>\n                                  <td>Dakota Rice</td>\n                                  <td>$36,738</td>\n                                  <td>Niger</td>\n                              </tr>\n                              <tr>\n                                  <td>2</td>\n                                  <td>Minerva Hooper</td>\n                                  <td>$23,789</td>\n                                  <td>Curaçao</td>\n                              </tr>\n                              <tr>\n                                  <td>3</td>\n                                  <td>Sage Rodriguez</td>\n                                  <td>$56,142</td>\n                                  <td>Netherlands</td>\n                              </tr>\n                              <tr>\n                                  <td>4</td>\n                                  <td>Philip Chaney</td>\n                                  <td>$38,735</td>\n                                  <td>Korea, South</td>\n                              </tr>\n                          </tbody>\n                      </table>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.html","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_common,_angular_core,_angular_cdk_platform,tslib,tslib,_angular_cdk_coercion,_angular_material_core,rxjs_observable_fromEvent,rxjs_operators_startWith,rxjs_operators_take,_angular_animations PURE_IMPORTS_END */\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, Inject, Input, NgModule, Optional, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { __extends } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { take } from 'rxjs/operators/take';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nvar MatError = /*@__PURE__*/ (function () {\n    function MatError() {\n        this.id = \"mat-error-\" + nextUniqueId++;\n    }\n    return MatError;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n */\nvar matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: /*@__PURE__*/ trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        /*@__PURE__*/ state('enter', /*@__PURE__*/ style({ opacity: 1, transform: 'translateY(0%)' })),\n        /*@__PURE__*/ transition('void => enter', [\n            /*@__PURE__*/ style({ opacity: 0, transform: 'translateY(-100%)' }),\n            /*@__PURE__*/ animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nvar MatFormFieldControl = /*@__PURE__*/ (function () {\n    function MatFormFieldControl() {\n    }\n    return MatFormFieldControl;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(\"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\");\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar nextUniqueId$2 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nvar MatHint = /*@__PURE__*/ (function () {\n    function MatHint() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = \"mat-hint-\" + nextUniqueId$2++;\n    }\n    return MatHint;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nvar MatLabel = /*@__PURE__*/ (function () {\n    function MatLabel() {\n    }\n    return MatLabel;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n */\nvar MatPlaceholder = /*@__PURE__*/ (function () {\n    function MatPlaceholder() {\n    }\n    return MatPlaceholder;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Prefix to be placed the the front of the form field.\n */\nvar MatPrefix = /*@__PURE__*/ (function () {\n    function MatPrefix() {\n    }\n    return MatPrefix;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nvar MatSuffix = /*@__PURE__*/ (function () {\n    function MatSuffix() {\n    }\n    return MatSuffix;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatFormFieldBase = /*@__PURE__*/ (function () {\n    function MatFormFieldBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatFormFieldBase;\n}());\nvar _MatFormFieldMixinBase = /*@__PURE__*/ mixinColor(MatFormFieldBase, 'primary');\nvar nextUniqueId$1 = 0;\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nvar MatFormField = /*@__PURE__*/ (function (_super) {\n    __extends(MatFormField, _super);\n    function MatFormField(_elementRef, _changeDetectorRef, labelOptions) {\n        var _this = _super.call(this, _elementRef) || this;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        _this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        _this._subscriptAnimationState = '';\n        _this._hintLabel = '';\n        // Unique id for the hint label.\n        _this._hintLabelId = \"mat-hint-\" + nextUniqueId$1++;\n        _this._labelOptions = labelOptions ? labelOptions : {};\n        _this.floatLabel = _this._labelOptions.float || 'auto';\n        return _this;\n    }\n    Object.defineProperty(MatFormField.prototype, \"dividerColor\", {\n        get: /**\n         * @deprecated Use `color` instead.\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this.color; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this.color = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"hideRequiredMarker\", {\n        get: /**\n         * Whether the required marker should be hidden.\n         * @return {?}\n         */ function () { return this._hideRequiredMarker; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._hideRequiredMarker = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"_shouldAlwaysFloat\", {\n        /** Whether the floating label should always float or not. */\n        get: /**\n         * Whether the floating label should always float or not.\n         * @return {?}\n         */ function () {\n            return this._floatLabel === 'always' && !this._showAlwaysAnimate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"_canLabelFloat\", {\n        /** Whether the label can float or not. */\n        get: /**\n         * Whether the label can float or not.\n         * @return {?}\n         */ function () { return this._floatLabel !== 'never'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"hintLabel\", {\n        get: /**\n         * Text for the form field hint.\n         * @return {?}\n         */ function () { return this._hintLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._hintLabel = value;\n            this._processHints();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"floatPlaceholder\", {\n        get: /**\n         * Whether the placeholder should always float, never float or float as the user types.\n         * @deprecated Use floatLabel instead.\n         * \\@deletion-target 6.0.0\n         * @return {?}\n         */ function () { return this._floatLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this.floatLabel = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"floatLabel\", {\n        get: /**\n         * Whether the label should always float, never float or float as the user types.\n         * @return {?}\n         */ function () { return this._floatLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value !== this._floatLabel) {\n                this._floatLabel = value || this._labelOptions.float || 'auto';\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._validateControlChild();\n            if (this._control.controlType) {\n                this._elementRef.nativeElement.classList\n                    .add(\"mat-form-field-type-\" + this._control.controlType);\n            }\n            // Subscribe to changes in the child control state in order to update the form field UI.\n            this._control.stateChanges.pipe(startWith(/** @type {?} */ ((null)))).subscribe(function () {\n                _this._validatePlaceholders();\n                _this._syncDescribedByIds();\n                _this._changeDetectorRef.markForCheck();\n            });\n            var /** @type {?} */ ngControl = this._control.ngControl;\n            if (ngControl && ngControl.valueChanges) {\n                ngControl.valueChanges.subscribe(function () {\n                    _this._changeDetectorRef.markForCheck();\n                });\n            }\n            // Re-validate when the number of hints changes.\n            this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\n                _this._processHints();\n                _this._changeDetectorRef.markForCheck();\n            });\n            // Update the aria-described by when the number of errors changes.\n            this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\n                _this._syncDescribedByIds();\n                _this._changeDetectorRef.markForCheck();\n            });\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n        function () {\n            this._validateControlChild();\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            // Avoid animations on load.\n            this._subscriptAnimationState = 'enter';\n            this._changeDetectorRef.detectChanges();\n        };\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    MatFormField.prototype._shouldForward = /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n        function (prop) {\n            var /** @type {?} */ ngControl = this._control ? this._control.ngControl : null;\n            return ngControl && ((ngControl))[prop];\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hasPlaceholder = /**\n     * @return {?}\n     */\n        function () {\n            return !!(this._control.placeholder || this._placeholderChild);\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hasLabel = /**\n     * @return {?}\n     */\n        function () {\n            return !!this._labelChild;\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._shouldLabelFloat = /**\n     * @return {?}\n     */\n        function () {\n            return this._canLabelFloat && (this._control.shouldLabelFloat ||\n                this._control.shouldPlaceholderFloat || this._shouldAlwaysFloat);\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hideControlPlaceholder = /**\n     * @return {?}\n     */\n        function () {\n            return !this._hasLabel() || !this._shouldLabelFloat();\n        };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hasFloatingLabel = /**\n     * @return {?}\n     */\n        function () {\n            return this._hasLabel() || this._hasPlaceholder();\n        };\n    /** Determines whether to display hints or errors. */\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    MatFormField.prototype._getDisplayedMessages = /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n        function () {\n            return (this._errorChildren && this._errorChildren.length > 0 &&\n                this._control.errorState) ? 'error' : 'hint';\n        };\n    /** Animates the placeholder up and locks it in position. */\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    MatFormField.prototype._animateAndLockLabel = /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._hasFloatingLabel() && this._canLabelFloat) {\n                this._showAlwaysAnimate = true;\n                this._floatLabel = 'always';\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(function () {\n                    _this._showAlwaysAnimate = false;\n                });\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    MatFormField.prototype._validatePlaceholders = /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n        function () {\n            if (this._control.placeholder && this._placeholderChild) {\n                throw getMatFormFieldPlaceholderConflictError();\n            }\n        };\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    MatFormField.prototype._processHints = /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n        function () {\n            this._validateHints();\n            this._syncDescribedByIds();\n        };\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    MatFormField.prototype._validateHints = /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._hintChildren) {\n                var /** @type {?} */ startHint_1;\n                var /** @type {?} */ endHint_1;\n                this._hintChildren.forEach(function (hint) {\n                    if (hint.align === 'start') {\n                        if (startHint_1 || _this.hintLabel) {\n                            throw getMatFormFieldDuplicatedHintError('start');\n                        }\n                        startHint_1 = hint;\n                    }\n                    else if (hint.align === 'end') {\n                        if (endHint_1) {\n                            throw getMatFormFieldDuplicatedHintError('end');\n                        }\n                        endHint_1 = hint;\n                    }\n                });\n            }\n        };\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    MatFormField.prototype._syncDescribedByIds = /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n        function () {\n            if (this._control) {\n                var /** @type {?} */ ids = [];\n                if (this._getDisplayedMessages() === 'hint') {\n                    var /** @type {?} */ startHint = this._hintChildren ?\n                        this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;\n                    var /** @type {?} */ endHint = this._hintChildren ?\n                        this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;\n                    if (startHint) {\n                        ids.push(startHint.id);\n                    }\n                    else if (this._hintLabel) {\n                        ids.push(this._hintLabelId);\n                    }\n                    if (endHint) {\n                        ids.push(endHint.id);\n                    }\n                }\n                else if (this._errorChildren) {\n                    ids = this._errorChildren.map(function (error) { return error.id; });\n                }\n                this._control.setDescribedByIds(ids);\n            }\n        };\n    /** Throws an error if the form field's control is missing. */\n    /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    MatFormField.prototype._validateControlChild = /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n        function () {\n            if (!this._control) {\n                throw getMatFormFieldMissingControlError();\n            }\n        };\n    return MatFormField;\n}(_MatFormFieldMixinBase));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatFormFieldModule = /*@__PURE__*/ (function () {\n    function MatFormFieldModule() {\n    }\n    return MatFormFieldModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatFormFieldModule, MatError, MatFormFieldBase, _MatFormFieldMixinBase, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n//# sourceMappingURL=form-field.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/form-field.es5.js\n// module id = null\n// module chunks = ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/platform\";\nimport * as i4 from \"@angular/material/core\";\nvar MatFormFieldModuleNgFactory = i0.ɵcmf(i1.MatFormFieldModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵa]]), i0.ɵmpd(4608, i3.Platform, i3.Platform, []), i0.ɵmpd(512, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(512, i3.PlatformModule, i3.PlatformModule, []), i0.ɵmpd(512, i1.MatFormFieldModule, i1.MatFormFieldModule, [])]); });\nexport { MatFormFieldModuleNgFactory as MatFormFieldModuleNgFactory };\nvar styles_MatFormField = [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform:perspective(100px);-ms-transform:none;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;height:1px;width:100%}.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.mat-form-field-underline .mat-form-field-ripple{position:absolute;top:0;left:0;width:100%;height:2px;transform-origin:50%;transform:scaleX(.5);visibility:hidden;opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field-invalid:not(.mat-focused) .mat-form-field-underline .mat-form-field-ripple{height:1px}.mat-focused .mat-form-field-underline .mat-form-field-ripple,.mat-form-field-invalid .mat-form-field-underline .mat-form-field-ripple{visibility:visible;opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}\", \".mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-autosize{resize:none}\"];\nvar RenderType_MatFormField = i0.ɵcrt({ encapsulation: 2, styles: styles_MatFormField, data: { \"animation\": [{ type: 7, name: \"transitionMessages\", definitions: [{ type: 0, name: \"enter\", styles: { type: 6, styles: { opacity: 1, transform: \"translateY(0%)\" }, offset: null }, options: undefined }, { type: 1, expr: \"void => enter\", animation: [{ type: 6, styles: { opacity: 0, transform: \"translateY(-100%)\" }, offset: null }, { type: 4, styles: null, timings: \"300ms cubic-bezier(0.55, 0, 0.55, 0.2)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatFormField as RenderType_MatFormField };\nfunction View_MatFormField_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"mat-input-prefix mat-form-field-prefix\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }\nfunction View_MatFormField_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), i0.ɵncd(null, 2), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._control.placeholder; _ck(_v, 2, 0, currVal_0); }); }\nfunction View_MatFormField_4(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 3), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatFormField_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00A0*\"]))], null, null); }\nfunction View_MatFormField_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, [[4, 0], [\"label\", 1]], null, 7, \"label\", [[\"class\", \"mat-form-field-label mat-input-placeholder mat-form-field-placeholder\"]], [[1, \"for\", 0], [1, \"aria-owns\", 0], [2, \"mat-empty\", null], [2, \"mat-form-field-empty\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null]], null, null, null, null)), i0.ɵdid(1, 16384, null, 0, i2.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_3)), i0.ɵdid(3, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_4)), i0.ɵdid(5, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_5)), i0.ɵdid(7, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_6 = _co._hasLabel(); _ck(_v, 1, 0, currVal_6); var currVal_7 = false; _ck(_v, 3, 0, currVal_7); var currVal_8 = true; _ck(_v, 5, 0, currVal_8); var currVal_9 = ((!_co.hideRequiredMarker && _co._control.required) && !_co._control.disabled); _ck(_v, 7, 0, currVal_9); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._control.id; var currVal_1 = _co._control.id; var currVal_2 = (_co._control.empty && !_co._shouldAlwaysFloat); var currVal_3 = (_co._control.empty && !_co._shouldAlwaysFloat); var currVal_4 = (_co.color == \"accent\"); var currVal_5 = (_co.color == \"warn\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }\nfunction View_MatFormField_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"mat-input-suffix mat-form-field-suffix\"]], null, null, null, null, null)), i0.ɵncd(null, 4)], null, null); }\nfunction View_MatFormField_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], [[24, \"@transitionMessages\", 0]], null, null, null, null)), i0.ɵncd(null, 5)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._subscriptAnimationState; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatFormField_9(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"mat-hint\"]], [[8, \"id\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._hintLabelId; _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.hintLabel; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_MatFormField_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"div\", [[\"class\", \"mat-input-hint-wrapper mat-form-field-hint-wrapper\"]], [[24, \"@transitionMessages\", 0]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_9)), i0.ɵdid(2, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵncd(null, 6), (_l()(), i0.ɵeld(4, 0, null, null, 0, \"div\", [[\"class\", \"mat-input-hint-spacer mat-form-field-hint-spacer\"]], null, null, null, null, null)), i0.ɵncd(null, 7)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.hintLabel; _ck(_v, 2, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._subscriptAnimationState; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_MatFormField_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { underlineRef: 0 }), i0.ɵqud(402653184, 2, { _connectionContainerRef: 0 }), i0.ɵqud(402653184, 3, { _inputContainerRef: 0 }), i0.ɵqud(671088640, 4, { _label: 0 }), (_l()(), i0.ɵeld(4, 0, null, null, 18, \"div\", [[\"class\", \"mat-input-wrapper mat-form-field-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, [[2, 0], [\"connectionContainer\", 1]], null, 9, \"div\", [[\"class\", \"mat-input-flex mat-form-field-flex\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = ((_co._control.onContainerClick && _co._control.onContainerClick($event)) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_1)), i0.ɵdid(7, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(8, 0, [[3, 0], [\"inputContainer\", 1]], null, 4, \"div\", [[\"class\", \"mat-input-infix mat-form-field-infix\"]], null, null, null, null, null)), i0.ɵncd(null, 1), (_l()(), i0.ɵeld(10, 0, null, null, 2, \"span\", [[\"class\", \"mat-form-field-label-wrapper mat-input-placeholder-wrapper mat-form-field-placeholder-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_2)), i0.ɵdid(12, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_6)), i0.ɵdid(14, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(15, 0, [[1, 0], [\"underline\", 1]], null, 1, \"div\", [[\"class\", \"mat-input-underline mat-form-field-underline\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(16, 0, null, null, 0, \"span\", [[\"class\", \"mat-input-ripple mat-form-field-ripple\"]], [[2, \"mat-accent\", null], [2, \"mat-warn\", null]], null, null, null, null)), (_l()(), i0.ɵeld(17, 0, null, null, 5, \"div\", [[\"class\", \"mat-input-subscript-wrapper mat-form-field-subscript-wrapper\"]], null, null, null, null, null)), i0.ɵdid(18, 16384, null, 0, i2.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_7)), i0.ɵdid(20, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_8)), i0.ɵdid(22, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._prefixChildren.length; _ck(_v, 7, 0, currVal_0); var currVal_1 = _co._hasFloatingLabel(); _ck(_v, 12, 0, currVal_1); var currVal_2 = _co._suffixChildren.length; _ck(_v, 14, 0, currVal_2); var currVal_5 = _co._getDisplayedMessages(); _ck(_v, 18, 0, currVal_5); var currVal_6 = \"error\"; _ck(_v, 20, 0, currVal_6); var currVal_7 = \"hint\"; _ck(_v, 22, 0, currVal_7); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = (_co.color == \"accent\"); var currVal_4 = (_co.color == \"warn\"); _ck(_v, 16, 0, currVal_3, currVal_4); }); }\nexport function View_MatFormField_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"mat-input-container\", [[\"class\", \"mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, View_MatFormField_0, RenderType_MatFormField)), i0.ɵdid(1, 7389184, null, 7, i1.MatFormField, [i0.ElementRef, i0.ChangeDetectorRef, [2, i4.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i0.ɵqud(335544320, 1, { _control: 0 }), i0.ɵqud(335544320, 2, { _placeholderChild: 0 }), i0.ɵqud(335544320, 3, { _labelChild: 0 }), i0.ɵqud(603979776, 4, { _errorChildren: 1 }), i0.ɵqud(603979776, 5, { _hintChildren: 1 }), i0.ɵqud(603979776, 6, { _prefixChildren: 1 }), i0.ɵqud(603979776, 7, { _suffixChildren: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._control.errorState; var currVal_1 = i0.ɵnov(_v, 1)._control.errorState; var currVal_2 = i0.ɵnov(_v, 1)._canLabelFloat; var currVal_3 = i0.ɵnov(_v, 1)._shouldLabelFloat(); var currVal_4 = i0.ɵnov(_v, 1)._hideControlPlaceholder(); var currVal_5 = i0.ɵnov(_v, 1)._control.disabled; var currVal_6 = i0.ɵnov(_v, 1)._control.focused; var currVal_7 = i0.ɵnov(_v, 1)._shouldForward(\"untouched\"); var currVal_8 = i0.ɵnov(_v, 1)._shouldForward(\"touched\"); var currVal_9 = i0.ɵnov(_v, 1)._shouldForward(\"pristine\"); var currVal_10 = i0.ɵnov(_v, 1)._shouldForward(\"dirty\"); var currVal_11 = i0.ɵnov(_v, 1)._shouldForward(\"valid\"); var currVal_12 = i0.ɵnov(_v, 1)._shouldForward(\"invalid\"); var currVal_13 = i0.ɵnov(_v, 1)._shouldForward(\"pending\"); _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13]); }); }\nvar MatFormFieldNgFactory = i0.ɵccf(\"mat-input-container, mat-form-field\", i1.MatFormField, View_MatFormField_Host_0, { color: \"color\", dividerColor: \"dividerColor\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatPlaceholder: \"floatPlaceholder\", floatLabel: \"floatLabel\" }, {}, [\"[matPrefix]\", \"*\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"]);\nexport { MatFormFieldNgFactory as MatFormFieldNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/form-field/typings/index.ngfactory.js.pre-build-optimizer.js","<div class=\"mat-input-wrapper mat-form-field-wrapper\"><div class=\"mat-input-flex mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><div class=\"mat-input-prefix mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-input-infix mat-form-field-infix\" #inputContainer><ng-content></ng-content><span class=\"mat-form-field-label-wrapper mat-input-placeholder-wrapper mat-form-field-placeholder-wrapper\"><label class=\"mat-form-field-label mat-input-placeholder mat-form-field-placeholder\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #label *ngIf=\"_hasFloatingLabel()\" [ngSwitch]=\"_hasLabel()\"><ng-container *ngSwitchCase=\"false\"><ng-content select=\"mat-placeholder\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content><span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&nbsp;*</span></label></span></div><div class=\"mat-input-suffix mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-input-underline mat-form-field-underline\" #underline><span class=\"mat-input-ripple mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><div class=\"mat-input-subscript-wrapper mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-input-hint-wrapper mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-input-hint-spacer mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_cdk_platform,_angular_common,_angular_core,_angular_material_form_field,rxjs_observable_fromEvent,rxjs_operators_auditTime,rxjs_operators_takeUntil,rxjs_Subject,tslib,tslib,_angular_cdk_coercion,_angular_forms,_angular_material_core PURE_IMPORTS_END */\nimport { Platform, PlatformModule, getSupportedInputTypes } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { Directive, ElementRef, Inject, InjectionToken, Input, NgModule, NgZone, Optional, Self } from '@angular/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { auditTime } from 'rxjs/operators/auditTime';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { Subject } from 'rxjs/Subject';\nimport { __extends } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nvar MatTextareaAutosize = /*@__PURE__*/ (function () {\n    function MatTextareaAutosize(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n    }\n    Object.defineProperty(MatTextareaAutosize.prototype, \"minRows\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._minRows; },\n        set: /**\n         * Minimum amount of rows in the textarea.\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._minRows = value;\n            this._setMinHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTextareaAutosize.prototype, \"maxRows\", {\n        get: /**\n         * Maximum amount of rows in the textarea.\n         * @return {?}\n         */ function () { return this._maxRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._maxRows = value;\n            this._setMaxHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // TODO(crisbeto): make the `_ngZone` a required param in the next major version.\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._setMinHeight = /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ minHeight = this.minRows && this._cachedLineHeight ?\n                this.minRows * this._cachedLineHeight + \"px\" : null;\n            if (minHeight) {\n                this._setTextareaStyle('minHeight', minHeight);\n            }\n        };\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._setMaxHeight = /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ maxHeight = this.maxRows && this._cachedLineHeight ?\n                this.maxRows * this._cachedLineHeight + \"px\" : null;\n            if (maxHeight) {\n                this._setTextareaStyle('maxHeight', maxHeight);\n            }\n        };\n    /**\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this._platform.isBrowser) {\n                this.resizeToFitContent();\n                if (this._ngZone) {\n                    this._ngZone.runOutsideAngular(function () {\n                        fromEvent(window, 'resize')\n                            .pipe(auditTime(16), takeUntil(_this._destroyed))\n                            .subscribe(function () { return _this.resizeToFitContent(true); });\n                    });\n                }\n            }\n        };\n    /**\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n    /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._setTextareaStyle = /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n        function (property, value) {\n            var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n            textarea.style[property] = value;\n        };\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._cacheTextareaLineHeight = /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n        function () {\n            if (this._cachedLineHeight) {\n                return;\n            }\n            var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n            // Use a clone element because we have to override some styles.\n            var /** @type {?} */ textareaClone = (textarea.cloneNode(false));\n            textareaClone.rows = 1;\n            // Use `position: absolute` so that this doesn't cause a browser layout and use\n            // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n            // would affect the height.\n            textareaClone.style.position = 'absolute';\n            textareaClone.style.visibility = 'hidden';\n            textareaClone.style.border = 'none';\n            textareaClone.style.padding = '0';\n            textareaClone.style.height = '';\n            textareaClone.style.minHeight = '';\n            textareaClone.style.maxHeight = '';\n            // In Firefox it happens that textarea elements are always bigger than the specified amount\n            // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n            // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n            // to hidden. This ensures that there is no invalid calculation of the line height.\n            // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n            textareaClone.style.overflow = 'hidden'; /** @type {?} */\n            ((textarea.parentNode)).appendChild(textareaClone);\n            this._cachedLineHeight = textareaClone.clientHeight; /** @type {?} */\n            ((textarea.parentNode)).removeChild(textareaClone);\n            // Min and max heights have to be re-calculated if the cached line height changes\n            this._setMinHeight();\n            this._setMaxHeight();\n        };\n    /**\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n        function () {\n            if (this._platform.isBrowser) {\n                this.resizeToFitContent();\n            }\n        };\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.resizeToFitContent = /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n        function (force) {\n            if (force === void 0) {\n                force = false;\n            }\n            this._cacheTextareaLineHeight();\n            // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n            // in checking the height of the textarea.\n            if (!this._cachedLineHeight) {\n                return;\n            }\n            var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n            var /** @type {?} */ value = textarea.value;\n            // Only resize of the value changed since these calculations can be expensive.\n            if (value === this._previousValue && !force) {\n                return;\n            }\n            var /** @type {?} */ placeholderText = textarea.placeholder;\n            // Reset the textarea height to auto in order to shrink back to its default size.\n            // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n            // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n            // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n            // need to be removed temporarily.\n            textarea.style.height = 'auto';\n            textarea.style.overflow = 'hidden';\n            textarea.placeholder = '';\n            // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n            textarea.style.height = textarea.scrollHeight + \"px\";\n            textarea.style.overflow = '';\n            textarea.placeholder = placeholderText;\n            this._previousValue = value;\n        };\n    return MatTextareaAutosize;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(\"Input type \\\"\" + type + \"\\\" isn't supported by matInput.\");\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nvar MAT_INPUT_VALUE_ACCESSOR = /*@__PURE__*/ new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nvar MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nvar nextUniqueId = 0;\n/**\n * \\@docs-private\n */\nvar MatInputBase = /*@__PURE__*/ (function () {\n    function MatInputBase(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n    return MatInputBase;\n}());\nvar _MatInputMixinBase = /*@__PURE__*/ mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nvar MatInput = /*@__PURE__*/ (function (_super) {\n    __extends(MatInput, _super);\n    function MatInput(_elementRef, _platform, /** @docs-private */ ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor) {\n        var _this = _super.call(this, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) || this;\n        _this._elementRef = _elementRef;\n        _this._platform = _platform;\n        _this.ngControl = ngControl;\n        _this._uid = \"mat-input-\" + nextUniqueId++;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        _this._isServer = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.controlType = 'mat-input';\n        _this._disabled = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.placeholder = '';\n        _this._required = false;\n        _this._type = 'text';\n        _this._readonly = false;\n        _this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(function (t) { return getSupportedInputTypes().has(t); });\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        _this._inputValueAccessor = inputValueAccessor || _this._elementRef.nativeElement;\n        _this._previousNativeValue = _this.value;\n        // Force setter to be called in case id was not specified.\n        // Force setter to be called in case id was not specified.\n        _this.id = _this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            _elementRef.nativeElement.addEventListener('keyup', function (event) {\n                var /** @type {?} */ el = (event.target);\n                if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                    // Note: Just setting `0, 0` doesn't fix the issue. Setting `1, 1` fixes it for the first\n                    // time that you type text and then hold delete. Toggling to `1, 1` and then back to\n                    // `0, 0` seems to completely fix it.\n                    el.setSelectionRange(1, 1);\n                    el.setSelectionRange(0, 0);\n                }\n            });\n        }\n        _this._isServer = !_this._platform.isBrowser;\n        return _this;\n    }\n    Object.defineProperty(MatInput.prototype, \"disabled\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */ function () {\n            if (this.ngControl && this.ngControl.disabled !== null) {\n                return this.ngControl.disabled;\n            }\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // Browsers may not fire the blur event if the input is disabled too quickly.\n            // Reset from here to ensure that the element doesn't become stuck.\n            if (this.focused) {\n                this.focused = false;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"id\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */ function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._id = value || this._uid; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"required\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */ function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"type\", {\n        get: /**\n         * Input type of the element.\n         * @return {?}\n         */ function () { return this._type; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n                this._elementRef.nativeElement.type = this._type;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"value\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */ function () { return this._inputValueAccessor.value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            if (value !== this.value) {\n                this._inputValueAccessor.value = value;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"readonly\", {\n        get: /**\n         * Whether the element is readonly.\n         * @return {?}\n         */ function () { return this._readonly; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) { this._readonly = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n        function () {\n            this.stateChanges.next();\n        };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this.stateChanges.complete();\n        };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n        function () {\n            if (this.ngControl) {\n                // We need to re-evaluate this on every change detection cycle, because there are some\n                // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n                // that whatever logic is in here has to be super lean or we risk destroying the performance.\n                this.updateErrorState();\n            }\n            // We need to dirty-check the native element's value, because there are some cases where\n            // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n            // updating the value using `emitEvent: false`).\n            this._dirtyCheckNativeValue();\n        };\n    /** Focuses the input. */\n    /**\n     * Focuses the input.\n     * @return {?}\n     */\n    MatInput.prototype.focus = /**\n     * Focuses the input.\n     * @return {?}\n     */\n        function () { this._elementRef.nativeElement.focus(); };\n    /** Callback for the cases where the focused state of the input changes. */\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    MatInput.prototype._focusChanged = /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n        function (isFocused) {\n            if (isFocused !== this.focused && !this.readonly) {\n                this.focused = isFocused;\n                this.stateChanges.next();\n            }\n        };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype._onInput = /**\n     * @return {?}\n     */\n        function () {\n            // This is a noop function and is used to let Angular know whenever the value changes.\n            // Angular will run a new change detection each time the `input` event has been dispatched.\n            // It's necessary that Angular recognizes the value change, because when floatingLabel\n            // is set to false and Angular forms aren't used, the placeholder won't recognize the\n            // value changes and will not disappear.\n            // Listening to the input event wouldn't be necessary when the input is using the\n            // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n        };\n    /** Does some manual dirty checking on the native input `value` property. */\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    MatInput.prototype._dirtyCheckNativeValue = /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ newValue = this.value;\n            if (this._previousNativeValue !== newValue) {\n                this._previousNativeValue = newValue;\n                this.stateChanges.next();\n            }\n        };\n    /** Make sure the input is a supported type. */\n    /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    MatInput.prototype._validateType = /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n        function () {\n            if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n                throw getMatInputUnsupportedTypeError(this._type);\n            }\n        };\n    /** Checks whether the input type is one of the types that are never empty. */\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    MatInput.prototype._isNeverEmpty = /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n        function () {\n            return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n        };\n    /** Checks whether the input is invalid based on the native validation. */\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    MatInput.prototype._isBadInput = /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n        function () {\n            // The `validity` property won't be present on platform-server.\n            var /** @type {?} */ validity = ((this._elementRef.nativeElement)).validity;\n            return validity && validity.badInput;\n        };\n    /** Determines if the component host is a textarea. If not recognizable it returns false. */\n    /**\n     * Determines if the component host is a textarea. If not recognizable it returns false.\n     * @return {?}\n     */\n    MatInput.prototype._isTextarea = /**\n     * Determines if the component host is a textarea. If not recognizable it returns false.\n     * @return {?}\n     */\n        function () {\n            var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n            // In Universal, we don't have access to `nodeName`, but the same can be achieved with `name`.\n            // Note that this shouldn't be necessary once Angular switches to an API that resembles the\n            // DOM closer.\n            var /** @type {?} */ nodeName = this._platform.isBrowser ? nativeElement.nodeName : nativeElement.name;\n            return nodeName ? nodeName.toLowerCase() === 'textarea' : false;\n        };\n    Object.defineProperty(MatInput.prototype, \"empty\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */ function () {\n            return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"shouldLabelFloat\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */ function () { return this.focused || !this.empty; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    MatInput.prototype.setDescribedByIds = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n        function (ids) { this._ariaDescribedby = ids.join(' '); };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatInput.prototype.onContainerClick = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n        function () { this.focus(); };\n    return MatInput;\n}(_MatInputMixinBase));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatInputModule = /*@__PURE__*/ (function () {\n    function MatInputModule() {\n    }\n    return MatInputModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatInputModule, MatTextareaAutosize, MatInputBase, _MatInputMixinBase, MatInput, getMatInputUnsupportedTypeError, MAT_INPUT_VALUE_ACCESSOR };\n//# sourceMappingURL=input.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/input.es5.js\n// module id = null\n// module chunks = ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-profile/user-profile.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./user-profile.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../node_modules/@angular/material/form-field/typings/index.ngfactory\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/cdk/platform\";\nimport * as i8 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/cdk/a11y\";\nimport * as i11 from \"./user-profile.component\";\nvar styles_UserProfileComponent = [i0.styles];\nvar RenderType_UserProfileComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UserProfileComponent, data: {} });\nexport { RenderType_UserProfileComponent as RenderType_UserProfileComponent };\nexport function View_UserProfileComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 266, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(2, 0, null, null, 263, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(4, 0, null, null, 260, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(6, 0, null, null, 228, \"div\", [[\"class\", \"col-md-8\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(8, 0, null, null, 225, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(10, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Edit Profile\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Complete your profile\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(19, 0, null, null, 213, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(21, 0, null, null, 210, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; if ((\"submit\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 23).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 23).onReset() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i1.ɵdid(22, 16384, null, 0, i2.ɵbf, [], null, null), i1.ɵdid(23, 4210688, null, 0, i2.NgForm, [[8, null], [8, null]], null, null), i1.ɵprd(2048, null, i2.ControlContainer, null, [i2.NgForm]), i1.ɵdid(25, 16384, null, 0, i2.NgControlStatusGroup, [i2.ControlContainer], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(27, 0, null, null, 55, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(29, 0, null, null, 16, \"div\", [[\"class\", \"col-md-5\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(31, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(32, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 1, { _control: 0 }), i1.ɵqud(335544320, 2, { _placeholderChild: 0 }), i1.ɵqud(335544320, 3, { _labelChild: 0 }), i1.ɵqud(603979776, 4, { _errorChildren: 1 }), i1.ɵqud(603979776, 5, { _hintChildren: 1 }), i1.ɵqud(603979776, 6, { _prefixChildren: 1 }), i1.ɵqud(603979776, 7, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                    \"])), (_l()(), i1.ɵeld(41, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"disabled\", \"\"], [\"matInput\", \"\"], [\"placeholder\", \"Company (disabled)\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 42)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 42)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 42)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(42, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { disabled: [0, \"disabled\"], placeholder: [1, \"placeholder\"] }, null), i1.ɵprd(2048, [[1, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(47, 0, null, null, 16, \"div\", [[\"class\", \"col-md-3\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(49, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(50, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 8, { _control: 0 }), i1.ɵqud(335544320, 9, { _placeholderChild: 0 }), i1.ɵqud(335544320, 10, { _labelChild: 0 }), i1.ɵqud(603979776, 11, { _errorChildren: 1 }), i1.ɵqud(603979776, 12, { _hintChildren: 1 }), i1.ɵqud(603979776, 13, { _prefixChildren: 1 }), i1.ɵqud(603979776, 14, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                    \"])), (_l()(), i1.ɵeld(59, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Username\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 60)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 60)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 60)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(60, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(2048, [[8, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(65, 0, null, null, 16, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(67, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(68, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 15, { _control: 0 }), i1.ɵqud(335544320, 16, { _placeholderChild: 0 }), i1.ɵqud(335544320, 17, { _labelChild: 0 }), i1.ɵqud(603979776, 18, { _errorChildren: 1 }), i1.ɵqud(603979776, 19, { _hintChildren: 1 }), i1.ɵqud(603979776, 20, { _prefixChildren: 1 }), i1.ɵqud(603979776, 21, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                    \"])), (_l()(), i1.ɵeld(77, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Email address\"], [\"type\", \"email\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 78)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 78)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 78)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(78, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[15, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(84, 0, null, null, 37, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(86, 0, null, null, 16, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(88, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(89, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 22, { _control: 0 }), i1.ɵqud(335544320, 23, { _placeholderChild: 0 }), i1.ɵqud(335544320, 24, { _labelChild: 0 }), i1.ɵqud(603979776, 25, { _errorChildren: 1 }), i1.ɵqud(603979776, 26, { _hintChildren: 1 }), i1.ɵqud(603979776, 27, { _prefixChildren: 1 }), i1.ɵqud(603979776, 28, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵeld(98, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Fist Name\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 99)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 99)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 99)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(99, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[22, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(104, 0, null, null, 16, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(106, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(107, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 29, { _control: 0 }), i1.ɵqud(335544320, 30, { _placeholderChild: 0 }), i1.ɵqud(335544320, 31, { _labelChild: 0 }), i1.ɵqud(603979776, 32, { _errorChildren: 1 }), i1.ɵqud(603979776, 33, { _hintChildren: 1 }), i1.ɵqud(603979776, 34, { _prefixChildren: 1 }), i1.ɵqud(603979776, 35, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵeld(116, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Last Name\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 117)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 117)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 117)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(117, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[29, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(123, 0, null, null, 19, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(125, 0, null, null, 16, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(127, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(128, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 36, { _control: 0 }), i1.ɵqud(335544320, 37, { _placeholderChild: 0 }), i1.ɵqud(335544320, 38, { _labelChild: 0 }), i1.ɵqud(603979776, 39, { _errorChildren: 1 }), i1.ɵqud(603979776, 40, { _hintChildren: 1 }), i1.ɵqud(603979776, 41, { _prefixChildren: 1 }), i1.ɵqud(603979776, 42, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵeld(137, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Adress\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 138)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 138)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 138)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(138, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[36, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(144, 0, null, null, 55, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(146, 0, null, null, 16, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(148, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(149, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 43, { _control: 0 }), i1.ɵqud(335544320, 44, { _placeholderChild: 0 }), i1.ɵqud(335544320, 45, { _labelChild: 0 }), i1.ɵqud(603979776, 46, { _errorChildren: 1 }), i1.ɵqud(603979776, 47, { _hintChildren: 1 }), i1.ɵqud(603979776, 48, { _prefixChildren: 1 }), i1.ɵqud(603979776, 49, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵeld(158, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"City\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 159)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 159)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 159)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(159, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[43, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(164, 0, null, null, 16, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(166, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(167, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 50, { _control: 0 }), i1.ɵqud(335544320, 51, { _placeholderChild: 0 }), i1.ɵqud(335544320, 52, { _labelChild: 0 }), i1.ɵqud(603979776, 53, { _errorChildren: 1 }), i1.ɵqud(603979776, 54, { _hintChildren: 1 }), i1.ɵqud(603979776, 55, { _prefixChildren: 1 }), i1.ɵqud(603979776, 56, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵeld(176, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Country\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 177)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 177)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 177)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(177, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[50, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(182, 0, null, null, 16, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(184, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(185, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 57, { _control: 0 }), i1.ɵqud(335544320, 58, { _placeholderChild: 0 }), i1.ɵqud(335544320, 59, { _labelChild: 0 }), i1.ɵqud(603979776, 60, { _errorChildren: 1 }), i1.ɵqud(603979776, 61, { _hintChildren: 1 }), i1.ɵqud(603979776, 62, { _prefixChildren: 1 }), i1.ɵqud(603979776, 63, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                  \"])), (_l()(), i1.ɵeld(194, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Postal Code\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 195)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 195)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 195)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(195, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[57, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(201, 0, null, null, 23, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(203, 0, null, null, 20, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(205, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"About Me\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(208, 0, null, null, 13, \"mat-form-field\", [[\"class\", \"example-full-width mat-input-container mat-form-field\"]], [[2, \"mat-input-invalid\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-focused\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(209, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS]], null, null), i1.ɵqud(335544320, 64, { _control: 0 }), i1.ɵqud(335544320, 65, { _placeholderChild: 0 }), i1.ɵqud(335544320, 66, { _labelChild: 0 }), i1.ɵqud(603979776, 67, { _errorChildren: 1 }), i1.ɵqud(603979776, 68, { _hintChildren: 1 }), i1.ɵqud(603979776, 69, { _prefixChildren: 1 }), i1.ɵqud(603979776, 70, { _suffixChildren: 1 }), (_l()(), i1.ɵted(-1, 1, [\"\\n                                   \"])), (_l()(), i1.ɵeld(218, 0, null, 1, 2, \"textarea\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [8, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [8, \"readOnly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 219)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 219)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 219)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(219, 933888, null, 0, i6.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null]], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(2048, [[64, 4]], i4.MatFormFieldControl, null, [i6.MatInput]), (_l()(), i1.ɵted(-1, 1, [\"\\n                                 \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(226, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger pull-right\"], [\"mat-raised-button\", \"\"], [\"type\", \"submit\"]], [[8, \"disabled\", 0]], null, null, i8.View_MatButton_0, i8.RenderType_MatButton)), i1.ɵdid(227, 180224, null, 0, i9.MatButton, [i1.ElementRef, i7.Platform, i10.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Update Profile\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(230, 0, null, null, 0, \"div\", [[\"class\", \"clearfix\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(236, 0, null, null, 27, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(238, 0, null, null, 24, \"div\", [[\"class\", \"card card-profile\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(240, 0, null, null, 6, \"div\", [[\"class\", \"card-avatar\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(242, 0, null, null, 3, \"a\", [[\"href\", \"#pablo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(244, 0, null, null, 0, \"img\", [[\"class\", \"img\"], [\"src\", \"/role/assets/img/faces/marc.jpg\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(248, 0, null, null, 13, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(250, 0, null, null, 1, \"h6\", [[\"class\", \"card-category text-gray\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"CEO / Co-Founder\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(253, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Alec Thompson\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(256, 0, null, null, 1, \"p\", [[\"class\", \"card-description\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens\\u2019 bed design but the back is...\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(259, 0, null, null, 1, \"a\", [[\"class\", \"btn btn-danger btn-round\"], [\"href\", \"#pablo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Follow\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], function (_ck, _v) { var currVal_30 = \"\"; var currVal_31 = \"Company (disabled)\"; _ck(_v, 42, 0, currVal_30, currVal_31); var currVal_55 = \"Username\"; _ck(_v, 60, 0, currVal_55); var currVal_79 = \"Email address\"; var currVal_80 = \"email\"; _ck(_v, 78, 0, currVal_79, currVal_80); var currVal_104 = \"Fist Name\"; var currVal_105 = \"text\"; _ck(_v, 99, 0, currVal_104, currVal_105); var currVal_129 = \"Last Name\"; var currVal_130 = \"text\"; _ck(_v, 117, 0, currVal_129, currVal_130); var currVal_154 = \"Adress\"; var currVal_155 = \"text\"; _ck(_v, 138, 0, currVal_154, currVal_155); var currVal_179 = \"City\"; var currVal_180 = \"text\"; _ck(_v, 159, 0, currVal_179, currVal_180); var currVal_204 = \"Country\"; var currVal_205 = \"text\"; _ck(_v, 177, 0, currVal_204, currVal_205); var currVal_229 = \"Postal Code\"; var currVal_230 = \"text\"; _ck(_v, 195, 0, currVal_229, currVal_230); var currVal_254 = \"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"; _ck(_v, 219, 0, currVal_254); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 25).ngClassUntouched; var currVal_1 = i1.ɵnov(_v, 25).ngClassTouched; var currVal_2 = i1.ɵnov(_v, 25).ngClassPristine; var currVal_3 = i1.ɵnov(_v, 25).ngClassDirty; var currVal_4 = i1.ɵnov(_v, 25).ngClassValid; var currVal_5 = i1.ɵnov(_v, 25).ngClassInvalid; var currVal_6 = i1.ɵnov(_v, 25).ngClassPending; _ck(_v, 21, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); var currVal_7 = i1.ɵnov(_v, 32)._control.errorState; var currVal_8 = i1.ɵnov(_v, 32)._control.errorState; var currVal_9 = i1.ɵnov(_v, 32)._canLabelFloat; var currVal_10 = i1.ɵnov(_v, 32)._shouldLabelFloat(); var currVal_11 = i1.ɵnov(_v, 32)._hideControlPlaceholder(); var currVal_12 = i1.ɵnov(_v, 32)._control.disabled; var currVal_13 = i1.ɵnov(_v, 32)._control.focused; var currVal_14 = i1.ɵnov(_v, 32)._shouldForward(\"untouched\"); var currVal_15 = i1.ɵnov(_v, 32)._shouldForward(\"touched\"); var currVal_16 = i1.ɵnov(_v, 32)._shouldForward(\"pristine\"); var currVal_17 = i1.ɵnov(_v, 32)._shouldForward(\"dirty\"); var currVal_18 = i1.ɵnov(_v, 32)._shouldForward(\"valid\"); var currVal_19 = i1.ɵnov(_v, 32)._shouldForward(\"invalid\"); var currVal_20 = i1.ɵnov(_v, 32)._shouldForward(\"pending\"); _ck(_v, 31, 1, [currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20]); var currVal_21 = i1.ɵnov(_v, 42)._isServer; var currVal_22 = i1.ɵnov(_v, 42).id; var currVal_23 = i1.ɵnov(_v, 42).placeholder; var currVal_24 = i1.ɵnov(_v, 42).disabled; var currVal_25 = i1.ɵnov(_v, 42).required; var currVal_26 = i1.ɵnov(_v, 42).readonly; var currVal_27 = (i1.ɵnov(_v, 42)._ariaDescribedby || null); var currVal_28 = i1.ɵnov(_v, 42).errorState; var currVal_29 = i1.ɵnov(_v, 42).required.toString(); _ck(_v, 41, 0, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29); var currVal_32 = i1.ɵnov(_v, 50)._control.errorState; var currVal_33 = i1.ɵnov(_v, 50)._control.errorState; var currVal_34 = i1.ɵnov(_v, 50)._canLabelFloat; var currVal_35 = i1.ɵnov(_v, 50)._shouldLabelFloat(); var currVal_36 = i1.ɵnov(_v, 50)._hideControlPlaceholder(); var currVal_37 = i1.ɵnov(_v, 50)._control.disabled; var currVal_38 = i1.ɵnov(_v, 50)._control.focused; var currVal_39 = i1.ɵnov(_v, 50)._shouldForward(\"untouched\"); var currVal_40 = i1.ɵnov(_v, 50)._shouldForward(\"touched\"); var currVal_41 = i1.ɵnov(_v, 50)._shouldForward(\"pristine\"); var currVal_42 = i1.ɵnov(_v, 50)._shouldForward(\"dirty\"); var currVal_43 = i1.ɵnov(_v, 50)._shouldForward(\"valid\"); var currVal_44 = i1.ɵnov(_v, 50)._shouldForward(\"invalid\"); var currVal_45 = i1.ɵnov(_v, 50)._shouldForward(\"pending\"); _ck(_v, 49, 1, [currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37, currVal_38, currVal_39, currVal_40, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45]); var currVal_46 = i1.ɵnov(_v, 60)._isServer; var currVal_47 = i1.ɵnov(_v, 60).id; var currVal_48 = i1.ɵnov(_v, 60).placeholder; var currVal_49 = i1.ɵnov(_v, 60).disabled; var currVal_50 = i1.ɵnov(_v, 60).required; var currVal_51 = i1.ɵnov(_v, 60).readonly; var currVal_52 = (i1.ɵnov(_v, 60)._ariaDescribedby || null); var currVal_53 = i1.ɵnov(_v, 60).errorState; var currVal_54 = i1.ɵnov(_v, 60).required.toString(); _ck(_v, 59, 0, currVal_46, currVal_47, currVal_48, currVal_49, currVal_50, currVal_51, currVal_52, currVal_53, currVal_54); var currVal_56 = i1.ɵnov(_v, 68)._control.errorState; var currVal_57 = i1.ɵnov(_v, 68)._control.errorState; var currVal_58 = i1.ɵnov(_v, 68)._canLabelFloat; var currVal_59 = i1.ɵnov(_v, 68)._shouldLabelFloat(); var currVal_60 = i1.ɵnov(_v, 68)._hideControlPlaceholder(); var currVal_61 = i1.ɵnov(_v, 68)._control.disabled; var currVal_62 = i1.ɵnov(_v, 68)._control.focused; var currVal_63 = i1.ɵnov(_v, 68)._shouldForward(\"untouched\"); var currVal_64 = i1.ɵnov(_v, 68)._shouldForward(\"touched\"); var currVal_65 = i1.ɵnov(_v, 68)._shouldForward(\"pristine\"); var currVal_66 = i1.ɵnov(_v, 68)._shouldForward(\"dirty\"); var currVal_67 = i1.ɵnov(_v, 68)._shouldForward(\"valid\"); var currVal_68 = i1.ɵnov(_v, 68)._shouldForward(\"invalid\"); var currVal_69 = i1.ɵnov(_v, 68)._shouldForward(\"pending\"); _ck(_v, 67, 1, [currVal_56, currVal_57, currVal_58, currVal_59, currVal_60, currVal_61, currVal_62, currVal_63, currVal_64, currVal_65, currVal_66, currVal_67, currVal_68, currVal_69]); var currVal_70 = i1.ɵnov(_v, 78)._isServer; var currVal_71 = i1.ɵnov(_v, 78).id; var currVal_72 = i1.ɵnov(_v, 78).placeholder; var currVal_73 = i1.ɵnov(_v, 78).disabled; var currVal_74 = i1.ɵnov(_v, 78).required; var currVal_75 = i1.ɵnov(_v, 78).readonly; var currVal_76 = (i1.ɵnov(_v, 78)._ariaDescribedby || null); var currVal_77 = i1.ɵnov(_v, 78).errorState; var currVal_78 = i1.ɵnov(_v, 78).required.toString(); _ck(_v, 77, 0, currVal_70, currVal_71, currVal_72, currVal_73, currVal_74, currVal_75, currVal_76, currVal_77, currVal_78); var currVal_81 = i1.ɵnov(_v, 89)._control.errorState; var currVal_82 = i1.ɵnov(_v, 89)._control.errorState; var currVal_83 = i1.ɵnov(_v, 89)._canLabelFloat; var currVal_84 = i1.ɵnov(_v, 89)._shouldLabelFloat(); var currVal_85 = i1.ɵnov(_v, 89)._hideControlPlaceholder(); var currVal_86 = i1.ɵnov(_v, 89)._control.disabled; var currVal_87 = i1.ɵnov(_v, 89)._control.focused; var currVal_88 = i1.ɵnov(_v, 89)._shouldForward(\"untouched\"); var currVal_89 = i1.ɵnov(_v, 89)._shouldForward(\"touched\"); var currVal_90 = i1.ɵnov(_v, 89)._shouldForward(\"pristine\"); var currVal_91 = i1.ɵnov(_v, 89)._shouldForward(\"dirty\"); var currVal_92 = i1.ɵnov(_v, 89)._shouldForward(\"valid\"); var currVal_93 = i1.ɵnov(_v, 89)._shouldForward(\"invalid\"); var currVal_94 = i1.ɵnov(_v, 89)._shouldForward(\"pending\"); _ck(_v, 88, 1, [currVal_81, currVal_82, currVal_83, currVal_84, currVal_85, currVal_86, currVal_87, currVal_88, currVal_89, currVal_90, currVal_91, currVal_92, currVal_93, currVal_94]); var currVal_95 = i1.ɵnov(_v, 99)._isServer; var currVal_96 = i1.ɵnov(_v, 99).id; var currVal_97 = i1.ɵnov(_v, 99).placeholder; var currVal_98 = i1.ɵnov(_v, 99).disabled; var currVal_99 = i1.ɵnov(_v, 99).required; var currVal_100 = i1.ɵnov(_v, 99).readonly; var currVal_101 = (i1.ɵnov(_v, 99)._ariaDescribedby || null); var currVal_102 = i1.ɵnov(_v, 99).errorState; var currVal_103 = i1.ɵnov(_v, 99).required.toString(); _ck(_v, 98, 0, currVal_95, currVal_96, currVal_97, currVal_98, currVal_99, currVal_100, currVal_101, currVal_102, currVal_103); var currVal_106 = i1.ɵnov(_v, 107)._control.errorState; var currVal_107 = i1.ɵnov(_v, 107)._control.errorState; var currVal_108 = i1.ɵnov(_v, 107)._canLabelFloat; var currVal_109 = i1.ɵnov(_v, 107)._shouldLabelFloat(); var currVal_110 = i1.ɵnov(_v, 107)._hideControlPlaceholder(); var currVal_111 = i1.ɵnov(_v, 107)._control.disabled; var currVal_112 = i1.ɵnov(_v, 107)._control.focused; var currVal_113 = i1.ɵnov(_v, 107)._shouldForward(\"untouched\"); var currVal_114 = i1.ɵnov(_v, 107)._shouldForward(\"touched\"); var currVal_115 = i1.ɵnov(_v, 107)._shouldForward(\"pristine\"); var currVal_116 = i1.ɵnov(_v, 107)._shouldForward(\"dirty\"); var currVal_117 = i1.ɵnov(_v, 107)._shouldForward(\"valid\"); var currVal_118 = i1.ɵnov(_v, 107)._shouldForward(\"invalid\"); var currVal_119 = i1.ɵnov(_v, 107)._shouldForward(\"pending\"); _ck(_v, 106, 1, [currVal_106, currVal_107, currVal_108, currVal_109, currVal_110, currVal_111, currVal_112, currVal_113, currVal_114, currVal_115, currVal_116, currVal_117, currVal_118, currVal_119]); var currVal_120 = i1.ɵnov(_v, 117)._isServer; var currVal_121 = i1.ɵnov(_v, 117).id; var currVal_122 = i1.ɵnov(_v, 117).placeholder; var currVal_123 = i1.ɵnov(_v, 117).disabled; var currVal_124 = i1.ɵnov(_v, 117).required; var currVal_125 = i1.ɵnov(_v, 117).readonly; var currVal_126 = (i1.ɵnov(_v, 117)._ariaDescribedby || null); var currVal_127 = i1.ɵnov(_v, 117).errorState; var currVal_128 = i1.ɵnov(_v, 117).required.toString(); _ck(_v, 116, 0, currVal_120, currVal_121, currVal_122, currVal_123, currVal_124, currVal_125, currVal_126, currVal_127, currVal_128); var currVal_131 = i1.ɵnov(_v, 128)._control.errorState; var currVal_132 = i1.ɵnov(_v, 128)._control.errorState; var currVal_133 = i1.ɵnov(_v, 128)._canLabelFloat; var currVal_134 = i1.ɵnov(_v, 128)._shouldLabelFloat(); var currVal_135 = i1.ɵnov(_v, 128)._hideControlPlaceholder(); var currVal_136 = i1.ɵnov(_v, 128)._control.disabled; var currVal_137 = i1.ɵnov(_v, 128)._control.focused; var currVal_138 = i1.ɵnov(_v, 128)._shouldForward(\"untouched\"); var currVal_139 = i1.ɵnov(_v, 128)._shouldForward(\"touched\"); var currVal_140 = i1.ɵnov(_v, 128)._shouldForward(\"pristine\"); var currVal_141 = i1.ɵnov(_v, 128)._shouldForward(\"dirty\"); var currVal_142 = i1.ɵnov(_v, 128)._shouldForward(\"valid\"); var currVal_143 = i1.ɵnov(_v, 128)._shouldForward(\"invalid\"); var currVal_144 = i1.ɵnov(_v, 128)._shouldForward(\"pending\"); _ck(_v, 127, 1, [currVal_131, currVal_132, currVal_133, currVal_134, currVal_135, currVal_136, currVal_137, currVal_138, currVal_139, currVal_140, currVal_141, currVal_142, currVal_143, currVal_144]); var currVal_145 = i1.ɵnov(_v, 138)._isServer; var currVal_146 = i1.ɵnov(_v, 138).id; var currVal_147 = i1.ɵnov(_v, 138).placeholder; var currVal_148 = i1.ɵnov(_v, 138).disabled; var currVal_149 = i1.ɵnov(_v, 138).required; var currVal_150 = i1.ɵnov(_v, 138).readonly; var currVal_151 = (i1.ɵnov(_v, 138)._ariaDescribedby || null); var currVal_152 = i1.ɵnov(_v, 138).errorState; var currVal_153 = i1.ɵnov(_v, 138).required.toString(); _ck(_v, 137, 0, currVal_145, currVal_146, currVal_147, currVal_148, currVal_149, currVal_150, currVal_151, currVal_152, currVal_153); var currVal_156 = i1.ɵnov(_v, 149)._control.errorState; var currVal_157 = i1.ɵnov(_v, 149)._control.errorState; var currVal_158 = i1.ɵnov(_v, 149)._canLabelFloat; var currVal_159 = i1.ɵnov(_v, 149)._shouldLabelFloat(); var currVal_160 = i1.ɵnov(_v, 149)._hideControlPlaceholder(); var currVal_161 = i1.ɵnov(_v, 149)._control.disabled; var currVal_162 = i1.ɵnov(_v, 149)._control.focused; var currVal_163 = i1.ɵnov(_v, 149)._shouldForward(\"untouched\"); var currVal_164 = i1.ɵnov(_v, 149)._shouldForward(\"touched\"); var currVal_165 = i1.ɵnov(_v, 149)._shouldForward(\"pristine\"); var currVal_166 = i1.ɵnov(_v, 149)._shouldForward(\"dirty\"); var currVal_167 = i1.ɵnov(_v, 149)._shouldForward(\"valid\"); var currVal_168 = i1.ɵnov(_v, 149)._shouldForward(\"invalid\"); var currVal_169 = i1.ɵnov(_v, 149)._shouldForward(\"pending\"); _ck(_v, 148, 1, [currVal_156, currVal_157, currVal_158, currVal_159, currVal_160, currVal_161, currVal_162, currVal_163, currVal_164, currVal_165, currVal_166, currVal_167, currVal_168, currVal_169]); var currVal_170 = i1.ɵnov(_v, 159)._isServer; var currVal_171 = i1.ɵnov(_v, 159).id; var currVal_172 = i1.ɵnov(_v, 159).placeholder; var currVal_173 = i1.ɵnov(_v, 159).disabled; var currVal_174 = i1.ɵnov(_v, 159).required; var currVal_175 = i1.ɵnov(_v, 159).readonly; var currVal_176 = (i1.ɵnov(_v, 159)._ariaDescribedby || null); var currVal_177 = i1.ɵnov(_v, 159).errorState; var currVal_178 = i1.ɵnov(_v, 159).required.toString(); _ck(_v, 158, 0, currVal_170, currVal_171, currVal_172, currVal_173, currVal_174, currVal_175, currVal_176, currVal_177, currVal_178); var currVal_181 = i1.ɵnov(_v, 167)._control.errorState; var currVal_182 = i1.ɵnov(_v, 167)._control.errorState; var currVal_183 = i1.ɵnov(_v, 167)._canLabelFloat; var currVal_184 = i1.ɵnov(_v, 167)._shouldLabelFloat(); var currVal_185 = i1.ɵnov(_v, 167)._hideControlPlaceholder(); var currVal_186 = i1.ɵnov(_v, 167)._control.disabled; var currVal_187 = i1.ɵnov(_v, 167)._control.focused; var currVal_188 = i1.ɵnov(_v, 167)._shouldForward(\"untouched\"); var currVal_189 = i1.ɵnov(_v, 167)._shouldForward(\"touched\"); var currVal_190 = i1.ɵnov(_v, 167)._shouldForward(\"pristine\"); var currVal_191 = i1.ɵnov(_v, 167)._shouldForward(\"dirty\"); var currVal_192 = i1.ɵnov(_v, 167)._shouldForward(\"valid\"); var currVal_193 = i1.ɵnov(_v, 167)._shouldForward(\"invalid\"); var currVal_194 = i1.ɵnov(_v, 167)._shouldForward(\"pending\"); _ck(_v, 166, 1, [currVal_181, currVal_182, currVal_183, currVal_184, currVal_185, currVal_186, currVal_187, currVal_188, currVal_189, currVal_190, currVal_191, currVal_192, currVal_193, currVal_194]); var currVal_195 = i1.ɵnov(_v, 177)._isServer; var currVal_196 = i1.ɵnov(_v, 177).id; var currVal_197 = i1.ɵnov(_v, 177).placeholder; var currVal_198 = i1.ɵnov(_v, 177).disabled; var currVal_199 = i1.ɵnov(_v, 177).required; var currVal_200 = i1.ɵnov(_v, 177).readonly; var currVal_201 = (i1.ɵnov(_v, 177)._ariaDescribedby || null); var currVal_202 = i1.ɵnov(_v, 177).errorState; var currVal_203 = i1.ɵnov(_v, 177).required.toString(); _ck(_v, 176, 0, currVal_195, currVal_196, currVal_197, currVal_198, currVal_199, currVal_200, currVal_201, currVal_202, currVal_203); var currVal_206 = i1.ɵnov(_v, 185)._control.errorState; var currVal_207 = i1.ɵnov(_v, 185)._control.errorState; var currVal_208 = i1.ɵnov(_v, 185)._canLabelFloat; var currVal_209 = i1.ɵnov(_v, 185)._shouldLabelFloat(); var currVal_210 = i1.ɵnov(_v, 185)._hideControlPlaceholder(); var currVal_211 = i1.ɵnov(_v, 185)._control.disabled; var currVal_212 = i1.ɵnov(_v, 185)._control.focused; var currVal_213 = i1.ɵnov(_v, 185)._shouldForward(\"untouched\"); var currVal_214 = i1.ɵnov(_v, 185)._shouldForward(\"touched\"); var currVal_215 = i1.ɵnov(_v, 185)._shouldForward(\"pristine\"); var currVal_216 = i1.ɵnov(_v, 185)._shouldForward(\"dirty\"); var currVal_217 = i1.ɵnov(_v, 185)._shouldForward(\"valid\"); var currVal_218 = i1.ɵnov(_v, 185)._shouldForward(\"invalid\"); var currVal_219 = i1.ɵnov(_v, 185)._shouldForward(\"pending\"); _ck(_v, 184, 1, [currVal_206, currVal_207, currVal_208, currVal_209, currVal_210, currVal_211, currVal_212, currVal_213, currVal_214, currVal_215, currVal_216, currVal_217, currVal_218, currVal_219]); var currVal_220 = i1.ɵnov(_v, 195)._isServer; var currVal_221 = i1.ɵnov(_v, 195).id; var currVal_222 = i1.ɵnov(_v, 195).placeholder; var currVal_223 = i1.ɵnov(_v, 195).disabled; var currVal_224 = i1.ɵnov(_v, 195).required; var currVal_225 = i1.ɵnov(_v, 195).readonly; var currVal_226 = (i1.ɵnov(_v, 195)._ariaDescribedby || null); var currVal_227 = i1.ɵnov(_v, 195).errorState; var currVal_228 = i1.ɵnov(_v, 195).required.toString(); _ck(_v, 194, 0, currVal_220, currVal_221, currVal_222, currVal_223, currVal_224, currVal_225, currVal_226, currVal_227, currVal_228); var currVal_231 = i1.ɵnov(_v, 209)._control.errorState; var currVal_232 = i1.ɵnov(_v, 209)._control.errorState; var currVal_233 = i1.ɵnov(_v, 209)._canLabelFloat; var currVal_234 = i1.ɵnov(_v, 209)._shouldLabelFloat(); var currVal_235 = i1.ɵnov(_v, 209)._hideControlPlaceholder(); var currVal_236 = i1.ɵnov(_v, 209)._control.disabled; var currVal_237 = i1.ɵnov(_v, 209)._control.focused; var currVal_238 = i1.ɵnov(_v, 209)._shouldForward(\"untouched\"); var currVal_239 = i1.ɵnov(_v, 209)._shouldForward(\"touched\"); var currVal_240 = i1.ɵnov(_v, 209)._shouldForward(\"pristine\"); var currVal_241 = i1.ɵnov(_v, 209)._shouldForward(\"dirty\"); var currVal_242 = i1.ɵnov(_v, 209)._shouldForward(\"valid\"); var currVal_243 = i1.ɵnov(_v, 209)._shouldForward(\"invalid\"); var currVal_244 = i1.ɵnov(_v, 209)._shouldForward(\"pending\"); _ck(_v, 208, 1, [currVal_231, currVal_232, currVal_233, currVal_234, currVal_235, currVal_236, currVal_237, currVal_238, currVal_239, currVal_240, currVal_241, currVal_242, currVal_243, currVal_244]); var currVal_245 = i1.ɵnov(_v, 219)._isServer; var currVal_246 = i1.ɵnov(_v, 219).id; var currVal_247 = i1.ɵnov(_v, 219).placeholder; var currVal_248 = i1.ɵnov(_v, 219).disabled; var currVal_249 = i1.ɵnov(_v, 219).required; var currVal_250 = i1.ɵnov(_v, 219).readonly; var currVal_251 = (i1.ɵnov(_v, 219)._ariaDescribedby || null); var currVal_252 = i1.ɵnov(_v, 219).errorState; var currVal_253 = i1.ɵnov(_v, 219).required.toString(); _ck(_v, 218, 0, currVal_245, currVal_246, currVal_247, currVal_248, currVal_249, currVal_250, currVal_251, currVal_252, currVal_253); var currVal_255 = (i1.ɵnov(_v, 227).disabled || null); _ck(_v, 226, 0, currVal_255); }); }\nexport function View_UserProfileComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-user-profile\", [], null, null, null, View_UserProfileComponent_0, RenderType_UserProfileComponent)), i1.ɵdid(1, 114688, null, 0, i11.UserProfileComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UserProfileComponentNgFactory = i1.ɵccf(\"app-user-profile\", i11.UserProfileComponent, View_UserProfileComponent_Host_0, {}, {}, []);\nexport { UserProfileComponentNgFactory as UserProfileComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-profile/user-profile.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-profile/user-profile.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-md-8\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-danger\">\n                      <h4 class=\"card-title\">Edit Profile</h4>\n                      <p class=\"card-category\">Complete your profile</p>\n                  </div>\n                  <div class=\"card-body\">\n                      <form>\n                          <div class=\"row\">\n                              <div class=\"col-md-5\">\n                                <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Company (disabled)\" disabled>\n                                  </mat-form-field>\n                              </div>\n                              <div class=\"col-md-3\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Username\">\n                                  </mat-form-field>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Email address\" type=\"email\">\n                                  </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-6\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Fist Name\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-md-6\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Last Name\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-12\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Adress\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"City\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-md-4\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Country\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-md-4\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Postal Code\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-12\">\n                                <label>About Me</label>\n                                <mat-form-field class=\"example-full-width\">\n                                   <textarea matInput placeholder=\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"></textarea>\n                                 </mat-form-field>\n                                  <!-- <div class=\"form-group\">\n\n                                      <div class=\"form-group\">\n                                          <label class=\"bmd-label-floating\"> Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.</label>\n                                          <textarea class=\"form-control\" rows=\"5\"></textarea>\n                                      </div>\n                                  </div> -->\n                              </div>\n                          </div>\n                          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">Update Profile</button>\n                          <div class=\"clearfix\"></div>\n                      </form>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-4\">\n              <div class=\"card card-profile\">\n                  <div class=\"card-avatar\">\n                      <a href=\"#pablo\">\n                          <img class=\"img\" src=\"/role/assets/img/faces/marc.jpg\" />\n                      </a>\n                  </div>\n                  <div class=\"card-body\">\n                      <h6 class=\"card-category text-gray\">CEO / Co-Founder</h6>\n                      <h4 class=\"card-title\">Alec Thompson</h4>\n                      <p class=\"card-description\">\n                          Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...\n                      </p>\n                      <a href=\"#pablo\" class=\"btn btn-danger btn-round\">Follow</a>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-profile/user-profile.component.html","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-list',\n  templateUrl: './table-list.component.html',\n  styleUrls: ['./table-list.component.css']\n})\nexport class TableListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/table-list/table-list.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./table-list.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./table-list.component\";\nvar styles_TableListComponent = [i0.styles];\nvar RenderType_TableListComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_TableListComponent, data: {} });\nexport { RenderType_TableListComponent as RenderType_TableListComponent };\nexport function View_TableListComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 313, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(2, 0, null, null, 310, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(4, 0, null, null, 307, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(6, 0, null, null, 151, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(8, 0, null, null, 148, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(10, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"h4\", [[\"class\", \"card-title \"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Simple Table\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Here is a subtitle for this table\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(19, 0, null, null, 136, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(21, 0, null, null, 133, \"div\", [[\"class\", \"table-responsive\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(23, 0, null, null, 130, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(25, 0, null, null, 16, \"thead\", [[\"class\", \" text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(27, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      ID\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(30, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      Name\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(33, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      Country\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(36, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      City\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(39, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      Salary\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(43, 0, null, null, 109, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(45, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(47, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          1\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(50, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Dakota Rice\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(53, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Niger\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(56, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Oud-Turnhout\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(59, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $36,738\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(63, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(65, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          2\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(68, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Minerva Hooper\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(71, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Cura\\u00E7ao\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(74, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Sinaai-Waas\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(77, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $23,789\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(81, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(83, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          3\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(86, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Sage Rodriguez\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(89, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Netherlands\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(92, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Baileux\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(95, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $56,142\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(99, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(101, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          4\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(104, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Philip Chaney\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(107, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Korea, South\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(110, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Overland Park\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(113, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $38,735\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(117, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(119, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          5\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(122, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Doris Greene\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(125, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Malawi\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(128, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Feldkirchen in K\\u00E4rnten\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(131, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $63,542\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(135, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(137, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          6\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(140, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Mason Porter\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(143, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Chile\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(146, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Gloucester\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(149, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $78,615\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(159, 0, null, null, 151, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(161, 0, null, null, 148, \"div\", [[\"class\", \"card card-plain\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(163, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(165, 0, null, null, 1, \"h4\", [[\"class\", \"card-title mt-0\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Table on Plain Background\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(168, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Here is a subtitle for this table\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(172, 0, null, null, 136, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(174, 0, null, null, 133, \"div\", [[\"class\", \"table-responsive\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(176, 0, null, null, 130, \"table\", [[\"class\", \"table table-hover\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(178, 0, null, null, 16, \"thead\", [[\"class\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(180, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      ID\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(183, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      Name\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(186, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      Country\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(189, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      City\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(192, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      Salary\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(196, 0, null, null, 109, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(198, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(200, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          1\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(203, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Dakota Rice\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(206, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Niger\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(209, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Oud-Turnhout\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(212, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $36,738\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(216, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(218, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          2\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(221, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Minerva Hooper\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(224, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Cura\\u00E7ao\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(227, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Sinaai-Waas\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(230, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $23,789\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(234, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(236, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          3\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(239, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Sage Rodriguez\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(242, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Netherlands\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(245, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Baileux\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(248, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $56,142\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(252, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(254, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          4\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(257, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Philip Chaney\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(260, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Korea, South\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(263, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Overland Park\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(266, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $38,735\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(270, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(272, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          5\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(275, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Doris Greene\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(278, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Malawi\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(281, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Feldkirchen in K\\u00E4rnten\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(284, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $63,542\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(288, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(290, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          6\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(293, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Mason Porter\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(296, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Chile\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(299, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          Gloucester\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                      \"])), (_l()(), i1.ɵeld(302, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                          $78,615\\n                                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], null, null); }\nexport function View_TableListComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-table-list\", [], null, null, null, View_TableListComponent_0, RenderType_TableListComponent)), i1.ɵdid(1, 114688, null, 0, i2.TableListComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableListComponentNgFactory = i1.ɵccf(\"app-table-list\", i2.TableListComponent, View_TableListComponent_Host_0, {}, {}, []);\nexport { TableListComponentNgFactory as TableListComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/table-list/table-list.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/table-list/table-list.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-md-12\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-danger\">\n                      <h4 class=\"card-title \">Simple Table</h4>\n                      <p class=\"card-category\"> Here is a subtitle for this table</p>\n                  </div>\n                  <div class=\"card-body\">\n                      <div class=\"table-responsive\">\n                          <table class=\"table\">\n                              <thead class=\" text-primary\">\n                                  <th>\n                                      ID\n                                  </th>\n                                  <th>\n                                      Name\n                                  </th>\n                                  <th>\n                                      Country\n                                  </th>\n                                  <th>\n                                      City\n                                  </th>\n                                  <th>\n                                      Salary\n                                  </th>\n                              </thead>\n                              <tbody>\n                                  <tr>\n                                      <td>\n                                          1\n                                      </td>\n                                      <td>\n                                          Dakota Rice\n                                      </td>\n                                      <td>\n                                          Niger\n                                      </td>\n                                      <td>\n                                          Oud-Turnhout\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $36,738\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          2\n                                      </td>\n                                      <td>\n                                          Minerva Hooper\n                                      </td>\n                                      <td>\n                                          Curaçao\n                                      </td>\n                                      <td>\n                                          Sinaai-Waas\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $23,789\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          3\n                                      </td>\n                                      <td>\n                                          Sage Rodriguez\n                                      </td>\n                                      <td>\n                                          Netherlands\n                                      </td>\n                                      <td>\n                                          Baileux\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $56,142\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          4\n                                      </td>\n                                      <td>\n                                          Philip Chaney\n                                      </td>\n                                      <td>\n                                          Korea, South\n                                      </td>\n                                      <td>\n                                          Overland Park\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $38,735\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          5\n                                      </td>\n                                      <td>\n                                          Doris Greene\n                                      </td>\n                                      <td>\n                                          Malawi\n                                      </td>\n                                      <td>\n                                          Feldkirchen in Kärnten\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $63,542\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          6\n                                      </td>\n                                      <td>\n                                          Mason Porter\n                                      </td>\n                                      <td>\n                                          Chile\n                                      </td>\n                                      <td>\n                                          Gloucester\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $78,615\n                                      </td>\n                                  </tr>\n                              </tbody>\n                          </table>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-12\">\n              <div class=\"card card-plain\">\n                  <div class=\"card-header card-header-danger\">\n                      <h4 class=\"card-title mt-0\"> Table on Plain Background</h4>\n                      <p class=\"card-category\"> Here is a subtitle for this table</p>\n                  </div>\n                  <div class=\"card-body\">\n                      <div class=\"table-responsive\">\n                          <table class=\"table table-hover\">\n                              <thead class=\"\">\n                                  <th>\n                                      ID\n                                  </th>\n                                  <th>\n                                      Name\n                                  </th>\n                                  <th>\n                                      Country\n                                  </th>\n                                  <th>\n                                      City\n                                  </th>\n                                  <th>\n                                      Salary\n                                  </th>\n                              </thead>\n                              <tbody>\n                                  <tr>\n                                      <td>\n                                          1\n                                      </td>\n                                      <td>\n                                          Dakota Rice\n                                      </td>\n                                      <td>\n                                          Niger\n                                      </td>\n                                      <td>\n                                          Oud-Turnhout\n                                      </td>\n                                      <td>\n                                          $36,738\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          2\n                                      </td>\n                                      <td>\n                                          Minerva Hooper\n                                      </td>\n                                      <td>\n                                          Curaçao\n                                      </td>\n                                      <td>\n                                          Sinaai-Waas\n                                      </td>\n                                      <td>\n                                          $23,789\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          3\n                                      </td>\n                                      <td>\n                                          Sage Rodriguez\n                                      </td>\n                                      <td>\n                                          Netherlands\n                                      </td>\n                                      <td>\n                                          Baileux\n                                      </td>\n                                      <td>\n                                          $56,142\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          4\n                                      </td>\n                                      <td>\n                                          Philip Chaney\n                                      </td>\n                                      <td>\n                                          Korea, South\n                                      </td>\n                                      <td>\n                                          Overland Park\n                                      </td>\n                                      <td>\n                                          $38,735\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          5\n                                      </td>\n                                      <td>\n                                          Doris Greene\n                                      </td>\n                                      <td>\n                                          Malawi\n                                      </td>\n                                      <td>\n                                          Feldkirchen in Kärnten\n                                      </td>\n                                      <td>\n                                          $63,542\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          6\n                                      </td>\n                                      <td>\n                                          Mason Porter\n                                      </td>\n                                      <td>\n                                          Chile\n                                      </td>\n                                      <td>\n                                          Gloucester\n                                      </td>\n                                      <td>\n                                          $78,615\n                                      </td>\n                                  </tr>\n                              </tbody>\n                          </table>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/table-list/table-list.component.html","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-typography',\n  templateUrl: './typography.component.html',\n  styleUrls: ['./typography.component.css']\n})\nexport class TypographyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/typography/typography.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./typography.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./typography.component\";\nvar styles_TypographyComponent = [i0.styles];\nvar RenderType_TypographyComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_TypographyComponent, data: {} });\nexport { RenderType_TypographyComponent as RenderType_TypographyComponent };\nexport function View_TypographyComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 177, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(2, 0, null, null, 174, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n    \"])), (_l()(), i1.ɵeld(4, 0, null, null, 171, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵeld(6, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Dashboard Heading\"])), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Created using Roboto Font Family\"])), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵeld(15, 0, null, null, 159, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵeld(17, 0, null, null, 156, \"div\", [[\"id\", \"typography\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵeld(19, 0, null, null, 4, \"div\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(21, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Typography\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵeld(25, 0, null, null, 147, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(27, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(29, 0, null, null, 4, \"h1\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(31, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 1\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(36, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(38, 0, null, null, 4, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(40, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 2\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(45, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(47, 0, null, null, 4, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(49, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 3\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(54, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(56, 0, null, null, 4, \"h4\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(58, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 4\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(63, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(65, 0, null, null, 4, \"h5\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(67, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 5\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(72, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(74, 0, null, null, 4, \"h6\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(76, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 6\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(81, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(83, 0, null, null, 4, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(85, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Paragraph\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that\\u2019s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(90, 0, null, null, 13, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(92, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Quote\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(95, 0, null, null, 7, \"blockquote\", [[\"class\", \"blockquote\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(97, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that\\u2019s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.\\n                            \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(100, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                Kanye West, Musician\\n                            \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(105, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(107, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Muted Text\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(110, 0, null, null, 1, \"p\", [[\"class\", \"text-muted\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\\n                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(114, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(116, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Primary Text\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(119, 0, null, null, 1, \"p\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(123, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(125, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Info Text\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(128, 0, null, null, 1, \"p\", [[\"class\", \"text-info\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(132, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(134, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Success Text\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(137, 0, null, null, 1, \"p\", [[\"class\", \"text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(141, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(143, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Warning Text\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(146, 0, null, null, 1, \"p\", [[\"class\", \"text-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\\n                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(150, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(152, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Danger Text\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(155, 0, null, null, 1, \"p\", [[\"class\", \"text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(159, 0, null, null, 12, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(161, 0, null, null, 9, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(163, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Small Tag\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                            Header with small subtitle\\n                            \"])), (_l()(), i1.ɵeld(166, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(168, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Use \\\"small\\\" tag for the headers\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], null, null); }\nexport function View_TypographyComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-typography\", [], null, null, null, View_TypographyComponent_0, RenderType_TypographyComponent)), i1.ɵdid(1, 114688, null, 0, i2.TypographyComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TypographyComponentNgFactory = i1.ɵccf(\"app-typography\", i2.TypographyComponent, View_TypographyComponent_Host_0, {}, {}, []);\nexport { TypographyComponentNgFactory as TypographyComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/typography/typography.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/typography/typography.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header card-header-danger\">\n            <h4 class=\"card-title\">Material Dashboard Heading</h4>\n            <p class=\"card-category\">Created using Roboto Font Family</p>\n        </div>\n        <div class=\"card-body\">\n            <div id=\"typography\">\n                <div class=\"card-title\">\n                    <h2>Typography</h2>\n                </div>\n                <div class=\"row\">\n                    <div class=\"tim-typo\">\n                        <h1>\n                            <span class=\"tim-note\">Header 1</span>The Life of Material Dashboard </h1>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h2>\n                            <span class=\"tim-note\">Header 2</span>The Life of Material Dashboard</h2>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h3>\n                            <span class=\"tim-note\">Header 3</span>The Life of Material Dashboard</h3>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h4>\n                            <span class=\"tim-note\">Header 4</span>The Life of Material Dashboard</h4>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h5>\n                            <span class=\"tim-note\">Header 5</span>The Life of Material Dashboard</h5>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h6>\n                            <span class=\"tim-note\">Header 6</span>The Life of Material Dashboard</h6>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <p>\n                            <span class=\"tim-note\">Paragraph</span>\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.</p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Quote</span>\n                        <blockquote class=\"blockquote\">\n                            <p>\n                                I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.\n                            </p>\n                            <small>\n                                Kanye West, Musician\n                            </small>\n                        </blockquote>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Muted Text</span>\n                        <p class=\"text-muted\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\n                        </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Primary Text</span>\n                        <p class=\"text-primary\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Info Text</span>\n                        <p class=\"text-info\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Success Text</span>\n                        <p class=\"text-success\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Warning Text</span>\n                        <p class=\"text-warning\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\n                        </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Danger Text</span>\n                        <p class=\"text-danger\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h2>\n                            <span class=\"tim-note\">Small Tag</span>\n                            Header with small subtitle\n                            <br>\n                            <small>Use \"small\" tag for the headers</small>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/typography/typography.component.html","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icons',\n  templateUrl: './icons.component.html',\n  styleUrls: ['./icons.component.css']\n})\nexport class IconsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/icons/icons.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./icons.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./icons.component\";\nvar styles_IconsComponent = [i0.styles];\nvar RenderType_IconsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_IconsComponent, data: {} });\nexport { RenderType_IconsComponent as RenderType_IconsComponent };\nexport function View_IconsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵeld(1, 0, null, null, 46, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(3, 0, null, null, 43, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(5, 0, null, null, 40, \"div\", [[\"class\", \"card card-plain\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(7, 0, null, null, 10, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Design Icons\"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(12, 0, null, null, 4, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Handcrafted by our friends from\\n                  \"])), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"a\", [[\"href\", \"https://design.google.com/icons/\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Google\"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(19, 0, null, null, 25, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(21, 0, null, null, 22, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(23, 0, null, null, 19, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(25, 0, null, null, 7, \"div\", [[\"class\", \"iframe-container d-none d-lg-block\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(27, 0, null, null, 4, \"iframe\", [[\"src\", \"https://design.google.com/icons/\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(29, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Your browser does not support iframes.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(34, 0, null, null, 7, \"div\", [[\"class\", \"col-md-12 d-none d-sm-block d-md-block d-lg-none d-block d-sm-none text-center ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(36, 0, null, null, 4, \"h5\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"The icons are visible on Desktop mode inside an iframe. Since the iframe is not working on Mobile and Tablets please visit the icons on their original page on Google. Check the\\n                              \"])), (_l()(), i1.ɵeld(38, 0, null, null, 1, \"a\", [[\"href\", \"https://design.google.com/icons/\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Icons\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], null, null); }\nexport function View_IconsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-icons\", [], null, null, null, View_IconsComponent_0, RenderType_IconsComponent)), i1.ɵdid(1, 114688, null, 0, i2.IconsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar IconsComponentNgFactory = i1.ɵccf(\"app-icons\", i2.IconsComponent, View_IconsComponent_Host_0, {}, {}, []);\nexport { IconsComponentNgFactory as IconsComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/icons/icons.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/icons/icons.component.css.shim.ngstyle.js.pre-build-optimizer.js","\n<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"card card-plain\">\n          <div class=\"card-header card-header-danger\">\n              <h4 class=\"card-title\">Material Design Icons</h4>\n              <p class=\"card-category\">Handcrafted by our friends from\n                  <a target=\"_blank\" href=\"https://design.google.com/icons/\">Google</a>\n              </p>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <div class=\"card-body\">\n                      <div class=\"iframe-container d-none d-lg-block\">\n                          <iframe src=\"https://design.google.com/icons/\">\n                              <p>Your browser does not support iframes.</p>\n                          </iframe>\n                      </div>\n                      <div class=\"col-md-12 d-none d-sm-block d-md-block d-lg-none d-block d-sm-none text-center ml-auto mr-auto\">\n                          <h5>The icons are visible on Desktop mode inside an iframe. Since the iframe is not working on Mobile and Tablets please visit the icons on their original page on Google. Check the\n                              <a href=\"https://design.google.com/icons/\" target=\"_blank\">Material Icons</a>\n                          </h5>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/icons/icons.component.html","import { Component, OnInit } from '@angular/core';\n\ndeclare const google: any;\n\ninterface Marker {\nlat: number;\nlng: number;\nlabel?: string;\ndraggable?: boolean;\n}\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.component.html',\n  styleUrls: ['./maps.component.css']\n})\nexport class MapsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n    var myLatlng = new google.maps.LatLng(40.748817, -73.985428);\n    var mapOptions = {\n        zoom: 13,\n        center: myLatlng,\n        scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n        styles: [{\n            \"featureType\": \"water\",\n            \"stylers\": [{\n                \"saturation\": 43\n            }, {\n                \"lightness\": -11\n            }, {\n                \"hue\": \"#0088ff\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"hue\": \"#ff0000\"\n            }, {\n                \"saturation\": -100\n            }, {\n                \"lightness\": 99\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.stroke\",\n            \"stylers\": [{\n                \"color\": \"#808080\"\n            }, {\n                \"lightness\": 54\n            }]\n        }, {\n            \"featureType\": \"landscape.man_made\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"color\": \"#ece2d9\"\n            }]\n        }, {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"color\": \"#ccdca1\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n                \"color\": \"#767676\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{\n                \"color\": \"#ffffff\"\n            }]\n        }, {\n            \"featureType\": \"poi\",\n            \"stylers\": [{\n                \"visibility\": \"off\"\n            }]\n        }, {\n            \"featureType\": \"landscape.natural\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }, {\n                \"color\": \"#b8cb93\"\n            }]\n        }, {\n            \"featureType\": \"poi.park\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.sports_complex\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.medical\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.business\",\n            \"stylers\": [{\n                \"visibility\": \"simplified\"\n            }]\n        }]\n\n    };\n    var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n\n    var marker = new google.maps.Marker({\n        position: myLatlng,\n        title: \"Hello World!\"\n    });\n\n    // To add the marker to the map, call setMap();\n    marker.setMap(map);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/maps/maps.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./maps.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./maps.component\";\nvar styles_MapsComponent = [i0.styles];\nvar RenderType_MapsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MapsComponent, data: {} });\nexport { RenderType_MapsComponent as RenderType_MapsComponent };\nexport function View_MapsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 0, \"div\", [[\"id\", \"map\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], null, null); }\nexport function View_MapsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-maps\", [], null, null, null, View_MapsComponent_0, RenderType_MapsComponent)), i1.ɵdid(1, 114688, null, 0, i2.MapsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MapsComponentNgFactory = i1.ɵccf(\"app-maps\", i2.MapsComponent, View_MapsComponent_Host_0, {}, {}, []);\nexport { MapsComponentNgFactory as MapsComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/maps/maps.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/maps/maps.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div id=\"map\"></div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/maps/maps.component.html","import { Component, OnInit } from '@angular/core';\ndeclare var $: any;\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n  showNotification(from, align){\n      const type = ['','info','success','warning','danger'];\n\n      const color = Math.floor((Math.random() * 4) + 1);\n\n      $.notify({\n          icon: \"notifications\",\n          message: \"Welcome to <b>Material Dashboard</b> - a beautiful freebie for every web developer.\"\n\n      },{\n          type: type[color],\n          timer: 4000,\n          placement: {\n              from: from,\n              align: align\n          },\n          template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n            '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n            '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n            '<span data-notify=\"title\">{1}</span> ' +\n            '<span data-notify=\"message\">{2}</span>' +\n            '<div class=\"progress\" data-notify=\"progressbar\">' +\n              '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n            '</div>' +\n            '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n          '</div>'\n      });\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notifications/notifications.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./notifications.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/cdk/a11y\";\nimport * as i6 from \"./notifications.component\";\nvar styles_NotificationsComponent = [i0.styles];\nvar RenderType_NotificationsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_NotificationsComponent, data: {} });\nexport { RenderType_NotificationsComponent as RenderType_NotificationsComponent };\nexport function View_NotificationsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 249, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(2, 0, null, null, 246, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(4, 0, null, null, 243, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(6, 0, null, null, 13, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Notifications\"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(11, 0, null, null, 7, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Handcrafted by our friend\\n                  \"])), (_l()(), i1.ɵeld(13, 0, null, null, 1, \"a\", [[\"href\", \"https://github.com/mouse0270\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Robert McIntosh\"])), (_l()(), i1.ɵted(-1, null, [\". Please checkout the\\n                  \"])), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"a\", [[\"href\", \"http://bootstrap-notify.remabledesigns.com/\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"full documentation.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(21, 0, null, null, 147, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(23, 0, null, null, 144, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(25, 0, null, null, 55, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(27, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Notifications Style\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(30, 0, null, null, 4, \"div\", [[\"class\", \"alert alert-info\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(32, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a plain notification\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(36, 0, null, null, 11, \"div\", [[\"class\", \"alert alert-info\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(38, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(39, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(41, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(45, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a notification with close button.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(49, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-info alert-with-icon\"], [\"data-notify\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(51, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"], [\"data-notify\", \"icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"add_alert\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(54, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(55, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(57, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(61, 0, null, null, 1, \"span\", [[\"data-notify\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a notification with close button and icon.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(65, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-info alert-with-icon\"], [\"data-notify\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(67, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"], [\"data-notify\", \"icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"add_alert\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(70, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(71, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(73, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(77, 0, null, null, 1, \"span\", [[\"data-notify\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(82, 0, null, null, 84, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(84, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Notification states\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(87, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-info\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(89, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(90, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(92, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(96, 0, null, null, 4, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(98, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Info - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-info\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(103, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(105, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(106, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(108, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(112, 0, null, null, 4, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(114, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Success - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-success\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(119, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(121, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(122, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(124, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(128, 0, null, null, 4, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(130, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Warning - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-warning\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(135, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(137, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(138, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(140, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(144, 0, null, null, 4, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(146, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Danger - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-danger\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(151, 0, null, null, 14, \"div\", [[\"class\", \"alert alert-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(153, 0, null, null, 5, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(154, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"\\n                              \"])), (_l()(), i1.ɵeld(156, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵted(-1, 0, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(160, 0, null, null, 4, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(162, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Primary - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-primary\\\"\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵeld(170, 0, null, null, 76, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(172, 0, null, null, 73, \"div\", [[\"class\", \"places-buttons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(174, 0, null, null, 10, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(176, 0, null, null, 7, \"div\", [[\"class\", \"col-md-6 ml-auto mr-auto text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(178, 0, null, null, 4, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              Notifications Places\\n                              \"])), (_l()(), i1.ɵeld(180, 0, null, null, 1, \"p\", [[\"class\", \"category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Click to view notifications\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(186, 0, null, null, 28, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(188, 0, null, null, 25, \"div\", [[\"class\", \"col-lg-8 col-md-10 ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(190, 0, null, null, 22, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(192, 0, null, null, 5, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(194, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"top\", \"left\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(195, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Top Left\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(199, 0, null, null, 5, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(201, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"top\", \"center\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(202, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Top Center\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(206, 0, null, null, 5, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(208, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"top\", \"right\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(209, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Top Right\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵeld(216, 0, null, null, 28, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵeld(218, 0, null, null, 25, \"div\", [[\"class\", \"col-lg-8 col-md-10 ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵeld(220, 0, null, null, 22, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(222, 0, null, null, 5, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(224, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"bottom\", \"left\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(225, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Bottom Left\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(229, 0, null, null, 5, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(231, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"bottom\", \"center\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(232, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Bottom Center\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵeld(236, 0, null, null, 5, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                  \"])), (_l()(), i1.ɵeld(238, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"bottom\", \"right\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(239, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor], null, null), (_l()(), i1.ɵted(-1, 0, [\"Bottom Right\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n          \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], null, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 39).disabled || null); _ck(_v, 38, 0, currVal_0); var currVal_1 = (i1.ɵnov(_v, 55).disabled || null); _ck(_v, 54, 0, currVal_1); var currVal_2 = (i1.ɵnov(_v, 71).disabled || null); _ck(_v, 70, 0, currVal_2); var currVal_3 = (i1.ɵnov(_v, 90).disabled || null); _ck(_v, 89, 0, currVal_3); var currVal_4 = (i1.ɵnov(_v, 106).disabled || null); _ck(_v, 105, 0, currVal_4); var currVal_5 = (i1.ɵnov(_v, 122).disabled || null); _ck(_v, 121, 0, currVal_5); var currVal_6 = (i1.ɵnov(_v, 138).disabled || null); _ck(_v, 137, 0, currVal_6); var currVal_7 = (i1.ɵnov(_v, 154).disabled || null); _ck(_v, 153, 0, currVal_7); var currVal_8 = (i1.ɵnov(_v, 195).disabled || null); _ck(_v, 194, 0, currVal_8); var currVal_9 = (i1.ɵnov(_v, 202).disabled || null); _ck(_v, 201, 0, currVal_9); var currVal_10 = (i1.ɵnov(_v, 209).disabled || null); _ck(_v, 208, 0, currVal_10); var currVal_11 = (i1.ɵnov(_v, 225).disabled || null); _ck(_v, 224, 0, currVal_11); var currVal_12 = (i1.ɵnov(_v, 232).disabled || null); _ck(_v, 231, 0, currVal_12); var currVal_13 = (i1.ɵnov(_v, 239).disabled || null); _ck(_v, 238, 0, currVal_13); }); }\nexport function View_NotificationsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-notifications\", [], null, null, null, View_NotificationsComponent_0, RenderType_NotificationsComponent)), i1.ɵdid(1, 114688, null, 0, i6.NotificationsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar NotificationsComponentNgFactory = i1.ɵccf(\"app-notifications\", i6.NotificationsComponent, View_NotificationsComponent_Host_0, {}, {}, []);\nexport { NotificationsComponentNgFactory as NotificationsComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notifications/notifications.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notifications/notifications.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"card\">\n          <div class=\"card-header card-header-danger\">\n              <h3 class=\"card-title\">Notifications</h3>\n              <p class=\"card-category\">Handcrafted by our friend\n                  <a target=\"_blank\" href=\"https://github.com/mouse0270\">Robert McIntosh</a>. Please checkout the\n                  <a href=\"http://bootstrap-notify.remabledesigns.com/\" target=\"_blank\">full documentation.</a>\n              </p>\n          </div>\n          <div class=\"card-body\">\n              <div class=\"row\">\n                  <div class=\"col-md-6\">\n                      <h4 class=\"card-title\">Notifications Style</h4>\n                      <div class=\"alert alert-info\">\n                          <span>This is a plain notification</span>\n                      </div>\n                      <div class=\"alert alert-info\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>This is a notification with close button.</span>\n                      </div>\n                      <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\n                          <i class=\"material-icons\" data-notify=\"icon\">add_alert</i>\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span data-notify=\"message\">This is a notification with close button and icon.</span>\n                      </div>\n                      <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\n                          <i class=\"material-icons\" data-notify=\"icon\">add_alert</i>\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span data-notify=\"message\">This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.</span>\n                      </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                      <h4 class=\"card-title\">Notification states</h4>\n                      <div class=\"alert alert-info\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Info - </b> This is a regular notification made with \".alert-info\"</span>\n                      </div>\n                      <div class=\"alert alert-success\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Success - </b> This is a regular notification made with \".alert-success\"</span>\n                      </div>\n                      <div class=\"alert alert-warning\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Warning - </b> This is a regular notification made with \".alert-warning\"</span>\n                      </div>\n                      <div class=\"alert alert-danger\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Danger - </b> This is a regular notification made with \".alert-danger\"</span>\n                      </div>\n                      <div class=\"alert alert-primary\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Primary - </b> This is a regular notification made with \".alert-primary\"</span>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-12\">\n              <div class=\"places-buttons\">\n                  <div class=\"row\">\n                      <div class=\"col-md-6 ml-auto mr-auto text-center\">\n                          <h4 class=\"card-title\">\n                              Notifications Places\n                              <p class=\"category\">Click to view notifications</p>\n                          </h4>\n                      </div>\n                  </div>\n                  <div class=\"row\">\n                      <div class=\"col-lg-8 col-md-10 ml-auto mr-auto\">\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','left')\">Top Left</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','center')\">Top Center</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','right')\">Top Right</button>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"row\">\n                      <div class=\"col-lg-8 col-md-10 ml-auto mr-auto\">\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','left')\">Bottom Left</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','center')\">Bottom Center</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','right')\">Bottom Right</button>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notifications/notifications.component.html","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upgrade',\n  templateUrl: './upgrade.component.html',\n  styleUrls: ['./upgrade.component.css']\n})\nexport class UpgradeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/upgrade/upgrade.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./upgrade.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./upgrade.component\";\nvar styles_UpgradeComponent = [i0.styles];\nvar RenderType_UpgradeComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UpgradeComponent, data: {} });\nexport { RenderType_UpgradeComponent as RenderType_UpgradeComponent };\nexport function View_UpgradeComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 160, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n    \"])), (_l()(), i1.ɵeld(2, 0, null, null, 157, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵeld(4, 0, null, null, 154, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵeld(6, 0, null, null, 151, \"div\", [[\"class\", \"col-md-8 ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵeld(8, 0, null, null, 148, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(10, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Dashboard PRO Angular\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Are you looking for more components? Please check our Premium Version of Material Dashboard Angular.\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵeld(19, 0, null, null, 136, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵeld(21, 0, null, null, 133, \"div\", [[\"class\", \"table-responsive table-upgrade\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵeld(23, 0, null, null, 130, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(25, 0, null, null, 12, \"thead\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(27, 0, null, null, 9, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(29, 0, null, null, 0, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(31, 0, null, null, 1, \"th\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Free\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(34, 0, null, null, 1, \"th\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"PRO\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵeld(39, 0, null, null, 113, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(41, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(43, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Components\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(46, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"60\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(49, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"200\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(53, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(55, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Plugins\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(58, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"2\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(61, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"15\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(65, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(67, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Example Pages\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(70, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"3\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(73, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"27\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(77, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(79, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Login, Register, Pricing, Lock Pages\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(82, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(83, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(85, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(86, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(89, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(91, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"DataTables, VectorMap, SweetAlert, Wizard, jQueryValidation, FullCalendar etc...\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(94, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(95, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(97, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(98, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(101, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(103, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Mini Sidebar\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(106, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(107, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(109, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(110, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(113, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(115, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Premium Support\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(118, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(119, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(121, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(122, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(125, 0, null, null, 9, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(127, 0, null, null, 0, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(129, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Free\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(132, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Just $59\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵeld(136, 0, null, null, 15, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(138, 0, null, null, 0, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(140, 0, null, null, 4, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                            \"])), (_l()(), i1.ɵeld(142, 0, null, null, 1, \"a\", [[\"class\", \"btn btn-round btn-fill btn-default disabled\"], [\"href\", \"#\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Current Version\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵeld(146, 0, null, null, 4, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                                            \"])), (_l()(), i1.ɵeld(148, 0, null, null, 1, \"a\", [[\"class\", \"btn btn-round btn-fill btn-info\"], [\"href\", \"https://www.creative-tim.com/product/material-dashboard-pro-angular2?ref=md-free-angular-upgrade-live\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Upgrade to PRO\"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                            \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], null, null); }\nexport function View_UpgradeComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-upgrade\", [], null, null, null, View_UpgradeComponent_0, RenderType_UpgradeComponent)), i1.ɵdid(1, 114688, null, 0, i2.UpgradeComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UpgradeComponentNgFactory = i1.ɵccf(\"app-upgrade\", i2.UpgradeComponent, View_UpgradeComponent_Host_0, {}, {}, []);\nexport { UpgradeComponentNgFactory as UpgradeComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/upgrade/upgrade.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/upgrade/upgrade.component.css.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 ml-auto mr-auto\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Material Dashboard PRO Angular</h4>\n                        <p class=\"card-category\">Are you looking for more components? Please check our Premium Version of Material Dashboard Angular.</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive table-upgrade\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th class=\"text-center\">Free</th>\n                                        <th class=\"text-center\">PRO</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>Components</td>\n                                        <td class=\"text-center\">60</td>\n                                        <td class=\"text-center\">200</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Plugins</td>\n                                        <td class=\"text-center\">2</td>\n                                        <td class=\"text-center\">15</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Example Pages</td>\n                                        <td class=\"text-center\">3</td>\n                                        <td class=\"text-center\">27</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Login, Register, Pricing, Lock Pages</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td>DataTables, VectorMap, SweetAlert, Wizard, jQueryValidation, FullCalendar etc...</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Mini Sidebar</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Premium Support</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td></td>\n                                        <td class=\"text-center\">Free</td>\n                                        <td class=\"text-center\">Just $59</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"text-center\"></td>\n                                        <td class=\"text-center\">\n                                            <a href=\"#\" class=\"btn btn-round btn-fill btn-default disabled\">Current Version</a>\n                                        </td>\n                                        <td class=\"text-center\">\n                                            <a target=\"_blank\" href=\"https://www.creative-tim.com/product/material-dashboard-pro-angular2?ref=md-free-angular-upgrade-live\" class=\"btn btn-round btn-fill btn-info\">Upgrade to PRO</a>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/upgrade/upgrade.component.html","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./admin-layout.module\";\nimport * as i2 from \"../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i3 from \"../../dashboard/dashboard.component.ngfactory\";\nimport * as i4 from \"../../user-profile/user-profile.component.ngfactory\";\nimport * as i5 from \"../../table-list/table-list.component.ngfactory\";\nimport * as i6 from \"../../typography/typography.component.ngfactory\";\nimport * as i7 from \"../../icons/icons.component.ngfactory\";\nimport * as i8 from \"../../maps/maps.component.ngfactory\";\nimport * as i9 from \"../../notifications/notifications.component.ngfactory\";\nimport * as i10 from \"../../upgrade/upgrade.component.ngfactory\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/forms\";\nimport * as i13 from \"@angular/cdk/bidi\";\nimport * as i14 from \"@angular/cdk/platform\";\nimport * as i15 from \"@angular/cdk/a11y\";\nimport * as i16 from \"@angular/material/core\";\nimport * as i17 from \"@angular/cdk/scrolling\";\nimport * as i18 from \"@angular/cdk/overlay\";\nimport * as i19 from \"@angular/cdk/layout\";\nimport * as i20 from \"@angular/material/tooltip\";\nimport * as i21 from \"@angular/router\";\nimport * as i22 from \"@angular/material/button\";\nimport * as i23 from \"@angular/material/form-field\";\nimport * as i24 from \"@angular/material/input\";\nimport * as i25 from \"@angular/cdk/portal\";\nimport * as i26 from \"../../dashboard/dashboard.component\";\nimport * as i27 from \"../../user-profile/user-profile.component\";\nimport * as i28 from \"../../table-list/table-list.component\";\nimport * as i29 from \"../../typography/typography.component\";\nimport * as i30 from \"../../icons/icons.component\";\nimport * as i31 from \"../../maps/maps.component\";\nimport * as i32 from \"../../notifications/notifications.component\";\nimport * as i33 from \"../../upgrade/upgrade.component\";\nvar AdminLayoutModuleNgFactory = i0.ɵcmf(i1.AdminLayoutModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.TooltipComponentNgFactory, i3.DashboardComponentNgFactory, i4.UserProfileComponentNgFactory, i5.TableListComponentNgFactory, i6.TypographyComponentNgFactory, i7.IconsComponentNgFactory, i8.MapsComponentNgFactory, i9.NotificationsComponentNgFactory, i10.UpgradeComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i11.NgLocalization, i11.NgLocaleLocalization, [i0.LOCALE_ID, [2, i11.ɵa]]), i0.ɵmpd(4608, i12.ɵi, i12.ɵi, []), i0.ɵmpd(6144, i13.DIR_DOCUMENT, null, [i11.DOCUMENT]), i0.ɵmpd(4608, i13.Directionality, i13.Directionality, [[2, i13.DIR_DOCUMENT]]), i0.ɵmpd(4608, i14.Platform, i14.Platform, []), i0.ɵmpd(4608, i15.InteractivityChecker, i15.InteractivityChecker, [i14.Platform]), i0.ɵmpd(4608, i15.FocusTrapFactory, i15.FocusTrapFactory, [i15.InteractivityChecker, i0.NgZone, i11.DOCUMENT]), i0.ɵmpd(136192, i15.AriaDescriber, i15.ARIA_DESCRIBER_PROVIDER_FACTORY, [[3, i15.AriaDescriber], i11.DOCUMENT]), i0.ɵmpd(5120, i15.LiveAnnouncer, i15.LIVE_ANNOUNCER_PROVIDER_FACTORY, [[3, i15.LiveAnnouncer], [2, i15.LIVE_ANNOUNCER_ELEMENT_TOKEN], i11.DOCUMENT]), i0.ɵmpd(5120, i15.FocusMonitor, i15.FOCUS_MONITOR_PROVIDER_FACTORY, [[3, i15.FocusMonitor], i0.NgZone, i14.Platform]), i0.ɵmpd(4608, i16.ErrorStateMatcher, i16.ErrorStateMatcher, []), i0.ɵmpd(5120, i17.ScrollDispatcher, i17.SCROLL_DISPATCHER_PROVIDER_FACTORY, [[3, i17.ScrollDispatcher], i0.NgZone, i14.Platform]), i0.ɵmpd(5120, i17.ViewportRuler, i17.VIEWPORT_RULER_PROVIDER_FACTORY, [[3, i17.ViewportRuler], i14.Platform, i0.NgZone]), i0.ɵmpd(4608, i18.ScrollStrategyOptions, i18.ScrollStrategyOptions, [i17.ScrollDispatcher, i17.ViewportRuler, i0.NgZone, i11.DOCUMENT]), i0.ɵmpd(5120, i18.OverlayContainer, i18.ɵa, [[3, i18.OverlayContainer], i11.DOCUMENT]), i0.ɵmpd(4608, i18.OverlayPositionBuilder, i18.OverlayPositionBuilder, [i17.ViewportRuler, i11.DOCUMENT]), i0.ɵmpd(5120, i18.OverlayKeyboardDispatcher, i18.ɵf, [[3, i18.OverlayKeyboardDispatcher], i11.DOCUMENT]), i0.ɵmpd(4608, i18.Overlay, i18.Overlay, [i18.ScrollStrategyOptions, i18.OverlayContainer, i0.ComponentFactoryResolver, i18.OverlayPositionBuilder, i18.OverlayKeyboardDispatcher, i0.ApplicationRef, i0.Injector, i0.NgZone, i11.DOCUMENT]), i0.ɵmpd(5120, i18.ɵc, i18.ɵd, [i18.Overlay]), i0.ɵmpd(4608, i19.MediaMatcher, i19.MediaMatcher, [i14.Platform]), i0.ɵmpd(135680, i19.BreakpointObserver, i19.BreakpointObserver, [i19.MediaMatcher, i0.NgZone]), i0.ɵmpd(5120, i20.MAT_TOOLTIP_SCROLL_STRATEGY, i20.MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY, [i18.Overlay]), i0.ɵmpd(512, i11.CommonModule, i11.CommonModule, []), i0.ɵmpd(512, i21.RouterModule, i21.RouterModule, [[2, i21.ɵa], [2, i21.Router]]), i0.ɵmpd(512, i12.ɵba, i12.ɵba, []), i0.ɵmpd(512, i12.FormsModule, i12.FormsModule, []), i0.ɵmpd(512, i13.BidiModule, i13.BidiModule, []), i0.ɵmpd(256, i16.MATERIAL_SANITY_CHECKS, true, []), i0.ɵmpd(512, i16.MatCommonModule, i16.MatCommonModule, [[2, i16.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(512, i14.PlatformModule, i14.PlatformModule, []), i0.ɵmpd(512, i16.MatRippleModule, i16.MatRippleModule, []), i0.ɵmpd(512, i15.A11yModule, i15.A11yModule, []), i0.ɵmpd(512, i22.MatButtonModule, i22.MatButtonModule, []), i0.ɵmpd(512, i23.MatFormFieldModule, i23.MatFormFieldModule, []), i0.ɵmpd(512, i24.MatInputModule, i24.MatInputModule, []), i0.ɵmpd(512, i25.PortalModule, i25.PortalModule, []), i0.ɵmpd(512, i17.ScrollDispatchModule, i17.ScrollDispatchModule, []), i0.ɵmpd(512, i18.OverlayModule, i18.OverlayModule, []), i0.ɵmpd(512, i19.LayoutModule, i19.LayoutModule, []), i0.ɵmpd(512, i20.MatTooltipModule, i20.MatTooltipModule, []), i0.ɵmpd(512, i1.AdminLayoutModule, i1.AdminLayoutModule, []), i0.ɵmpd(256, i20.MAT_TOOLTIP_DEFAULT_OPTIONS, { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 }, []), i0.ɵmpd(1024, i21.ROUTES, function () { return [[{ path: \"dashboard\", component: i26.DashboardComponent }, { path: \"user-profile\", component: i27.UserProfileComponent }, { path: \"table-list\", component: i28.TableListComponent }, { path: \"typography\", component: i29.TypographyComponent }, { path: \"icons\", component: i30.IconsComponent }, { path: \"maps\", component: i31.MapsComponent }, { path: \"notifications\", component: i32.NotificationsComponent }, { path: \"upgrade\", component: i33.UpgradeComponent }]]; }, [])]); });\nexport { AdminLayoutModuleNgFactory as AdminLayoutModuleNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layouts/admin-layout/admin-layout.module.ngfactory.js.pre-build-optimizer.js"],"sourceRoot":"webpack:///"}